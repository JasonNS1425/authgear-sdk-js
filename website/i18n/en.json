{
  "_comment": "This file is auto-generated by write-translations.js",
  "localized-strings": {
    "next": "Next",
    "previous": "Previous",
    "tagline": "Documentation site for Skygear SDK JS",
    "docs": {
      "index": {
        "title": "Index"
      },
      "node-client.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "node-client.authcontainer.addloginid": {
        "title": "AuthContainer.addLoginID() method"
      },
      "node-client.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "node-client.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "node-client.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "node-client.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "node-client.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "node-client.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "node-client.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "node-client.authcontainer.listidentities": {
        "title": "AuthContainer.listIdentities() method"
      },
      "node-client.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "node-client.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "node-client.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "node-client.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "node-client.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "node-client.authcontainer": {
        "title": "AuthContainer class"
      },
      "node-client.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "node-client.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "node-client.authcontainer.removeloginid": {
        "title": "AuthContainer.removeLoginID() method"
      },
      "node-client.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "node-client.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "node-client.authcontainer.requestphoneverification": {
        "title": "AuthContainer.requestPhoneVerification() method"
      },
      "node-client.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "node-client.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "node-client.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "node-client.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "node-client.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "node-client.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "node-client.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "node-client.authcontainer.updateloginid": {
        "title": "AuthContainer.updateLoginID() method"
      },
      "node-client.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "node-client.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "node-client.authorizeoptions.loginhint": {
        "title": "AuthorizeOptions.loginHint property"
      },
      "node-client.authorizeoptions": {
        "title": "AuthorizeOptions interface"
      },
      "node-client.authorizeoptions.prompt": {
        "title": "AuthorizeOptions.prompt property"
      },
      "node-client.authorizeoptions.redirecturi": {
        "title": "AuthorizeOptions.redirectURI property"
      },
      "node-client.authorizeoptions.state": {
        "title": "AuthorizeOptions.state property"
      },
      "node-client.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "node-client.authresponse.expiresin": {
        "title": "AuthResponse.expiresIn property"
      },
      "node-client.authresponse": {
        "title": "AuthResponse interface"
      },
      "node-client.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "node-client.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "node-client.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "node-client.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "node-client.baseapiclient.addloginid": {
        "title": "BaseAPIClient.addLoginID() method"
      },
      "node-client.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "node-client.baseapiclient.appendpoint": {
        "title": "BaseAPIClient.appEndpoint property"
      },
      "node-client.baseapiclient.assetendpoint": {
        "title": "BaseAPIClient.assetEndpoint property"
      },
      "node-client.baseapiclient.authendpoint": {
        "title": "BaseAPIClient.authEndpoint property"
      },
      "node-client.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "node-client.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "node-client.baseapiclient.delasset": {
        "title": "BaseAPIClient.delAsset() method"
      },
      "node-client.baseapiclient.delauth": {
        "title": "BaseAPIClient.delAuth() method"
      },
      "node-client.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "node-client.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "node-client.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "node-client.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "node-client.baseapiclient.getasset": {
        "title": "BaseAPIClient.getAsset() method"
      },
      "node-client.baseapiclient.getauth": {
        "title": "BaseAPIClient.getAuth() method"
      },
      "node-client.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "node-client.baseapiclient.getoauthresult": {
        "title": "BaseAPIClient.getOAuthResult() method"
      },
      "node-client.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "node-client.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "node-client.baseapiclient.listidentities": {
        "title": "BaseAPIClient.listIdentities() method"
      },
      "node-client.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "node-client.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "node-client.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "node-client.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "node-client.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "node-client.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "node-client.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "node-client.baseapiclient.oauthchallenge": {
        "title": "BaseAPIClient.oauthChallenge() method"
      },
      "node-client.baseapiclient.oauthhandler": {
        "title": "BaseAPIClient.oauthHandler() method"
      },
      "node-client.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "node-client.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "node-client.baseapiclient.postasset": {
        "title": "BaseAPIClient.postAsset() method"
      },
      "node-client.baseapiclient.postauth": {
        "title": "BaseAPIClient.postAuth() method"
      },
      "node-client.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "node-client.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "node-client.baseapiclient.removeloginid": {
        "title": "BaseAPIClient.removeLoginID() method"
      },
      "node-client.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "node-client.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "node-client.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "node-client.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "node-client.baseapiclient.requestphoneverification": {
        "title": "BaseAPIClient.requestPhoneVerification() method"
      },
      "node-client.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "node-client.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "node-client.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "node-client.baseapiclient.setaccesstokenandexpiresin": {
        "title": "BaseAPIClient.setAccessTokenAndExpiresIn() method"
      },
      "node-client.baseapiclient.setendpoint": {
        "title": "BaseAPIClient.setEndpoint() method"
      },
      "node-client.baseapiclient.setshouldnotrefreshtoken": {
        "title": "BaseAPIClient.setShouldNotRefreshToken() method"
      },
      "node-client.baseapiclient.setshouldrefreshtokennow": {
        "title": "BaseAPIClient.setShouldRefreshTokenNow() method"
      },
      "node-client.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "node-client.baseapiclient.updateloginid": {
        "title": "BaseAPIClient.updateLoginID() method"
      },
      "node-client.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "node-client.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "node-client.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "node-client.bytearray.length": {
        "title": "ByteArray.length property"
      },
      "node-client.bytearray": {
        "title": "ByteArray interface"
      },
      "node-client.cancel": {
        "title": "CANCEL variable"
      },
      "node-client.cancelerror": {
        "title": "CancelError class"
      },
      "node-client.challengeresponse.expire_at": {
        "title": "ChallengeResponse.expire\\_at property"
      },
      "node-client.challengeresponse": {
        "title": "ChallengeResponse interface"
      },
      "node-client.challengeresponse.token": {
        "title": "ChallengeResponse.token property"
      },
      "node-client.configureoptions.appendpoint": {
        "title": "ConfigureOptions.appEndpoint property"
      },
      "node-client.configureoptions.assetendpoint": {
        "title": "ConfigureOptions.assetEndpoint property"
      },
      "node-client.configureoptions.authendpoint": {
        "title": "ConfigureOptions.authEndpoint property"
      },
      "node-client.configureoptions.clientid": {
        "title": "ConfigureOptions.clientID property"
      },
      "node-client.configureoptions": {
        "title": "ConfigureOptions interface"
      },
      "node-client.container._configure": {
        "title": "Container.\\_configure() method"
      },
      "node-client.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "node-client.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "node-client.container.classicauth": {
        "title": "Container.classicAuth property"
      },
      "node-client.container.fetch": {
        "title": "Container.fetch() method"
      },
      "node-client.container": {
        "title": "Container class"
      },
      "node-client.container.name": {
        "title": "Container.name property"
      },
      "node-client.container.storage": {
        "title": "Container.storage property"
      },
      "node-client.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "node-client.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "node-client.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "node-client.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "node-client.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "node-client.containerstorage.delanonymouskeyid": {
        "title": "ContainerStorage.delAnonymousKeyID() method"
      },
      "node-client.containerstorage.deloauthcodeverifier": {
        "title": "ContainerStorage.delOAuthCodeVerifier() method"
      },
      "node-client.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "node-client.containerstorage.deloidccodeverifier": {
        "title": "ContainerStorage.delOIDCCodeVerifier() method"
      },
      "node-client.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "node-client.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "node-client.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "node-client.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "node-client.containerstorage.getanonymouskeyid": {
        "title": "ContainerStorage.getAnonymousKeyID() method"
      },
      "node-client.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "node-client.containerstorage.getoauthcodeverifier": {
        "title": "ContainerStorage.getOAuthCodeVerifier() method"
      },
      "node-client.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "node-client.containerstorage.getoidccodeverifier": {
        "title": "ContainerStorage.getOIDCCodeVerifier() method"
      },
      "node-client.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "node-client.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "node-client.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "node-client.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "node-client.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "node-client.containerstorage.setanonymouskeyid": {
        "title": "ContainerStorage.setAnonymousKeyID() method"
      },
      "node-client.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "node-client.containerstorage.setoauthcodeverifier": {
        "title": "ContainerStorage.setOAuthCodeVerifier() method"
      },
      "node-client.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "node-client.containerstorage.setoidccodeverifier": {
        "title": "ContainerStorage.setOIDCCodeVerifier() method"
      },
      "node-client.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "node-client.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "node-client.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "node-client.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "node-client.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "node-client.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "node-client.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "node-client.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "node-client.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "node-client.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "node-client.decodeerror": {
        "title": "decodeError() function"
      },
      "node-client.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "node-client.decodesession": {
        "title": "decodeSession() function"
      },
      "node-client.decodeuser": {
        "title": "decodeUser() function"
      },
      "node-client.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "node-client.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "node-client.encodeuser": {
        "title": "encodeUser() function"
      },
      "node-client.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "node-client.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "node-client.fulloauthauthorizationurloptions": {
        "title": "FullOAuthAuthorizationURLOptions type"
      },
      "node-client.getdevicename": {
        "title": "getDeviceName() function"
      },
      "node-client.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "node-client.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "node-client.globaljsoncontainerstorage.delanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.delAnonymousKeyID() method"
      },
      "node-client.globaljsoncontainerstorage.deloauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.delOAuthCodeVerifier() method"
      },
      "node-client.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "node-client.globaljsoncontainerstorage.deloidccodeverifier": {
        "title": "GlobalJSONContainerStorage.delOIDCCodeVerifier() method"
      },
      "node-client.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "node-client.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "node-client.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "node-client.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "node-client.globaljsoncontainerstorage.getanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.getAnonymousKeyID() method"
      },
      "node-client.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "node-client.globaljsoncontainerstorage.getoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.getOAuthCodeVerifier() method"
      },
      "node-client.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "node-client.globaljsoncontainerstorage.getoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.getOIDCCodeVerifier() method"
      },
      "node-client.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "node-client.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "node-client.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "node-client.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "node-client.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "node-client.globaljsoncontainerstorage.setanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.setAnonymousKeyID() method"
      },
      "node-client.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "node-client.globaljsoncontainerstorage.setoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.setOAuthCodeVerifier() method"
      },
      "node-client.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "node-client.globaljsoncontainerstorage.setoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.setOIDCCodeVerifier() method"
      },
      "node-client.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "node-client.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "node-client.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "node-client.identity.claims": {
        "title": "Identity.claims property"
      },
      "node-client.identity": {
        "title": "Identity interface"
      },
      "node-client.identity.type": {
        "title": "Identity.type property"
      },
      "node-client.identityclaims.email": {
        "title": "IdentityClaims.email property"
      },
      "node-client.identityclaims": {
        "title": "IdentityClaims interface"
      },
      "node-client.imageprocessingpipelinebuilder._constructor_": {
        "title": "ImageProcessingPipelineBuilder.(constructor)"
      },
      "node-client.imageprocessingpipelinebuilder.format": {
        "title": "ImageProcessingPipelineBuilder.format() method"
      },
      "node-client.imageprocessingpipelinebuilder.getname": {
        "title": "ImageProcessingPipelineBuilder.getName() method"
      },
      "node-client.imageprocessingpipelinebuilder.getvalue": {
        "title": "ImageProcessingPipelineBuilder.getValue() method"
      },
      "node-client.imageprocessingpipelinebuilder": {
        "title": "ImageProcessingPipelineBuilder class"
      },
      "node-client.imageprocessingpipelinebuilder.quality": {
        "title": "ImageProcessingPipelineBuilder.quality() method"
      },
      "node-client.imageprocessingpipelinebuilder.resize": {
        "title": "ImageProcessingPipelineBuilder.resize() method"
      },
      "node-client.imageprocessingpipelinebuilder.settourlstring": {
        "title": "ImageProcessingPipelineBuilder.setToURLString() method"
      },
      "node-client.imageprocessingpipelinebuilderresizeoptions.color": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.color property"
      },
      "node-client.imageprocessingpipelinebuilderresizeoptions.longerside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.longerSide property"
      },
      "node-client.imageprocessingpipelinebuilderresizeoptions": {
        "title": "ImageProcessingPipelineBuilderResizeOptions interface"
      },
      "node-client.imageprocessingpipelinebuilderresizeoptions.scalingmode": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.scalingMode property"
      },
      "node-client.imageprocessingpipelinebuilderresizeoptions.shorterside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.shorterSide property"
      },
      "node-client.imageprocessingpipelinebuilderresizeoptions.targetheight": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetHeight property"
      },
      "node-client.imageprocessingpipelinebuilderresizeoptions.targetwidth": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetWidth property"
      },
      "node-client.isvalidationerror": {
        "title": "isValidationError() function"
      },
      "node-client.jsonobject": {
        "title": "JSONObject type"
      },
      "node-client.jsonvalue": {
        "title": "JSONValue type"
      },
      "node-client": {
        "title": "node-client package"
      },
      "node-client.memorystoragedriver._constructor_": {
        "title": "MemoryStorageDriver.(constructor)"
      },
      "node-client.memorystoragedriver.backingstore": {
        "title": "MemoryStorageDriver.backingStore property"
      },
      "node-client.memorystoragedriver.del": {
        "title": "MemoryStorageDriver.del() method"
      },
      "node-client.memorystoragedriver.get": {
        "title": "MemoryStorageDriver.get() method"
      },
      "node-client.memorystoragedriver": {
        "title": "MemoryStorageDriver class"
      },
      "node-client.memorystoragedriver.set": {
        "title": "MemoryStorageDriver.set() method"
      },
      "node-client.nodeapiclient.fetchfunction": {
        "title": "NodeAPIClient.fetchFunction property"
      },
      "node-client.nodeapiclient": {
        "title": "NodeAPIClient class"
      },
      "node-client.nodeapiclient.requestclass": {
        "title": "NodeAPIClient.requestClass property"
      },
      "node-client.nodeapiclient.useragent": {
        "title": "NodeAPIClient.userAgent property"
      },
      "node-client.nodeassetcontainer._constructor_": {
        "title": "NodeAssetContainer.(constructor)"
      },
      "node-client.nodeassetcontainer": {
        "title": "NodeAssetContainer class"
      },
      "node-client.nodeassetcontainer.parent": {
        "title": "NodeAssetContainer.parent property"
      },
      "node-client.nodeassetcontainer.upload": {
        "title": "NodeAssetContainer.upload() method"
      },
      "node-client.nodecontainer._constructor_": {
        "title": "NodeContainer.(constructor)"
      },
      "node-client.nodecontainer.asset": {
        "title": "NodeContainer.asset property"
      },
      "node-client.nodecontainer.configure": {
        "title": "NodeContainer.configure() method"
      },
      "node-client.nodecontainer": {
        "title": "NodeContainer class"
      },
      "node-client.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "node-client.oautherror.error_description": {
        "title": "OAuthError.error\\_description property"
      },
      "node-client.oautherror.error_uri": {
        "title": "OAuthError.error\\_uri property"
      },
      "node-client.oautherror.error": {
        "title": "OAuthError.error property"
      },
      "node-client.oautherror": {
        "title": "OAuthError interface"
      },
      "node-client.oautherror.state": {
        "title": "OAuthError.state property"
      },
      "node-client.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "node-client.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "node-client.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "node-client.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "node-client.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "node-client.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "node-client.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "node-client.oauthmanualauthorizationurloptions.action": {
        "title": "OAuthManualAuthorizationURLOptions.action property"
      },
      "node-client.oauthmanualauthorizationurloptions.callbackurl": {
        "title": "OAuthManualAuthorizationURLOptions.callbackURL property"
      },
      "node-client.oauthmanualauthorizationurloptions": {
        "title": "OAuthManualAuthorizationURLOptions interface"
      },
      "node-client.oauthmanualauthorizationurloptions.uxmode": {
        "title": "OAuthManualAuthorizationURLOptions.uxMode property"
      },
      "node-client.oauthmobileappauthorizationurloptions.action": {
        "title": "OAuthMobileAppAuthorizationURLOptions.action property"
      },
      "node-client.oauthmobileappauthorizationurloptions.callbackurl": {
        "title": "OAuthMobileAppAuthorizationURLOptions.callbackURL property"
      },
      "node-client.oauthmobileappauthorizationurloptions": {
        "title": "OAuthMobileAppAuthorizationURLOptions interface"
      },
      "node-client.oauthmobileappauthorizationurloptions.uxmode": {
        "title": "OAuthMobileAppAuthorizationURLOptions.uxMode property"
      },
      "node-client.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "node-client.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "node-client.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "node-client.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "node-client.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "node-client.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "node-client.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "node-client.oidccontainer._constructor_": {
        "title": "OIDCContainer.(constructor)"
      },
      "node-client.oidccontainer._finishauthorization": {
        "title": "OIDCContainer.\\_finishAuthorization() method"
      },
      "node-client.oidccontainer._logout": {
        "title": "OIDCContainer.\\_logout() method"
      },
      "node-client.oidccontainer._setupcodeverifier": {
        "title": "OIDCContainer.\\_setupCodeVerifier() method"
      },
      "node-client.oidccontainer.auth": {
        "title": "OIDCContainer.auth property"
      },
      "node-client.oidccontainer.authorizeendpoint": {
        "title": "OIDCContainer.authorizeEndpoint() method"
      },
      "node-client.oidccontainer.clientid": {
        "title": "OIDCContainer.clientID property"
      },
      "node-client.oidccontainer.isthirdparty": {
        "title": "OIDCContainer.isThirdParty property"
      },
      "node-client.oidccontainer": {
        "title": "OIDCContainer class"
      },
      "node-client.oidccontainer.parent": {
        "title": "OIDCContainer.parent property"
      },
      "node-client.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "node-client.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "node-client.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "node-client.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "node-client.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "node-client.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "node-client.promoteoptions": {
        "title": "PromoteOptions interface"
      },
      "node-client.promoteoptions.redirecturi": {
        "title": "PromoteOptions.redirectURI property"
      },
      "node-client.promoteoptions.state": {
        "title": "PromoteOptions.state property"
      },
      "node-client.session.createdat": {
        "title": "Session.createdAt property"
      },
      "node-client.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "node-client.session.data": {
        "title": "Session.data property"
      },
      "node-client.session.id": {
        "title": "Session.id property"
      },
      "node-client.session.identityid": {
        "title": "Session.identityID property"
      },
      "node-client.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "node-client.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "node-client.session": {
        "title": "Session interface"
      },
      "node-client.session.name": {
        "title": "Session.name property"
      },
      "node-client.session.useragent": {
        "title": "Session.userAgent property"
      },
      "node-client.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "node-client.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "node-client.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "node-client.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "node-client.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "node-client.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "node-client.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "node-client.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "node-client.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "node-client.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "node-client.skygearerror": {
        "title": "SkygearError class"
      },
      "node-client.skygearerror.message": {
        "title": "SkygearError.message property"
      },
      "node-client.skygearerror.name": {
        "title": "SkygearError.name property"
      },
      "node-client.skygearerror.reason": {
        "title": "SkygearError.reason property"
      },
      "node-client.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "node-client.skygearerrornames": {
        "title": "SkygearErrorNames variable"
      },
      "node-client.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "node-client.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "node-client.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "node-client.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "node-client.storagedriver": {
        "title": "StorageDriver interface"
      },
      "node-client.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "node-client.uploadassetoptions.access": {
        "title": "UploadAssetOptions.access property"
      },
      "node-client.uploadassetoptions.headers": {
        "title": "UploadAssetOptions.headers property"
      },
      "node-client.uploadassetoptions": {
        "title": "UploadAssetOptions interface"
      },
      "node-client.uploadassetoptions.prefix": {
        "title": "UploadAssetOptions.prefix property"
      },
      "node-client.uploadassetoptions.size": {
        "title": "UploadAssetOptions.size property"
      },
      "node-client.user.createdat": {
        "title": "User.createdAt property"
      },
      "node-client.user.id": {
        "title": "User.id property"
      },
      "node-client.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "node-client.user.ismanuallyverified": {
        "title": "User.isManuallyVerified property"
      },
      "node-client.user.isverified": {
        "title": "User.isVerified property"
      },
      "node-client.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "node-client.user": {
        "title": "User interface"
      },
      "node-client.user.metadata": {
        "title": "User.metadata property"
      },
      "node-client.validationerror.info": {
        "title": "ValidationError.info property"
      },
      "node-client.validationerror": {
        "title": "ValidationError interface"
      },
      "node-client.validationerror.reason": {
        "title": "ValidationError.reason property"
      },
      "node-client.validationerrorcause": {
        "title": "ValidationErrorCause type"
      },
      "node-client.validationerrorcausebase.details": {
        "title": "ValidationErrorCauseBase.details property"
      },
      "node-client.validationerrorcausebase.kind": {
        "title": "ValidationErrorCauseBase.kind property"
      },
      "node-client.validationerrorcausebase": {
        "title": "ValidationErrorCauseBase interface"
      },
      "node-client.validationerrorcausebase.message": {
        "title": "ValidationErrorCauseBase.message property"
      },
      "node-client.validationerrorcausebase.pointer": {
        "title": "ValidationErrorCauseBase.pointer property"
      },
      "node-client.validationerrorexpectationdetails.expected": {
        "title": "ValidationErrorExpectationDetails.expected property"
      },
      "node-client.validationerrorexpectationdetails": {
        "title": "ValidationErrorExpectationDetails interface"
      },
      "node-client.validationerrorformatdetails.format": {
        "title": "ValidationErrorFormatDetails.format property"
      },
      "node-client.validationerrorformatdetails": {
        "title": "ValidationErrorFormatDetails interface"
      },
      "node-client.validationerrorformatdetails.pattern": {
        "title": "ValidationErrorFormatDetails.pattern property"
      },
      "node-client.validationerrorkind": {
        "title": "ValidationErrorKind type"
      },
      "node-client.validationerrorkinds": {
        "title": "ValidationErrorKinds variable"
      },
      "node-client.validationerrorrangedetails.gt": {
        "title": "ValidationErrorRangeDetails.gt property"
      },
      "node-client.validationerrorrangedetails.gte": {
        "title": "ValidationErrorRangeDetails.gte property"
      },
      "node-client.validationerrorrangedetails.lt": {
        "title": "ValidationErrorRangeDetails.lt property"
      },
      "node-client.validationerrorrangedetails.lte": {
        "title": "ValidationErrorRangeDetails.lte property"
      },
      "node-client.validationerrorrangedetails": {
        "title": "ValidationErrorRangeDetails interface"
      },
      "node-client.validationinvalidconstantcause": {
        "title": "ValidationInvalidConstantCause type"
      },
      "node-client.validationinvalidentryamountcause": {
        "title": "ValidationInvalidEntryAmountCause type"
      },
      "node-client.validationinvalidenumcause": {
        "title": "ValidationInvalidEnumCause type"
      },
      "node-client.validationinvalidnumberrangecause": {
        "title": "ValidationInvalidNumberRangeCause type"
      },
      "node-client.validationinvalidstringformatcause": {
        "title": "ValidationInvalidStringFormatCause type"
      },
      "node-client.validationinvalidstringlengthcause": {
        "title": "ValidationInvalidStringLengthCause type"
      },
      "node-client.validationinvalidtypecause": {
        "title": "ValidationInvalidTypeCause type"
      },
      "node-client.version": {
        "title": "VERSION variable"
      },
      "react-native.addappleidcredentialrevokedlistener": {
        "title": "addAppleIDCredentialRevokedListener() function"
      },
      "react-native.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "react-native.authcontainer.addloginid": {
        "title": "AuthContainer.addLoginID() method"
      },
      "react-native.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "react-native.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "react-native.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "react-native.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "react-native.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "react-native.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "react-native.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "react-native.authcontainer.listidentities": {
        "title": "AuthContainer.listIdentities() method"
      },
      "react-native.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "react-native.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "react-native.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "react-native.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "react-native.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "react-native.authcontainer": {
        "title": "AuthContainer class"
      },
      "react-native.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "react-native.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "react-native.authcontainer.removeloginid": {
        "title": "AuthContainer.removeLoginID() method"
      },
      "react-native.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "react-native.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "react-native.authcontainer.requestphoneverification": {
        "title": "AuthContainer.requestPhoneVerification() method"
      },
      "react-native.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "react-native.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "react-native.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "react-native.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "react-native.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "react-native.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "react-native.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "react-native.authcontainer.updateloginid": {
        "title": "AuthContainer.updateLoginID() method"
      },
      "react-native.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "react-native.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "react-native.authorizeoptions.loginhint": {
        "title": "AuthorizeOptions.loginHint property"
      },
      "react-native.authorizeoptions": {
        "title": "AuthorizeOptions interface"
      },
      "react-native.authorizeoptions.prompt": {
        "title": "AuthorizeOptions.prompt property"
      },
      "react-native.authorizeoptions.redirecturi": {
        "title": "AuthorizeOptions.redirectURI property"
      },
      "react-native.authorizeoptions.state": {
        "title": "AuthorizeOptions.state property"
      },
      "react-native.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "react-native.authresponse.expiresin": {
        "title": "AuthResponse.expiresIn property"
      },
      "react-native.authresponse": {
        "title": "AuthResponse interface"
      },
      "react-native.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "react-native.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "react-native.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "react-native.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "react-native.baseapiclient.addloginid": {
        "title": "BaseAPIClient.addLoginID() method"
      },
      "react-native.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "react-native.baseapiclient.appendpoint": {
        "title": "BaseAPIClient.appEndpoint property"
      },
      "react-native.baseapiclient.assetendpoint": {
        "title": "BaseAPIClient.assetEndpoint property"
      },
      "react-native.baseapiclient.authendpoint": {
        "title": "BaseAPIClient.authEndpoint property"
      },
      "react-native.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "react-native.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "react-native.baseapiclient.delasset": {
        "title": "BaseAPIClient.delAsset() method"
      },
      "react-native.baseapiclient.delauth": {
        "title": "BaseAPIClient.delAuth() method"
      },
      "react-native.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "react-native.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "react-native.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "react-native.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "react-native.baseapiclient.getasset": {
        "title": "BaseAPIClient.getAsset() method"
      },
      "react-native.baseapiclient.getauth": {
        "title": "BaseAPIClient.getAuth() method"
      },
      "react-native.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "react-native.baseapiclient.getoauthresult": {
        "title": "BaseAPIClient.getOAuthResult() method"
      },
      "react-native.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "react-native.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "react-native.baseapiclient.listidentities": {
        "title": "BaseAPIClient.listIdentities() method"
      },
      "react-native.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "react-native.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "react-native.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "react-native.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "react-native.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "react-native.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "react-native.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "react-native.baseapiclient.oauthchallenge": {
        "title": "BaseAPIClient.oauthChallenge() method"
      },
      "react-native.baseapiclient.oauthhandler": {
        "title": "BaseAPIClient.oauthHandler() method"
      },
      "react-native.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "react-native.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "react-native.baseapiclient.postasset": {
        "title": "BaseAPIClient.postAsset() method"
      },
      "react-native.baseapiclient.postauth": {
        "title": "BaseAPIClient.postAuth() method"
      },
      "react-native.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "react-native.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "react-native.baseapiclient.removeloginid": {
        "title": "BaseAPIClient.removeLoginID() method"
      },
      "react-native.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "react-native.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "react-native.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "react-native.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "react-native.baseapiclient.requestphoneverification": {
        "title": "BaseAPIClient.requestPhoneVerification() method"
      },
      "react-native.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "react-native.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "react-native.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "react-native.baseapiclient.setaccesstokenandexpiresin": {
        "title": "BaseAPIClient.setAccessTokenAndExpiresIn() method"
      },
      "react-native.baseapiclient.setendpoint": {
        "title": "BaseAPIClient.setEndpoint() method"
      },
      "react-native.baseapiclient.setshouldnotrefreshtoken": {
        "title": "BaseAPIClient.setShouldNotRefreshToken() method"
      },
      "react-native.baseapiclient.setshouldrefreshtokennow": {
        "title": "BaseAPIClient.setShouldRefreshTokenNow() method"
      },
      "react-native.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "react-native.baseapiclient.updateloginid": {
        "title": "BaseAPIClient.updateLoginID() method"
      },
      "react-native.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "react-native.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "react-native.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "react-native.bytearray.length": {
        "title": "ByteArray.length property"
      },
      "react-native.bytearray": {
        "title": "ByteArray interface"
      },
      "react-native.cancel": {
        "title": "CANCEL variable"
      },
      "react-native.cancelerror": {
        "title": "CancelError class"
      },
      "react-native.challengeresponse.expire_at": {
        "title": "ChallengeResponse.expire\\_at property"
      },
      "react-native.challengeresponse": {
        "title": "ChallengeResponse interface"
      },
      "react-native.challengeresponse.token": {
        "title": "ChallengeResponse.token property"
      },
      "react-native.configureoptions.appendpoint": {
        "title": "ConfigureOptions.appEndpoint property"
      },
      "react-native.configureoptions.assetendpoint": {
        "title": "ConfigureOptions.assetEndpoint property"
      },
      "react-native.configureoptions.authendpoint": {
        "title": "ConfigureOptions.authEndpoint property"
      },
      "react-native.configureoptions.clientid": {
        "title": "ConfigureOptions.clientID property"
      },
      "react-native.configureoptions": {
        "title": "ConfigureOptions interface"
      },
      "react-native.container._configure": {
        "title": "Container.\\_configure() method"
      },
      "react-native.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "react-native.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "react-native.container.classicauth": {
        "title": "Container.classicAuth property"
      },
      "react-native.container.fetch": {
        "title": "Container.fetch() method"
      },
      "react-native.container": {
        "title": "Container class"
      },
      "react-native.container.name": {
        "title": "Container.name property"
      },
      "react-native.container.storage": {
        "title": "Container.storage property"
      },
      "react-native.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "react-native.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "react-native.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "react-native.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "react-native.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "react-native.containerstorage.delanonymouskeyid": {
        "title": "ContainerStorage.delAnonymousKeyID() method"
      },
      "react-native.containerstorage.deloauthcodeverifier": {
        "title": "ContainerStorage.delOAuthCodeVerifier() method"
      },
      "react-native.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "react-native.containerstorage.deloidccodeverifier": {
        "title": "ContainerStorage.delOIDCCodeVerifier() method"
      },
      "react-native.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "react-native.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "react-native.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "react-native.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "react-native.containerstorage.getanonymouskeyid": {
        "title": "ContainerStorage.getAnonymousKeyID() method"
      },
      "react-native.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "react-native.containerstorage.getoauthcodeverifier": {
        "title": "ContainerStorage.getOAuthCodeVerifier() method"
      },
      "react-native.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "react-native.containerstorage.getoidccodeverifier": {
        "title": "ContainerStorage.getOIDCCodeVerifier() method"
      },
      "react-native.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "react-native.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "react-native.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "react-native.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "react-native.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "react-native.containerstorage.setanonymouskeyid": {
        "title": "ContainerStorage.setAnonymousKeyID() method"
      },
      "react-native.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "react-native.containerstorage.setoauthcodeverifier": {
        "title": "ContainerStorage.setOAuthCodeVerifier() method"
      },
      "react-native.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "react-native.containerstorage.setoidccodeverifier": {
        "title": "ContainerStorage.setOIDCCodeVerifier() method"
      },
      "react-native.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "react-native.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "react-native.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "react-native.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "react-native.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "react-native.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "react-native.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "react-native.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "react-native.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "react-native.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "react-native.decodeerror": {
        "title": "decodeError() function"
      },
      "react-native.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "react-native.decodesession": {
        "title": "decodeSession() function"
      },
      "react-native.decodeuser": {
        "title": "decodeUser() function"
      },
      "react-native.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "react-native.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "react-native.encodeuser": {
        "title": "encodeUser() function"
      },
      "react-native.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "react-native.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "react-native.fulloauthauthorizationurloptions": {
        "title": "FullOAuthAuthorizationURLOptions type"
      },
      "react-native.getcredentialstateforuserid": {
        "title": "getCredentialStateForUserID() function"
      },
      "react-native.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "react-native.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "react-native.globaljsoncontainerstorage.delanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.delAnonymousKeyID() method"
      },
      "react-native.globaljsoncontainerstorage.deloauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.delOAuthCodeVerifier() method"
      },
      "react-native.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "react-native.globaljsoncontainerstorage.deloidccodeverifier": {
        "title": "GlobalJSONContainerStorage.delOIDCCodeVerifier() method"
      },
      "react-native.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "react-native.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "react-native.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "react-native.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "react-native.globaljsoncontainerstorage.getanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.getAnonymousKeyID() method"
      },
      "react-native.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "react-native.globaljsoncontainerstorage.getoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.getOAuthCodeVerifier() method"
      },
      "react-native.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "react-native.globaljsoncontainerstorage.getoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.getOIDCCodeVerifier() method"
      },
      "react-native.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "react-native.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "react-native.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "react-native.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "react-native.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "react-native.globaljsoncontainerstorage.setanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.setAnonymousKeyID() method"
      },
      "react-native.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "react-native.globaljsoncontainerstorage.setoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.setOAuthCodeVerifier() method"
      },
      "react-native.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "react-native.globaljsoncontainerstorage.setoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.setOIDCCodeVerifier() method"
      },
      "react-native.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "react-native.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "react-native.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "react-native.identity.claims": {
        "title": "Identity.claims property"
      },
      "react-native.identity": {
        "title": "Identity interface"
      },
      "react-native.identity.type": {
        "title": "Identity.type property"
      },
      "react-native.identityclaims.email": {
        "title": "IdentityClaims.email property"
      },
      "react-native.identityclaims": {
        "title": "IdentityClaims interface"
      },
      "react-native.imageprocessingpipelinebuilder._constructor_": {
        "title": "ImageProcessingPipelineBuilder.(constructor)"
      },
      "react-native.imageprocessingpipelinebuilder.format": {
        "title": "ImageProcessingPipelineBuilder.format() method"
      },
      "react-native.imageprocessingpipelinebuilder.getname": {
        "title": "ImageProcessingPipelineBuilder.getName() method"
      },
      "react-native.imageprocessingpipelinebuilder.getvalue": {
        "title": "ImageProcessingPipelineBuilder.getValue() method"
      },
      "react-native.imageprocessingpipelinebuilder": {
        "title": "ImageProcessingPipelineBuilder class"
      },
      "react-native.imageprocessingpipelinebuilder.quality": {
        "title": "ImageProcessingPipelineBuilder.quality() method"
      },
      "react-native.imageprocessingpipelinebuilder.resize": {
        "title": "ImageProcessingPipelineBuilder.resize() method"
      },
      "react-native.imageprocessingpipelinebuilder.settourlstring": {
        "title": "ImageProcessingPipelineBuilder.setToURLString() method"
      },
      "react-native.imageprocessingpipelinebuilderresizeoptions.color": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.color property"
      },
      "react-native.imageprocessingpipelinebuilderresizeoptions.longerside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.longerSide property"
      },
      "react-native.imageprocessingpipelinebuilderresizeoptions": {
        "title": "ImageProcessingPipelineBuilderResizeOptions interface"
      },
      "react-native.imageprocessingpipelinebuilderresizeoptions.scalingmode": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.scalingMode property"
      },
      "react-native.imageprocessingpipelinebuilderresizeoptions.shorterside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.shorterSide property"
      },
      "react-native.imageprocessingpipelinebuilderresizeoptions.targetheight": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetHeight property"
      },
      "react-native.imageprocessingpipelinebuilderresizeoptions.targetwidth": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetWidth property"
      },
      "react-native.isvalidationerror": {
        "title": "isValidationError() function"
      },
      "react-native.jsonobject": {
        "title": "JSONObject type"
      },
      "react-native.jsonvalue": {
        "title": "JSONValue type"
      },
      "react-native": {
        "title": "react-native package"
      },
      "react-native.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "react-native.oautherror.error_description": {
        "title": "OAuthError.error\\_description property"
      },
      "react-native.oautherror.error_uri": {
        "title": "OAuthError.error\\_uri property"
      },
      "react-native.oautherror.error": {
        "title": "OAuthError.error property"
      },
      "react-native.oautherror": {
        "title": "OAuthError interface"
      },
      "react-native.oautherror.state": {
        "title": "OAuthError.state property"
      },
      "react-native.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "react-native.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "react-native.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "react-native.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "react-native.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "react-native.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "react-native.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "react-native.oauthmanualauthorizationurloptions.action": {
        "title": "OAuthManualAuthorizationURLOptions.action property"
      },
      "react-native.oauthmanualauthorizationurloptions.callbackurl": {
        "title": "OAuthManualAuthorizationURLOptions.callbackURL property"
      },
      "react-native.oauthmanualauthorizationurloptions": {
        "title": "OAuthManualAuthorizationURLOptions interface"
      },
      "react-native.oauthmanualauthorizationurloptions.uxmode": {
        "title": "OAuthManualAuthorizationURLOptions.uxMode property"
      },
      "react-native.oauthmobileappauthorizationurloptions.action": {
        "title": "OAuthMobileAppAuthorizationURLOptions.action property"
      },
      "react-native.oauthmobileappauthorizationurloptions.callbackurl": {
        "title": "OAuthMobileAppAuthorizationURLOptions.callbackURL property"
      },
      "react-native.oauthmobileappauthorizationurloptions": {
        "title": "OAuthMobileAppAuthorizationURLOptions interface"
      },
      "react-native.oauthmobileappauthorizationurloptions.uxmode": {
        "title": "OAuthMobileAppAuthorizationURLOptions.uxMode property"
      },
      "react-native.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "react-native.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "react-native.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "react-native.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "react-native.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "react-native.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "react-native.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "react-native.oidccontainer._constructor_": {
        "title": "OIDCContainer.(constructor)"
      },
      "react-native.oidccontainer._finishauthorization": {
        "title": "OIDCContainer.\\_finishAuthorization() method"
      },
      "react-native.oidccontainer._logout": {
        "title": "OIDCContainer.\\_logout() method"
      },
      "react-native.oidccontainer._setupcodeverifier": {
        "title": "OIDCContainer.\\_setupCodeVerifier() method"
      },
      "react-native.oidccontainer.auth": {
        "title": "OIDCContainer.auth property"
      },
      "react-native.oidccontainer.authorizeendpoint": {
        "title": "OIDCContainer.authorizeEndpoint() method"
      },
      "react-native.oidccontainer.clientid": {
        "title": "OIDCContainer.clientID property"
      },
      "react-native.oidccontainer.isthirdparty": {
        "title": "OIDCContainer.isThirdParty property"
      },
      "react-native.oidccontainer": {
        "title": "OIDCContainer class"
      },
      "react-native.oidccontainer.parent": {
        "title": "OIDCContainer.parent property"
      },
      "react-native.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "react-native.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "react-native.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "react-native.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "react-native.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "react-native.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "react-native.promoteoptions": {
        "title": "PromoteOptions interface"
      },
      "react-native.promoteoptions.redirecturi": {
        "title": "PromoteOptions.redirectURI property"
      },
      "react-native.promoteoptions.state": {
        "title": "PromoteOptions.state property"
      },
      "react-native.reactnativeapiclient.fetchfunction": {
        "title": "ReactNativeAPIClient.fetchFunction property"
      },
      "react-native.reactnativeapiclient": {
        "title": "ReactNativeAPIClient class"
      },
      "react-native.reactnativeapiclient.requestclass": {
        "title": "ReactNativeAPIClient.requestClass property"
      },
      "react-native.reactnativeassetcontainer._constructor_": {
        "title": "ReactNativeAssetContainer.(constructor)"
      },
      "react-native.reactnativeassetcontainer": {
        "title": "ReactNativeAssetContainer class"
      },
      "react-native.reactnativeassetcontainer.parent": {
        "title": "ReactNativeAssetContainer.parent property"
      },
      "react-native.reactnativeassetcontainer.upload": {
        "title": "ReactNativeAssetContainer.upload() method"
      },
      "react-native.reactnativeasyncstoragestoragedriver.del": {
        "title": "ReactNativeAsyncStorageStorageDriver.del() method"
      },
      "react-native.reactnativeasyncstoragestoragedriver.get": {
        "title": "ReactNativeAsyncStorageStorageDriver.get() method"
      },
      "react-native.reactnativeasyncstoragestoragedriver": {
        "title": "ReactNativeAsyncStorageStorageDriver class"
      },
      "react-native.reactnativeasyncstoragestoragedriver.set": {
        "title": "ReactNativeAsyncStorageStorageDriver.set() method"
      },
      "react-native.reactnativeauthcontainer._performoauth": {
        "title": "ReactNativeAuthContainer.\\_performOAuth() method"
      },
      "react-native.reactnativeauthcontainer._performsigninwithapple": {
        "title": "ReactNativeAuthContainer.\\_performSignInWithApple() method"
      },
      "react-native.reactnativeauthcontainer.linkapple": {
        "title": "ReactNativeAuthContainer.linkApple() method"
      },
      "react-native.reactnativeauthcontainer.linkoauthprovider": {
        "title": "ReactNativeAuthContainer.linkOAuthProvider() method"
      },
      "react-native.reactnativeauthcontainer.loginapple": {
        "title": "ReactNativeAuthContainer.loginApple() method"
      },
      "react-native.reactnativeauthcontainer.loginoauthprovider": {
        "title": "ReactNativeAuthContainer.loginOAuthProvider() method"
      },
      "react-native.reactnativeauthcontainer": {
        "title": "ReactNativeAuthContainer class"
      },
      "react-native.reactnativecontainer._constructor_": {
        "title": "ReactNativeContainer.(constructor)"
      },
      "react-native.reactnativecontainer.asset": {
        "title": "ReactNativeContainer.asset property"
      },
      "react-native.reactnativecontainer.auth": {
        "title": "ReactNativeContainer.auth property"
      },
      "react-native.reactnativecontainer.classicauth": {
        "title": "ReactNativeContainer.classicAuth property"
      },
      "react-native.reactnativecontainer.configure": {
        "title": "ReactNativeContainer.configure() method"
      },
      "react-native.reactnativecontainer": {
        "title": "ReactNativeContainer class"
      },
      "react-native.reactnativeoidccontainer._constructor_": {
        "title": "ReactNativeOIDCContainer.(constructor)"
      },
      "react-native.reactnativeoidccontainer._setupcodeverifier": {
        "title": "ReactNativeOIDCContainer.\\_setupCodeVerifier() method"
      },
      "react-native.reactnativeoidccontainer.authenticateanonymously": {
        "title": "ReactNativeOIDCContainer.authenticateAnonymously() method"
      },
      "react-native.reactnativeoidccontainer.authorize": {
        "title": "ReactNativeOIDCContainer.authorize() method"
      },
      "react-native.reactnativeoidccontainer.clientid": {
        "title": "ReactNativeOIDCContainer.clientID property"
      },
      "react-native.reactnativeoidccontainer.isthirdparty": {
        "title": "ReactNativeOIDCContainer.isThirdParty property"
      },
      "react-native.reactnativeoidccontainer.logout": {
        "title": "ReactNativeOIDCContainer.logout() method"
      },
      "react-native.reactnativeoidccontainer": {
        "title": "ReactNativeOIDCContainer class"
      },
      "react-native.reactnativeoidccontainer.openurl": {
        "title": "ReactNativeOIDCContainer.openURL() method"
      },
      "react-native.reactnativeoidccontainer.promoteanonymoususer": {
        "title": "ReactNativeOIDCContainer.promoteAnonymousUser() method"
      },
      "react-native.session.createdat": {
        "title": "Session.createdAt property"
      },
      "react-native.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "react-native.session.data": {
        "title": "Session.data property"
      },
      "react-native.session.id": {
        "title": "Session.id property"
      },
      "react-native.session.identityid": {
        "title": "Session.identityID property"
      },
      "react-native.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "react-native.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "react-native.session": {
        "title": "Session interface"
      },
      "react-native.session.name": {
        "title": "Session.name property"
      },
      "react-native.session.useragent": {
        "title": "Session.userAgent property"
      },
      "react-native.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "react-native.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "react-native.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "react-native.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "react-native.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "react-native.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "react-native.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "react-native.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "react-native.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "react-native.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "react-native.skygearerror": {
        "title": "SkygearError class"
      },
      "react-native.skygearerror.message": {
        "title": "SkygearError.message property"
      },
      "react-native.skygearerror.name": {
        "title": "SkygearError.name property"
      },
      "react-native.skygearerror.reason": {
        "title": "SkygearError.reason property"
      },
      "react-native.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "react-native.skygearerrornames": {
        "title": "SkygearErrorNames variable"
      },
      "react-native.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "react-native.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "react-native.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "react-native.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "react-native.storagedriver": {
        "title": "StorageDriver interface"
      },
      "react-native.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "react-native.uploadassetoptions.access": {
        "title": "UploadAssetOptions.access property"
      },
      "react-native.uploadassetoptions.headers": {
        "title": "UploadAssetOptions.headers property"
      },
      "react-native.uploadassetoptions": {
        "title": "UploadAssetOptions interface"
      },
      "react-native.uploadassetoptions.onuploadprogress": {
        "title": "UploadAssetOptions.onUploadProgress property"
      },
      "react-native.uploadassetoptions.prefix": {
        "title": "UploadAssetOptions.prefix property"
      },
      "react-native.user.createdat": {
        "title": "User.createdAt property"
      },
      "react-native.user.id": {
        "title": "User.id property"
      },
      "react-native.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "react-native.user.ismanuallyverified": {
        "title": "User.isManuallyVerified property"
      },
      "react-native.user.isverified": {
        "title": "User.isVerified property"
      },
      "react-native.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "react-native.user": {
        "title": "User interface"
      },
      "react-native.user.metadata": {
        "title": "User.metadata property"
      },
      "react-native.validationerror.info": {
        "title": "ValidationError.info property"
      },
      "react-native.validationerror": {
        "title": "ValidationError interface"
      },
      "react-native.validationerror.reason": {
        "title": "ValidationError.reason property"
      },
      "react-native.validationerrorcause": {
        "title": "ValidationErrorCause type"
      },
      "react-native.validationerrorcausebase.details": {
        "title": "ValidationErrorCauseBase.details property"
      },
      "react-native.validationerrorcausebase.kind": {
        "title": "ValidationErrorCauseBase.kind property"
      },
      "react-native.validationerrorcausebase": {
        "title": "ValidationErrorCauseBase interface"
      },
      "react-native.validationerrorcausebase.message": {
        "title": "ValidationErrorCauseBase.message property"
      },
      "react-native.validationerrorcausebase.pointer": {
        "title": "ValidationErrorCauseBase.pointer property"
      },
      "react-native.validationerrorexpectationdetails.expected": {
        "title": "ValidationErrorExpectationDetails.expected property"
      },
      "react-native.validationerrorexpectationdetails": {
        "title": "ValidationErrorExpectationDetails interface"
      },
      "react-native.validationerrorformatdetails.format": {
        "title": "ValidationErrorFormatDetails.format property"
      },
      "react-native.validationerrorformatdetails": {
        "title": "ValidationErrorFormatDetails interface"
      },
      "react-native.validationerrorformatdetails.pattern": {
        "title": "ValidationErrorFormatDetails.pattern property"
      },
      "react-native.validationerrorkind": {
        "title": "ValidationErrorKind type"
      },
      "react-native.validationerrorkinds": {
        "title": "ValidationErrorKinds variable"
      },
      "react-native.validationerrorrangedetails.gt": {
        "title": "ValidationErrorRangeDetails.gt property"
      },
      "react-native.validationerrorrangedetails.gte": {
        "title": "ValidationErrorRangeDetails.gte property"
      },
      "react-native.validationerrorrangedetails.lt": {
        "title": "ValidationErrorRangeDetails.lt property"
      },
      "react-native.validationerrorrangedetails.lte": {
        "title": "ValidationErrorRangeDetails.lte property"
      },
      "react-native.validationerrorrangedetails": {
        "title": "ValidationErrorRangeDetails interface"
      },
      "react-native.validationinvalidconstantcause": {
        "title": "ValidationInvalidConstantCause type"
      },
      "react-native.validationinvalidentryamountcause": {
        "title": "ValidationInvalidEntryAmountCause type"
      },
      "react-native.validationinvalidenumcause": {
        "title": "ValidationInvalidEnumCause type"
      },
      "react-native.validationinvalidnumberrangecause": {
        "title": "ValidationInvalidNumberRangeCause type"
      },
      "react-native.validationinvalidstringformatcause": {
        "title": "ValidationInvalidStringFormatCause type"
      },
      "react-native.validationinvalidstringlengthcause": {
        "title": "ValidationInvalidStringLengthCause type"
      },
      "react-native.validationinvalidtypecause": {
        "title": "ValidationInvalidTypeCause type"
      },
      "react-native.version": {
        "title": "VERSION variable"
      },
      "web.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "web.authcontainer.addloginid": {
        "title": "AuthContainer.addLoginID() method"
      },
      "web.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "web.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "web.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "web.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "web.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "web.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "web.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "web.authcontainer.listidentities": {
        "title": "AuthContainer.listIdentities() method"
      },
      "web.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "web.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "web.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "web.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "web.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "web.authcontainer": {
        "title": "AuthContainer class"
      },
      "web.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "web.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "web.authcontainer.removeloginid": {
        "title": "AuthContainer.removeLoginID() method"
      },
      "web.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "web.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "web.authcontainer.requestphoneverification": {
        "title": "AuthContainer.requestPhoneVerification() method"
      },
      "web.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "web.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "web.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "web.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "web.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "web.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "web.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "web.authcontainer.updateloginid": {
        "title": "AuthContainer.updateLoginID() method"
      },
      "web.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "web.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "web.authorizeoptions.loginhint": {
        "title": "AuthorizeOptions.loginHint property"
      },
      "web.authorizeoptions": {
        "title": "AuthorizeOptions interface"
      },
      "web.authorizeoptions.prompt": {
        "title": "AuthorizeOptions.prompt property"
      },
      "web.authorizeoptions.redirecturi": {
        "title": "AuthorizeOptions.redirectURI property"
      },
      "web.authorizeoptions.state": {
        "title": "AuthorizeOptions.state property"
      },
      "web.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "web.authresponse.expiresin": {
        "title": "AuthResponse.expiresIn property"
      },
      "web.authresponse": {
        "title": "AuthResponse interface"
      },
      "web.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "web.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "web.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "web.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "web.baseapiclient.addloginid": {
        "title": "BaseAPIClient.addLoginID() method"
      },
      "web.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "web.baseapiclient.appendpoint": {
        "title": "BaseAPIClient.appEndpoint property"
      },
      "web.baseapiclient.assetendpoint": {
        "title": "BaseAPIClient.assetEndpoint property"
      },
      "web.baseapiclient.authendpoint": {
        "title": "BaseAPIClient.authEndpoint property"
      },
      "web.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "web.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "web.baseapiclient.delasset": {
        "title": "BaseAPIClient.delAsset() method"
      },
      "web.baseapiclient.delauth": {
        "title": "BaseAPIClient.delAuth() method"
      },
      "web.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "web.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "web.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "web.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "web.baseapiclient.getasset": {
        "title": "BaseAPIClient.getAsset() method"
      },
      "web.baseapiclient.getauth": {
        "title": "BaseAPIClient.getAuth() method"
      },
      "web.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "web.baseapiclient.getoauthresult": {
        "title": "BaseAPIClient.getOAuthResult() method"
      },
      "web.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "web.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "web.baseapiclient.listidentities": {
        "title": "BaseAPIClient.listIdentities() method"
      },
      "web.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "web.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "web.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "web.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "web.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "web.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "web.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "web.baseapiclient.oauthchallenge": {
        "title": "BaseAPIClient.oauthChallenge() method"
      },
      "web.baseapiclient.oauthhandler": {
        "title": "BaseAPIClient.oauthHandler() method"
      },
      "web.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "web.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "web.baseapiclient.postasset": {
        "title": "BaseAPIClient.postAsset() method"
      },
      "web.baseapiclient.postauth": {
        "title": "BaseAPIClient.postAuth() method"
      },
      "web.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "web.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "web.baseapiclient.removeloginid": {
        "title": "BaseAPIClient.removeLoginID() method"
      },
      "web.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "web.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "web.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "web.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "web.baseapiclient.requestphoneverification": {
        "title": "BaseAPIClient.requestPhoneVerification() method"
      },
      "web.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "web.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "web.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "web.baseapiclient.setaccesstokenandexpiresin": {
        "title": "BaseAPIClient.setAccessTokenAndExpiresIn() method"
      },
      "web.baseapiclient.setendpoint": {
        "title": "BaseAPIClient.setEndpoint() method"
      },
      "web.baseapiclient.setshouldnotrefreshtoken": {
        "title": "BaseAPIClient.setShouldNotRefreshToken() method"
      },
      "web.baseapiclient.setshouldrefreshtokennow": {
        "title": "BaseAPIClient.setShouldRefreshTokenNow() method"
      },
      "web.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "web.baseapiclient.updateloginid": {
        "title": "BaseAPIClient.updateLoginID() method"
      },
      "web.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "web.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "web.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "web.bytearray.length": {
        "title": "ByteArray.length property"
      },
      "web.bytearray": {
        "title": "ByteArray interface"
      },
      "web.cancel": {
        "title": "CANCEL variable"
      },
      "web.cancelerror": {
        "title": "CancelError class"
      },
      "web.challengeresponse.expire_at": {
        "title": "ChallengeResponse.expire\\_at property"
      },
      "web.challengeresponse": {
        "title": "ChallengeResponse interface"
      },
      "web.challengeresponse.token": {
        "title": "ChallengeResponse.token property"
      },
      "web.configureoptions.appendpoint": {
        "title": "ConfigureOptions.appEndpoint property"
      },
      "web.configureoptions.assetendpoint": {
        "title": "ConfigureOptions.assetEndpoint property"
      },
      "web.configureoptions.authendpoint": {
        "title": "ConfigureOptions.authEndpoint property"
      },
      "web.configureoptions.clientid": {
        "title": "ConfigureOptions.clientID property"
      },
      "web.configureoptions.isthirdpartyapp": {
        "title": "ConfigureOptions.isThirdPartyApp property"
      },
      "web.configureoptions": {
        "title": "ConfigureOptions interface"
      },
      "web.container._configure": {
        "title": "Container.\\_configure() method"
      },
      "web.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "web.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "web.container.classicauth": {
        "title": "Container.classicAuth property"
      },
      "web.container.fetch": {
        "title": "Container.fetch() method"
      },
      "web.container": {
        "title": "Container class"
      },
      "web.container.name": {
        "title": "Container.name property"
      },
      "web.container.storage": {
        "title": "Container.storage property"
      },
      "web.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "web.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "web.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "web.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "web.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "web.containerstorage.delanonymouskeyid": {
        "title": "ContainerStorage.delAnonymousKeyID() method"
      },
      "web.containerstorage.deloauthcodeverifier": {
        "title": "ContainerStorage.delOAuthCodeVerifier() method"
      },
      "web.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "web.containerstorage.deloidccodeverifier": {
        "title": "ContainerStorage.delOIDCCodeVerifier() method"
      },
      "web.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "web.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "web.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "web.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "web.containerstorage.getanonymouskeyid": {
        "title": "ContainerStorage.getAnonymousKeyID() method"
      },
      "web.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "web.containerstorage.getoauthcodeverifier": {
        "title": "ContainerStorage.getOAuthCodeVerifier() method"
      },
      "web.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "web.containerstorage.getoidccodeverifier": {
        "title": "ContainerStorage.getOIDCCodeVerifier() method"
      },
      "web.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "web.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "web.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "web.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "web.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "web.containerstorage.setanonymouskeyid": {
        "title": "ContainerStorage.setAnonymousKeyID() method"
      },
      "web.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "web.containerstorage.setoauthcodeverifier": {
        "title": "ContainerStorage.setOAuthCodeVerifier() method"
      },
      "web.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "web.containerstorage.setoidccodeverifier": {
        "title": "ContainerStorage.setOIDCCodeVerifier() method"
      },
      "web.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "web.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "web.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "web.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "web.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "web.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "web.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "web.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "web.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "web.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "web.decodeerror": {
        "title": "decodeError() function"
      },
      "web.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "web.decodesession": {
        "title": "decodeSession() function"
      },
      "web.decodeuser": {
        "title": "decodeUser() function"
      },
      "web.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "web.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "web.encodeuser": {
        "title": "encodeUser() function"
      },
      "web.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "web.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "web.fulloauthauthorizationurloptions": {
        "title": "FullOAuthAuthorizationURLOptions type"
      },
      "web.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "web.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "web.globaljsoncontainerstorage.delanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.delAnonymousKeyID() method"
      },
      "web.globaljsoncontainerstorage.deloauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.delOAuthCodeVerifier() method"
      },
      "web.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "web.globaljsoncontainerstorage.deloidccodeverifier": {
        "title": "GlobalJSONContainerStorage.delOIDCCodeVerifier() method"
      },
      "web.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "web.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "web.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "web.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "web.globaljsoncontainerstorage.getanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.getAnonymousKeyID() method"
      },
      "web.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "web.globaljsoncontainerstorage.getoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.getOAuthCodeVerifier() method"
      },
      "web.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "web.globaljsoncontainerstorage.getoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.getOIDCCodeVerifier() method"
      },
      "web.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "web.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "web.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "web.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "web.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "web.globaljsoncontainerstorage.setanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.setAnonymousKeyID() method"
      },
      "web.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "web.globaljsoncontainerstorage.setoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.setOAuthCodeVerifier() method"
      },
      "web.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "web.globaljsoncontainerstorage.setoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.setOIDCCodeVerifier() method"
      },
      "web.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "web.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "web.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "web.identity.claims": {
        "title": "Identity.claims property"
      },
      "web.identity": {
        "title": "Identity interface"
      },
      "web.identity.type": {
        "title": "Identity.type property"
      },
      "web.identityclaims.email": {
        "title": "IdentityClaims.email property"
      },
      "web.identityclaims": {
        "title": "IdentityClaims interface"
      },
      "web.imageprocessingpipelinebuilder._constructor_": {
        "title": "ImageProcessingPipelineBuilder.(constructor)"
      },
      "web.imageprocessingpipelinebuilder.format": {
        "title": "ImageProcessingPipelineBuilder.format() method"
      },
      "web.imageprocessingpipelinebuilder.getname": {
        "title": "ImageProcessingPipelineBuilder.getName() method"
      },
      "web.imageprocessingpipelinebuilder.getvalue": {
        "title": "ImageProcessingPipelineBuilder.getValue() method"
      },
      "web.imageprocessingpipelinebuilder": {
        "title": "ImageProcessingPipelineBuilder class"
      },
      "web.imageprocessingpipelinebuilder.quality": {
        "title": "ImageProcessingPipelineBuilder.quality() method"
      },
      "web.imageprocessingpipelinebuilder.resize": {
        "title": "ImageProcessingPipelineBuilder.resize() method"
      },
      "web.imageprocessingpipelinebuilder.settourlstring": {
        "title": "ImageProcessingPipelineBuilder.setToURLString() method"
      },
      "web.imageprocessingpipelinebuilderresizeoptions.color": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.color property"
      },
      "web.imageprocessingpipelinebuilderresizeoptions.longerside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.longerSide property"
      },
      "web.imageprocessingpipelinebuilderresizeoptions": {
        "title": "ImageProcessingPipelineBuilderResizeOptions interface"
      },
      "web.imageprocessingpipelinebuilderresizeoptions.scalingmode": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.scalingMode property"
      },
      "web.imageprocessingpipelinebuilderresizeoptions.shorterside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.shorterSide property"
      },
      "web.imageprocessingpipelinebuilderresizeoptions.targetheight": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetHeight property"
      },
      "web.imageprocessingpipelinebuilderresizeoptions.targetwidth": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetWidth property"
      },
      "web.isvalidationerror": {
        "title": "isValidationError() function"
      },
      "web.jsonobject": {
        "title": "JSONObject type"
      },
      "web.jsonvalue": {
        "title": "JSONValue type"
      },
      "web.localstoragestoragedriver": {
        "title": "localStorageStorageDriver variable"
      },
      "web": {
        "title": "web package"
      },
      "web.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "web.oautherror.error_description": {
        "title": "OAuthError.error\\_description property"
      },
      "web.oautherror.error_uri": {
        "title": "OAuthError.error\\_uri property"
      },
      "web.oautherror.error": {
        "title": "OAuthError.error property"
      },
      "web.oautherror": {
        "title": "OAuthError interface"
      },
      "web.oautherror.state": {
        "title": "OAuthError.state property"
      },
      "web.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "web.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "web.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "web.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "web.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "web.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "web.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "web.oauthmanualauthorizationurloptions.action": {
        "title": "OAuthManualAuthorizationURLOptions.action property"
      },
      "web.oauthmanualauthorizationurloptions.callbackurl": {
        "title": "OAuthManualAuthorizationURLOptions.callbackURL property"
      },
      "web.oauthmanualauthorizationurloptions": {
        "title": "OAuthManualAuthorizationURLOptions interface"
      },
      "web.oauthmanualauthorizationurloptions.uxmode": {
        "title": "OAuthManualAuthorizationURLOptions.uxMode property"
      },
      "web.oauthmobileappauthorizationurloptions.action": {
        "title": "OAuthMobileAppAuthorizationURLOptions.action property"
      },
      "web.oauthmobileappauthorizationurloptions.callbackurl": {
        "title": "OAuthMobileAppAuthorizationURLOptions.callbackURL property"
      },
      "web.oauthmobileappauthorizationurloptions": {
        "title": "OAuthMobileAppAuthorizationURLOptions interface"
      },
      "web.oauthmobileappauthorizationurloptions.uxmode": {
        "title": "OAuthMobileAppAuthorizationURLOptions.uxMode property"
      },
      "web.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "web.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "web.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "web.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "web.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "web.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "web.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "web.oidccontainer._constructor_": {
        "title": "OIDCContainer.(constructor)"
      },
      "web.oidccontainer._finishauthorization": {
        "title": "OIDCContainer.\\_finishAuthorization() method"
      },
      "web.oidccontainer._logout": {
        "title": "OIDCContainer.\\_logout() method"
      },
      "web.oidccontainer._setupcodeverifier": {
        "title": "OIDCContainer.\\_setupCodeVerifier() method"
      },
      "web.oidccontainer.auth": {
        "title": "OIDCContainer.auth property"
      },
      "web.oidccontainer.authorizeendpoint": {
        "title": "OIDCContainer.authorizeEndpoint() method"
      },
      "web.oidccontainer.clientid": {
        "title": "OIDCContainer.clientID property"
      },
      "web.oidccontainer.isthirdparty": {
        "title": "OIDCContainer.isThirdParty property"
      },
      "web.oidccontainer": {
        "title": "OIDCContainer class"
      },
      "web.oidccontainer.parent": {
        "title": "OIDCContainer.parent property"
      },
      "web.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "web.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "web.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "web.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "web.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "web.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "web.promoteoptions": {
        "title": "PromoteOptions interface"
      },
      "web.promoteoptions.redirecturi": {
        "title": "PromoteOptions.redirectURI property"
      },
      "web.promoteoptions.state": {
        "title": "PromoteOptions.state property"
      },
      "web.session.createdat": {
        "title": "Session.createdAt property"
      },
      "web.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "web.session.data": {
        "title": "Session.data property"
      },
      "web.session.id": {
        "title": "Session.id property"
      },
      "web.session.identityid": {
        "title": "Session.identityID property"
      },
      "web.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "web.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "web.session": {
        "title": "Session interface"
      },
      "web.session.name": {
        "title": "Session.name property"
      },
      "web.session.useragent": {
        "title": "Session.userAgent property"
      },
      "web.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "web.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "web.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "web.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "web.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "web.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "web.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "web.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "web.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "web.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "web.skygearerror": {
        "title": "SkygearError class"
      },
      "web.skygearerror.message": {
        "title": "SkygearError.message property"
      },
      "web.skygearerror.name": {
        "title": "SkygearError.name property"
      },
      "web.skygearerror.reason": {
        "title": "SkygearError.reason property"
      },
      "web.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "web.skygearerrornames": {
        "title": "SkygearErrorNames variable"
      },
      "web.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "web.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "web.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "web.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "web.storagedriver": {
        "title": "StorageDriver interface"
      },
      "web.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "web.uploadassetoptions.access": {
        "title": "UploadAssetOptions.access property"
      },
      "web.uploadassetoptions.headers": {
        "title": "UploadAssetOptions.headers property"
      },
      "web.uploadassetoptions": {
        "title": "UploadAssetOptions interface"
      },
      "web.uploadassetoptions.onuploadprogress": {
        "title": "UploadAssetOptions.onUploadProgress property"
      },
      "web.uploadassetoptions.prefix": {
        "title": "UploadAssetOptions.prefix property"
      },
      "web.user.createdat": {
        "title": "User.createdAt property"
      },
      "web.user.id": {
        "title": "User.id property"
      },
      "web.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "web.user.ismanuallyverified": {
        "title": "User.isManuallyVerified property"
      },
      "web.user.isverified": {
        "title": "User.isVerified property"
      },
      "web.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "web.user": {
        "title": "User interface"
      },
      "web.user.metadata": {
        "title": "User.metadata property"
      },
      "web.validationerror.info": {
        "title": "ValidationError.info property"
      },
      "web.validationerror": {
        "title": "ValidationError interface"
      },
      "web.validationerror.reason": {
        "title": "ValidationError.reason property"
      },
      "web.validationerrorcause": {
        "title": "ValidationErrorCause type"
      },
      "web.validationerrorcausebase.details": {
        "title": "ValidationErrorCauseBase.details property"
      },
      "web.validationerrorcausebase.kind": {
        "title": "ValidationErrorCauseBase.kind property"
      },
      "web.validationerrorcausebase": {
        "title": "ValidationErrorCauseBase interface"
      },
      "web.validationerrorcausebase.message": {
        "title": "ValidationErrorCauseBase.message property"
      },
      "web.validationerrorcausebase.pointer": {
        "title": "ValidationErrorCauseBase.pointer property"
      },
      "web.validationerrorexpectationdetails.expected": {
        "title": "ValidationErrorExpectationDetails.expected property"
      },
      "web.validationerrorexpectationdetails": {
        "title": "ValidationErrorExpectationDetails interface"
      },
      "web.validationerrorformatdetails.format": {
        "title": "ValidationErrorFormatDetails.format property"
      },
      "web.validationerrorformatdetails": {
        "title": "ValidationErrorFormatDetails interface"
      },
      "web.validationerrorformatdetails.pattern": {
        "title": "ValidationErrorFormatDetails.pattern property"
      },
      "web.validationerrorkind": {
        "title": "ValidationErrorKind type"
      },
      "web.validationerrorkinds": {
        "title": "ValidationErrorKinds variable"
      },
      "web.validationerrorrangedetails.gt": {
        "title": "ValidationErrorRangeDetails.gt property"
      },
      "web.validationerrorrangedetails.gte": {
        "title": "ValidationErrorRangeDetails.gte property"
      },
      "web.validationerrorrangedetails.lt": {
        "title": "ValidationErrorRangeDetails.lt property"
      },
      "web.validationerrorrangedetails.lte": {
        "title": "ValidationErrorRangeDetails.lte property"
      },
      "web.validationerrorrangedetails": {
        "title": "ValidationErrorRangeDetails interface"
      },
      "web.validationinvalidconstantcause": {
        "title": "ValidationInvalidConstantCause type"
      },
      "web.validationinvalidentryamountcause": {
        "title": "ValidationInvalidEntryAmountCause type"
      },
      "web.validationinvalidenumcause": {
        "title": "ValidationInvalidEnumCause type"
      },
      "web.validationinvalidnumberrangecause": {
        "title": "ValidationInvalidNumberRangeCause type"
      },
      "web.validationinvalidstringformatcause": {
        "title": "ValidationInvalidStringFormatCause type"
      },
      "web.validationinvalidstringlengthcause": {
        "title": "ValidationInvalidStringLengthCause type"
      },
      "web.validationinvalidtypecause": {
        "title": "ValidationInvalidTypeCause type"
      },
      "web.version": {
        "title": "VERSION variable"
      },
      "web.webapiclient.fetchfunction": {
        "title": "WebAPIClient.fetchFunction property"
      },
      "web.webapiclient": {
        "title": "WebAPIClient class"
      },
      "web.webapiclient.requestclass": {
        "title": "WebAPIClient.requestClass property"
      },
      "web.webassetcontainer._constructor_": {
        "title": "WebAssetContainer.(constructor)"
      },
      "web.webassetcontainer": {
        "title": "WebAssetContainer class"
      },
      "web.webassetcontainer.parent": {
        "title": "WebAssetContainer.parent property"
      },
      "web.webassetcontainer.upload": {
        "title": "WebAssetContainer.upload() method"
      },
      "web.webauthcontainer._constructor_": {
        "title": "WebAuthContainer.(constructor)"
      },
      "web.webauthcontainer.getlinkredirectresult": {
        "title": "WebAuthContainer.getLinkRedirectResult() method"
      },
      "web.webauthcontainer.getloginredirectresult": {
        "title": "WebAuthContainer.getLoginRedirectResult() method"
      },
      "web.webauthcontainer.linkoauthproviderwithpopup": {
        "title": "WebAuthContainer.linkOAuthProviderWithPopup() method"
      },
      "web.webauthcontainer.linkoauthproviderwithredirect": {
        "title": "WebAuthContainer.linkOAuthProviderWithRedirect() method"
      },
      "web.webauthcontainer.loginoauthproviderwithpopup": {
        "title": "WebAuthContainer.loginOAuthProviderWithPopup() method"
      },
      "web.webauthcontainer.loginoauthproviderwithredirect": {
        "title": "WebAuthContainer.loginOAuthProviderWithRedirect() method"
      },
      "web.webauthcontainer": {
        "title": "WebAuthContainer class"
      },
      "web.webcontainer._constructor_": {
        "title": "WebContainer.(constructor)"
      },
      "web.webcontainer.asset": {
        "title": "WebContainer.asset property"
      },
      "web.webcontainer.auth": {
        "title": "WebContainer.auth property"
      },
      "web.webcontainer.classicauth": {
        "title": "WebContainer.classicAuth property"
      },
      "web.webcontainer.configure": {
        "title": "WebContainer.configure() method"
      },
      "web.webcontainer": {
        "title": "WebContainer class"
      },
      "web.weboidccontainer._constructor_": {
        "title": "WebOIDCContainer.(constructor)"
      },
      "web.weboidccontainer._setupcodeverifier": {
        "title": "WebOIDCContainer.\\_setupCodeVerifier() method"
      },
      "web.weboidccontainer.clientid": {
        "title": "WebOIDCContainer.clientID property"
      },
      "web.weboidccontainer.finishauthorization": {
        "title": "WebOIDCContainer.finishAuthorization() method"
      },
      "web.weboidccontainer.isthirdparty": {
        "title": "WebOIDCContainer.isThirdParty property"
      },
      "web.weboidccontainer.logout": {
        "title": "WebOIDCContainer.logout() method"
      },
      "web.weboidccontainer": {
        "title": "WebOIDCContainer class"
      },
      "web.weboidccontainer.startauthorization": {
        "title": "WebOIDCContainer.startAuthorization() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.authcontainer.accesstoken": {
        "title": "AuthContainer.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.accesstoken": {
        "title": "BaseAPIClient.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client": {
        "title": "node-client package"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.nodeapiclient": {
        "title": "NodeAPIClient class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.authcontainer.accesstoken": {
        "title": "AuthContainer.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.accesstoken": {
        "title": "BaseAPIClient.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native": {
        "title": "react-native package"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.authcontainer.accesstoken": {
        "title": "AuthContainer.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.accesstoken": {
        "title": "BaseAPIClient.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web": {
        "title": "web package"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-index": {
        "title": "Index"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.persistresponse": {
        "title": "AuthContainer.persistResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.updatesession": {
        "title": "AuthContainer.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse.identity": {
        "title": "AuthResponse.identity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.endpoint": {
        "title": "BaseAPIClient.endpoint property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.refresh": {
        "title": "BaseAPIClient.refresh() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.updatesession": {
        "title": "BaseAPIClient.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.auth": {
        "title": "Container.auth property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.configure": {
        "title": "Container.configure() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.extrasessioninfoprovider": {
        "title": "Container.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.fetch": {
        "title": "Container.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.name": {
        "title": "Container.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.storage": {
        "title": "Container.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containeroptions.extrasessioninfoprovider": {
        "title": "ContainerOptions.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.delidentity": {
        "title": "ContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getidentity": {
        "title": "ContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setidentity": {
        "title": "ContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.decodeerror": {
        "title": "decodeError() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.decodesession": {
        "title": "decodeSession() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.decodeuser": {
        "title": "decodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.encodequery": {
        "title": "encodeQuery() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.encodequerycomponent": {
        "title": "encodeQueryComponent() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.encodeuser": {
        "title": "encodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.extrasessioninfooptions.collectdevicename": {
        "title": "ExtraSessionInfoOptions.collectDeviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.extrasessioninfoprovider.getdevicename": {
        "title": "ExtraSessionInfoProvider.getDeviceName() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.extrasessioninfoprovider": {
        "title": "ExtraSessionInfoProvider interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.delidentity": {
        "title": "GlobalJSONContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getidentity": {
        "title": "GlobalJSONContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setidentity": {
        "title": "GlobalJSONContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.identity": {
        "title": "Identity type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.jsonarray": {
        "title": "JSONArray interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.jsonobject": {
        "title": "JSONObject interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.jsonvalue": {
        "title": "JSONValue type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client": {
        "title": "node-client package"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver._constructor_": {
        "title": "MemoryStorageDriver.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver.backingstore": {
        "title": "MemoryStorageDriver.backingStore property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver.del": {
        "title": "MemoryStorageDriver.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver.get": {
        "title": "MemoryStorageDriver.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver": {
        "title": "MemoryStorageDriver class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver.set": {
        "title": "MemoryStorageDriver.set() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeapiclient.fetchfunction": {
        "title": "NodeAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeapiclient": {
        "title": "NodeAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeapiclient.requestclass": {
        "title": "NodeAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeapiclient.useragent": {
        "title": "NodeAPIClient.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodecontainer._constructor_": {
        "title": "NodeContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodecontainer": {
        "title": "NodeContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeextrasessioninfoprovider.getdevicename": {
        "title": "NodeExtraSessionInfoProvider.getDeviceName() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeextrasessioninfoprovider": {
        "title": "NodeExtraSessionInfoProvider class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.realm": {
        "title": "PasswordIdentity.realm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.createdat": {
        "title": "Session.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.data": {
        "title": "Session.data property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.id": {
        "title": "Session.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.identityid": {
        "title": "Session.identityID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session": {
        "title": "Session interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.name": {
        "title": "Session.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.useragent": {
        "title": "Session.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.ssologinoptions.mergerealm": {
        "title": "SSOLoginOptions.mergeRealm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.storagedriver": {
        "title": "StorageDriver interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.createdat": {
        "title": "User.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.id": {
        "title": "User.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.isverified": {
        "title": "User.isVerified property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user": {
        "title": "User interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.metadata": {
        "title": "User.metadata property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.version": {
        "title": "VERSION variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.persistresponse": {
        "title": "AuthContainer.persistResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.updatesession": {
        "title": "AuthContainer.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse.identity": {
        "title": "AuthResponse.identity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.endpoint": {
        "title": "BaseAPIClient.endpoint property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.refresh": {
        "title": "BaseAPIClient.refresh() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.updatesession": {
        "title": "BaseAPIClient.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.auth": {
        "title": "Container.auth property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.configure": {
        "title": "Container.configure() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.extrasessioninfoprovider": {
        "title": "Container.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.fetch": {
        "title": "Container.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.name": {
        "title": "Container.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.storage": {
        "title": "Container.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containeroptions.extrasessioninfoprovider": {
        "title": "ContainerOptions.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.delidentity": {
        "title": "ContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getidentity": {
        "title": "ContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setidentity": {
        "title": "ContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.decodeerror": {
        "title": "decodeError() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.decodesession": {
        "title": "decodeSession() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.decodeuser": {
        "title": "decodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.encodequery": {
        "title": "encodeQuery() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.encodequerycomponent": {
        "title": "encodeQueryComponent() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.encodeuser": {
        "title": "encodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.extrasessioninfooptions.collectdevicename": {
        "title": "ExtraSessionInfoOptions.collectDeviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.extrasessioninfoprovider.getdevicename": {
        "title": "ExtraSessionInfoProvider.getDeviceName() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.extrasessioninfoprovider": {
        "title": "ExtraSessionInfoProvider interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.delidentity": {
        "title": "GlobalJSONContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getidentity": {
        "title": "GlobalJSONContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setidentity": {
        "title": "GlobalJSONContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.identity": {
        "title": "Identity type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.jsonarray": {
        "title": "JSONArray interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.jsonobject": {
        "title": "JSONObject interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.jsonvalue": {
        "title": "JSONValue type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native": {
        "title": "react-native package"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.realm": {
        "title": "PasswordIdentity.realm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeapiclient.fetchfunction": {
        "title": "ReactNativeAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeapiclient": {
        "title": "ReactNativeAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeapiclient.requestclass": {
        "title": "ReactNativeAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeasyncstoragestoragedriver.del": {
        "title": "ReactNativeAsyncStorageStorageDriver.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeasyncstoragestoragedriver.get": {
        "title": "ReactNativeAsyncStorageStorageDriver.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeasyncstoragestoragedriver": {
        "title": "ReactNativeAsyncStorageStorageDriver class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeasyncstoragestoragedriver.set": {
        "title": "ReactNativeAsyncStorageStorageDriver.set() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativecontainer._constructor_": {
        "title": "ReactNativeContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativecontainer": {
        "title": "ReactNativeContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.createdat": {
        "title": "Session.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.data": {
        "title": "Session.data property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.id": {
        "title": "Session.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.identityid": {
        "title": "Session.identityID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session": {
        "title": "Session interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.name": {
        "title": "Session.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.useragent": {
        "title": "Session.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.ssologinoptions.mergerealm": {
        "title": "SSOLoginOptions.mergeRealm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.storagedriver": {
        "title": "StorageDriver interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.createdat": {
        "title": "User.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.id": {
        "title": "User.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.isverified": {
        "title": "User.isVerified property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user": {
        "title": "User interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.metadata": {
        "title": "User.metadata property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.version": {
        "title": "VERSION variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.persistresponse": {
        "title": "AuthContainer.persistResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.updatesession": {
        "title": "AuthContainer.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse.identity": {
        "title": "AuthResponse.identity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.endpoint": {
        "title": "BaseAPIClient.endpoint property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.refresh": {
        "title": "BaseAPIClient.refresh() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.updatesession": {
        "title": "BaseAPIClient.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.auth": {
        "title": "Container.auth property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.configure": {
        "title": "Container.configure() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.extrasessioninfoprovider": {
        "title": "Container.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.fetch": {
        "title": "Container.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.name": {
        "title": "Container.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.storage": {
        "title": "Container.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containeroptions.extrasessioninfoprovider": {
        "title": "ContainerOptions.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.delidentity": {
        "title": "ContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getidentity": {
        "title": "ContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setidentity": {
        "title": "ContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.decodeerror": {
        "title": "decodeError() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.decodesession": {
        "title": "decodeSession() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.decodeuser": {
        "title": "decodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.encodequery": {
        "title": "encodeQuery() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.encodequerycomponent": {
        "title": "encodeQueryComponent() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.encodeuser": {
        "title": "encodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.extrasessioninfooptions.collectdevicename": {
        "title": "ExtraSessionInfoOptions.collectDeviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.extrasessioninfoprovider.getdevicename": {
        "title": "ExtraSessionInfoProvider.getDeviceName() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.extrasessioninfoprovider": {
        "title": "ExtraSessionInfoProvider interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.delidentity": {
        "title": "GlobalJSONContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getidentity": {
        "title": "GlobalJSONContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setidentity": {
        "title": "GlobalJSONContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.identity": {
        "title": "Identity type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.jsonarray": {
        "title": "JSONArray interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.jsonobject": {
        "title": "JSONObject interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.jsonvalue": {
        "title": "JSONValue type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.localstoragestoragedriver": {
        "title": "localStorageStorageDriver variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web": {
        "title": "web package"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.realm": {
        "title": "PasswordIdentity.realm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.createdat": {
        "title": "Session.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.data": {
        "title": "Session.data property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.id": {
        "title": "Session.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.identityid": {
        "title": "Session.identityID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session": {
        "title": "Session interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.name": {
        "title": "Session.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.useragent": {
        "title": "Session.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.ssologinoptions.mergerealm": {
        "title": "SSOLoginOptions.mergeRealm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.storagedriver": {
        "title": "StorageDriver interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.createdat": {
        "title": "User.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.id": {
        "title": "User.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.isverified": {
        "title": "User.isVerified property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user": {
        "title": "User interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.metadata": {
        "title": "User.metadata property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.version": {
        "title": "VERSION variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webapiclient.fetchfunction": {
        "title": "WebAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webapiclient": {
        "title": "WebAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webapiclient.requestclass": {
        "title": "WebAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer._constructor_": {
        "title": "WebAuthContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.getlinkredirectresult": {
        "title": "WebAuthContainer.getLinkRedirectResult() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.getloginredirectresult": {
        "title": "WebAuthContainer.getLoginRedirectResult() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.linkoauthproviderwithpopup": {
        "title": "WebAuthContainer.linkOAuthProviderWithPopup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.linkoauthproviderwithredirect": {
        "title": "WebAuthContainer.linkOAuthProviderWithRedirect() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.loginoauthproviderwithpopup": {
        "title": "WebAuthContainer.loginOAuthProviderWithPopup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.loginoauthproviderwithredirect": {
        "title": "WebAuthContainer.loginOAuthProviderWithRedirect() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer": {
        "title": "WebAuthContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webcontainer._constructor_": {
        "title": "WebContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webcontainer.auth": {
        "title": "WebContainer.auth property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webcontainer": {
        "title": "WebContainer class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.activateoobresult": {
        "title": "ActivateOOBResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.activateoobresult.recoverycodes": {
        "title": "ActivateOOBResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.activatetotpresult": {
        "title": "ActivateTOTPResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.activatetotpresult.recoverycodes": {
        "title": "ActivateTOTPResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authcontainer.mfa": {
        "title": "AuthContainer.mfa property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authenticatewithooboptions.code": {
        "title": "AuthenticateWithOOBOptions.code property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authenticatewithooboptions": {
        "title": "AuthenticateWithOOBOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authenticatewithooboptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithOOBOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authenticatewithtotpoptions": {
        "title": "AuthenticateWithTOTPOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authenticatewithtotpoptions.otp": {
        "title": "AuthenticateWithTOTPOptions.otp property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authenticatewithtotpoptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithTOTPOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authenticationsession": {
        "title": "AuthenticationSession interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authenticationsession.step": {
        "title": "AuthenticationSession.step property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authenticationsession.token": {
        "title": "AuthenticationSession.token property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authenticator": {
        "title": "Authenticator type"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.authresponse.mfabearertoken": {
        "title": "AuthResponse.mfaBearerToken property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.activateoob": {
        "title": "BaseAPIClient.activateOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.activatetotp": {
        "title": "BaseAPIClient.activateTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.authenticatewithbearertoken": {
        "title": "BaseAPIClient.authenticateWithBearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.authenticatewithoob": {
        "title": "BaseAPIClient.authenticateWithOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.authenticatewithrecoverycode": {
        "title": "BaseAPIClient.authenticateWithRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.authenticatewithtotp": {
        "title": "BaseAPIClient.authenticateWithTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.createnewoob": {
        "title": "BaseAPIClient.createNewOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.createnewtotp": {
        "title": "BaseAPIClient.createNewTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.deleteauthenticator": {
        "title": "BaseAPIClient.deleteAuthenticator() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.getauthenticators": {
        "title": "BaseAPIClient.getAuthenticators() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.listrecoverycode": {
        "title": "BaseAPIClient.listRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.regeneraterecoverycode": {
        "title": "BaseAPIClient.regenerateRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.revokeallbearertoken": {
        "title": "BaseAPIClient.revokeAllBearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.baseapiclient.triggeroob": {
        "title": "BaseAPIClient.triggerOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.containerstorage.delauthenticationsession": {
        "title": "ContainerStorage.delAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.containerstorage.delmfabearertoken": {
        "title": "ContainerStorage.delMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.containerstorage.getauthenticationsession": {
        "title": "ContainerStorage.getAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.containerstorage.getmfabearertoken": {
        "title": "ContainerStorage.getMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.containerstorage.setauthenticationsession": {
        "title": "ContainerStorage.setAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.containerstorage.setmfabearertoken": {
        "title": "ContainerStorage.setMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewoobemailoptions.channel": {
        "title": "CreateNewOOBEmailOptions.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewoobemailoptions.email": {
        "title": "CreateNewOOBEmailOptions.email property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewoobemailoptions": {
        "title": "CreateNewOOBEmailOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewooboptions": {
        "title": "CreateNewOOBOptions type"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewoobresult.authenticatorid": {
        "title": "CreateNewOOBResult.authenticatorID property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewoobresult.authenticatortype": {
        "title": "CreateNewOOBResult.authenticatorType property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewoobresult.channel": {
        "title": "CreateNewOOBResult.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewoobresult": {
        "title": "CreateNewOOBResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewoobsmsoptions.channel": {
        "title": "CreateNewOOBSMSOptions.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewoobsmsoptions": {
        "title": "CreateNewOOBSMSOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewoobsmsoptions.phone": {
        "title": "CreateNewOOBSMSOptions.phone property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewtotpoptions.accountname": {
        "title": "CreateNewTOTPOptions.accountName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewtotpoptions.displayname": {
        "title": "CreateNewTOTPOptions.displayName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewtotpoptions.issuer": {
        "title": "CreateNewTOTPOptions.issuer property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewtotpoptions": {
        "title": "CreateNewTOTPOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewtotpresult.authenticatorid": {
        "title": "CreateNewTOTPResult.authenticatorID property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewtotpresult.authenticatortype": {
        "title": "CreateNewTOTPResult.authenticatorType property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewtotpresult": {
        "title": "CreateNewTOTPResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewtotpresult.otpauthuri": {
        "title": "CreateNewTOTPResult.otpauthURI property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewtotpresult.qrcodeimageurl": {
        "title": "CreateNewTOTPResult.qrCodeImageURL property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.createnewtotpresult.secret": {
        "title": "CreateNewTOTPResult.secret property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.decodeauthenticator": {
        "title": "decodeAuthenticator() function"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.generateotpauthuri": {
        "title": "generateOTPAuthURI() function"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.generateotpauthurioptions.accountname": {
        "title": "GenerateOTPAuthURIOptions.accountName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.generateotpauthurioptions.issuer": {
        "title": "GenerateOTPAuthURIOptions.issuer property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.generateotpauthurioptions": {
        "title": "GenerateOTPAuthURIOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.generateotpauthurioptions.secret": {
        "title": "GenerateOTPAuthURIOptions.secret property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.getdevicename": {
        "title": "getDeviceName() function"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.globaljsoncontainerstorage.delauthenticationsession": {
        "title": "GlobalJSONContainerStorage.delAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.globaljsoncontainerstorage.delmfabearertoken": {
        "title": "GlobalJSONContainerStorage.delMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.globaljsoncontainerstorage.getauthenticationsession": {
        "title": "GlobalJSONContainerStorage.getAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.globaljsoncontainerstorage.getmfabearertoken": {
        "title": "GlobalJSONContainerStorage.getMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.globaljsoncontainerstorage.setauthenticationsession": {
        "title": "GlobalJSONContainerStorage.setAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.globaljsoncontainerstorage.setmfabearertoken": {
        "title": "GlobalJSONContainerStorage.setMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.ismfarequirederror": {
        "title": "isMFARequiredError() function"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client": {
        "title": "node-client package"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer._constructor_": {
        "title": "MFAContainer.(constructor)"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.activateoob": {
        "title": "MFAContainer.activateOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.activatetotp": {
        "title": "MFAContainer.activateTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.authenticatewithoob": {
        "title": "MFAContainer.authenticateWithOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.authenticatewithrecoverycode": {
        "title": "MFAContainer.authenticateWithRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.authenticatewithtotp": {
        "title": "MFAContainer.authenticateWithTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.createnewoob": {
        "title": "MFAContainer.createNewOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.createnewtotp": {
        "title": "MFAContainer.createNewTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.deleteauthenticator": {
        "title": "MFAContainer.deleteAuthenticator() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.generateotpauthuriqrcodeimageurl": {
        "title": "MFAContainer.generateOTPAuthURIQRCodeImageURL() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.getauthenticators": {
        "title": "MFAContainer.getAuthenticators() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.listrecoverycode": {
        "title": "MFAContainer.listRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer": {
        "title": "MFAContainer class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.parent": {
        "title": "MFAContainer.parent property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.regeneraterecoverycode": {
        "title": "MFAContainer.regenerateRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.revokealltrusteddevices": {
        "title": "MFAContainer.revokeAllTrustedDevices() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.mfacontainer.triggeroob": {
        "title": "MFAContainer.triggerOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobemailauthenticator.activatedat": {
        "title": "OOBEmailAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobemailauthenticator.channel": {
        "title": "OOBEmailAuthenticator.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobemailauthenticator.createdat": {
        "title": "OOBEmailAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobemailauthenticator.id": {
        "title": "OOBEmailAuthenticator.id property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobemailauthenticator.maskedemail": {
        "title": "OOBEmailAuthenticator.maskedEmail property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobemailauthenticator": {
        "title": "OOBEmailAuthenticator interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobemailauthenticator.type": {
        "title": "OOBEmailAuthenticator.type property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobsmsauthenticator.activatedat": {
        "title": "OOBSMSAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobsmsauthenticator.channel": {
        "title": "OOBSMSAuthenticator.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobsmsauthenticator.createdat": {
        "title": "OOBSMSAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobsmsauthenticator.id": {
        "title": "OOBSMSAuthenticator.id property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobsmsauthenticator.maskedphone": {
        "title": "OOBSMSAuthenticator.maskedPhone property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobsmsauthenticator": {
        "title": "OOBSMSAuthenticator interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.oobsmsauthenticator.type": {
        "title": "OOBSMSAuthenticator.type property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.skygearerrornames": {
        "title": "SkygearErrorNames variable"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.totpauthenticator.activatedat": {
        "title": "TOTPAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.totpauthenticator.createdat": {
        "title": "TOTPAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.totpauthenticator.displayname": {
        "title": "TOTPAuthenticator.displayName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.totpauthenticator.id": {
        "title": "TOTPAuthenticator.id property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.totpauthenticator": {
        "title": "TOTPAuthenticator interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-node-client.totpauthenticator.type": {
        "title": "TOTPAuthenticator.type property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.activateoobresult": {
        "title": "ActivateOOBResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.activateoobresult.recoverycodes": {
        "title": "ActivateOOBResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.activatetotpresult": {
        "title": "ActivateTOTPResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.activatetotpresult.recoverycodes": {
        "title": "ActivateTOTPResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authcontainer.mfa": {
        "title": "AuthContainer.mfa property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authenticatewithooboptions.code": {
        "title": "AuthenticateWithOOBOptions.code property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authenticatewithooboptions": {
        "title": "AuthenticateWithOOBOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authenticatewithooboptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithOOBOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authenticatewithtotpoptions": {
        "title": "AuthenticateWithTOTPOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authenticatewithtotpoptions.otp": {
        "title": "AuthenticateWithTOTPOptions.otp property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authenticatewithtotpoptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithTOTPOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authenticationsession": {
        "title": "AuthenticationSession interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authenticationsession.step": {
        "title": "AuthenticationSession.step property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authenticationsession.token": {
        "title": "AuthenticationSession.token property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authenticator": {
        "title": "Authenticator type"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.authresponse.mfabearertoken": {
        "title": "AuthResponse.mfaBearerToken property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.activateoob": {
        "title": "BaseAPIClient.activateOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.activatetotp": {
        "title": "BaseAPIClient.activateTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.authenticatewithbearertoken": {
        "title": "BaseAPIClient.authenticateWithBearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.authenticatewithoob": {
        "title": "BaseAPIClient.authenticateWithOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.authenticatewithrecoverycode": {
        "title": "BaseAPIClient.authenticateWithRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.authenticatewithtotp": {
        "title": "BaseAPIClient.authenticateWithTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.createnewoob": {
        "title": "BaseAPIClient.createNewOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.createnewtotp": {
        "title": "BaseAPIClient.createNewTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.deleteauthenticator": {
        "title": "BaseAPIClient.deleteAuthenticator() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.getauthenticators": {
        "title": "BaseAPIClient.getAuthenticators() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.listrecoverycode": {
        "title": "BaseAPIClient.listRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.regeneraterecoverycode": {
        "title": "BaseAPIClient.regenerateRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.revokeallbearertoken": {
        "title": "BaseAPIClient.revokeAllBearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.baseapiclient.triggeroob": {
        "title": "BaseAPIClient.triggerOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.containerstorage.delauthenticationsession": {
        "title": "ContainerStorage.delAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.containerstorage.delmfabearertoken": {
        "title": "ContainerStorage.delMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.containerstorage.getauthenticationsession": {
        "title": "ContainerStorage.getAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.containerstorage.getmfabearertoken": {
        "title": "ContainerStorage.getMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.containerstorage.setauthenticationsession": {
        "title": "ContainerStorage.setAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.containerstorage.setmfabearertoken": {
        "title": "ContainerStorage.setMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewoobemailoptions.channel": {
        "title": "CreateNewOOBEmailOptions.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewoobemailoptions.email": {
        "title": "CreateNewOOBEmailOptions.email property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewoobemailoptions": {
        "title": "CreateNewOOBEmailOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewooboptions": {
        "title": "CreateNewOOBOptions type"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewoobresult.authenticatorid": {
        "title": "CreateNewOOBResult.authenticatorID property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewoobresult.authenticatortype": {
        "title": "CreateNewOOBResult.authenticatorType property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewoobresult.channel": {
        "title": "CreateNewOOBResult.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewoobresult": {
        "title": "CreateNewOOBResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewoobsmsoptions.channel": {
        "title": "CreateNewOOBSMSOptions.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewoobsmsoptions": {
        "title": "CreateNewOOBSMSOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewoobsmsoptions.phone": {
        "title": "CreateNewOOBSMSOptions.phone property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewtotpoptions.accountname": {
        "title": "CreateNewTOTPOptions.accountName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewtotpoptions.displayname": {
        "title": "CreateNewTOTPOptions.displayName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewtotpoptions.issuer": {
        "title": "CreateNewTOTPOptions.issuer property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewtotpoptions": {
        "title": "CreateNewTOTPOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewtotpresult.authenticatorid": {
        "title": "CreateNewTOTPResult.authenticatorID property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewtotpresult.authenticatortype": {
        "title": "CreateNewTOTPResult.authenticatorType property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewtotpresult": {
        "title": "CreateNewTOTPResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewtotpresult.otpauthuri": {
        "title": "CreateNewTOTPResult.otpauthURI property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewtotpresult.qrcodeimageurl": {
        "title": "CreateNewTOTPResult.qrCodeImageURL property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.createnewtotpresult.secret": {
        "title": "CreateNewTOTPResult.secret property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.decodeauthenticator": {
        "title": "decodeAuthenticator() function"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.generateotpauthuri": {
        "title": "generateOTPAuthURI() function"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.generateotpauthurioptions.accountname": {
        "title": "GenerateOTPAuthURIOptions.accountName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.generateotpauthurioptions.issuer": {
        "title": "GenerateOTPAuthURIOptions.issuer property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.generateotpauthurioptions": {
        "title": "GenerateOTPAuthURIOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.generateotpauthurioptions.secret": {
        "title": "GenerateOTPAuthURIOptions.secret property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.globaljsoncontainerstorage.delauthenticationsession": {
        "title": "GlobalJSONContainerStorage.delAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.globaljsoncontainerstorage.delmfabearertoken": {
        "title": "GlobalJSONContainerStorage.delMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.globaljsoncontainerstorage.getauthenticationsession": {
        "title": "GlobalJSONContainerStorage.getAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.globaljsoncontainerstorage.getmfabearertoken": {
        "title": "GlobalJSONContainerStorage.getMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.globaljsoncontainerstorage.setauthenticationsession": {
        "title": "GlobalJSONContainerStorage.setAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.globaljsoncontainerstorage.setmfabearertoken": {
        "title": "GlobalJSONContainerStorage.setMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.ismfarequirederror": {
        "title": "isMFARequiredError() function"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native": {
        "title": "react-native package"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer._constructor_": {
        "title": "MFAContainer.(constructor)"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.activateoob": {
        "title": "MFAContainer.activateOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.activatetotp": {
        "title": "MFAContainer.activateTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.authenticatewithoob": {
        "title": "MFAContainer.authenticateWithOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.authenticatewithrecoverycode": {
        "title": "MFAContainer.authenticateWithRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.authenticatewithtotp": {
        "title": "MFAContainer.authenticateWithTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.createnewoob": {
        "title": "MFAContainer.createNewOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.createnewtotp": {
        "title": "MFAContainer.createNewTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.deleteauthenticator": {
        "title": "MFAContainer.deleteAuthenticator() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.generateotpauthuriqrcodeimageurl": {
        "title": "MFAContainer.generateOTPAuthURIQRCodeImageURL() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.getauthenticators": {
        "title": "MFAContainer.getAuthenticators() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.listrecoverycode": {
        "title": "MFAContainer.listRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer": {
        "title": "MFAContainer class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.parent": {
        "title": "MFAContainer.parent property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.regeneraterecoverycode": {
        "title": "MFAContainer.regenerateRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.revokealltrusteddevices": {
        "title": "MFAContainer.revokeAllTrustedDevices() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.mfacontainer.triggeroob": {
        "title": "MFAContainer.triggerOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobemailauthenticator.activatedat": {
        "title": "OOBEmailAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobemailauthenticator.channel": {
        "title": "OOBEmailAuthenticator.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobemailauthenticator.createdat": {
        "title": "OOBEmailAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobemailauthenticator.id": {
        "title": "OOBEmailAuthenticator.id property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobemailauthenticator.maskedemail": {
        "title": "OOBEmailAuthenticator.maskedEmail property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobemailauthenticator": {
        "title": "OOBEmailAuthenticator interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobemailauthenticator.type": {
        "title": "OOBEmailAuthenticator.type property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobsmsauthenticator.activatedat": {
        "title": "OOBSMSAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobsmsauthenticator.channel": {
        "title": "OOBSMSAuthenticator.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobsmsauthenticator.createdat": {
        "title": "OOBSMSAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobsmsauthenticator.id": {
        "title": "OOBSMSAuthenticator.id property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobsmsauthenticator.maskedphone": {
        "title": "OOBSMSAuthenticator.maskedPhone property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobsmsauthenticator": {
        "title": "OOBSMSAuthenticator interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.oobsmsauthenticator.type": {
        "title": "OOBSMSAuthenticator.type property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.skygearerrornames": {
        "title": "SkygearErrorNames variable"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.totpauthenticator.activatedat": {
        "title": "TOTPAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.totpauthenticator.createdat": {
        "title": "TOTPAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.totpauthenticator.displayname": {
        "title": "TOTPAuthenticator.displayName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.totpauthenticator.id": {
        "title": "TOTPAuthenticator.id property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.totpauthenticator": {
        "title": "TOTPAuthenticator interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-react-native.totpauthenticator.type": {
        "title": "TOTPAuthenticator.type property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.activateoobresult": {
        "title": "ActivateOOBResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.activateoobresult.recoverycodes": {
        "title": "ActivateOOBResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.activatetotpresult": {
        "title": "ActivateTOTPResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.activatetotpresult.recoverycodes": {
        "title": "ActivateTOTPResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authcontainer.mfa": {
        "title": "AuthContainer.mfa property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authenticatewithooboptions.code": {
        "title": "AuthenticateWithOOBOptions.code property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authenticatewithooboptions": {
        "title": "AuthenticateWithOOBOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authenticatewithooboptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithOOBOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authenticatewithtotpoptions": {
        "title": "AuthenticateWithTOTPOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authenticatewithtotpoptions.otp": {
        "title": "AuthenticateWithTOTPOptions.otp property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authenticatewithtotpoptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithTOTPOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authenticationsession": {
        "title": "AuthenticationSession interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authenticationsession.step": {
        "title": "AuthenticationSession.step property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authenticationsession.token": {
        "title": "AuthenticationSession.token property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authenticator": {
        "title": "Authenticator type"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.authresponse.mfabearertoken": {
        "title": "AuthResponse.mfaBearerToken property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.activateoob": {
        "title": "BaseAPIClient.activateOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.activatetotp": {
        "title": "BaseAPIClient.activateTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.authenticatewithbearertoken": {
        "title": "BaseAPIClient.authenticateWithBearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.authenticatewithoob": {
        "title": "BaseAPIClient.authenticateWithOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.authenticatewithrecoverycode": {
        "title": "BaseAPIClient.authenticateWithRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.authenticatewithtotp": {
        "title": "BaseAPIClient.authenticateWithTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.createnewoob": {
        "title": "BaseAPIClient.createNewOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.createnewtotp": {
        "title": "BaseAPIClient.createNewTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.deleteauthenticator": {
        "title": "BaseAPIClient.deleteAuthenticator() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.getauthenticators": {
        "title": "BaseAPIClient.getAuthenticators() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.listrecoverycode": {
        "title": "BaseAPIClient.listRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.regeneraterecoverycode": {
        "title": "BaseAPIClient.regenerateRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.revokeallbearertoken": {
        "title": "BaseAPIClient.revokeAllBearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.baseapiclient.triggeroob": {
        "title": "BaseAPIClient.triggerOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.containerstorage.delauthenticationsession": {
        "title": "ContainerStorage.delAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.containerstorage.delmfabearertoken": {
        "title": "ContainerStorage.delMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.containerstorage.getauthenticationsession": {
        "title": "ContainerStorage.getAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.containerstorage.getmfabearertoken": {
        "title": "ContainerStorage.getMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.containerstorage.setauthenticationsession": {
        "title": "ContainerStorage.setAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.containerstorage.setmfabearertoken": {
        "title": "ContainerStorage.setMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewoobemailoptions.channel": {
        "title": "CreateNewOOBEmailOptions.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewoobemailoptions.email": {
        "title": "CreateNewOOBEmailOptions.email property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewoobemailoptions": {
        "title": "CreateNewOOBEmailOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewooboptions": {
        "title": "CreateNewOOBOptions type"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewoobresult.authenticatorid": {
        "title": "CreateNewOOBResult.authenticatorID property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewoobresult.authenticatortype": {
        "title": "CreateNewOOBResult.authenticatorType property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewoobresult.channel": {
        "title": "CreateNewOOBResult.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewoobresult": {
        "title": "CreateNewOOBResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewoobsmsoptions.channel": {
        "title": "CreateNewOOBSMSOptions.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewoobsmsoptions": {
        "title": "CreateNewOOBSMSOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewoobsmsoptions.phone": {
        "title": "CreateNewOOBSMSOptions.phone property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewtotpoptions.accountname": {
        "title": "CreateNewTOTPOptions.accountName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewtotpoptions.displayname": {
        "title": "CreateNewTOTPOptions.displayName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewtotpoptions.issuer": {
        "title": "CreateNewTOTPOptions.issuer property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewtotpoptions": {
        "title": "CreateNewTOTPOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewtotpresult.authenticatorid": {
        "title": "CreateNewTOTPResult.authenticatorID property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewtotpresult.authenticatortype": {
        "title": "CreateNewTOTPResult.authenticatorType property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewtotpresult": {
        "title": "CreateNewTOTPResult interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewtotpresult.otpauthuri": {
        "title": "CreateNewTOTPResult.otpauthURI property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewtotpresult.qrcodeimageurl": {
        "title": "CreateNewTOTPResult.qrCodeImageURL property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.createnewtotpresult.secret": {
        "title": "CreateNewTOTPResult.secret property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.decodeauthenticator": {
        "title": "decodeAuthenticator() function"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.generateotpauthuri": {
        "title": "generateOTPAuthURI() function"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.generateotpauthurioptions.accountname": {
        "title": "GenerateOTPAuthURIOptions.accountName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.generateotpauthurioptions.issuer": {
        "title": "GenerateOTPAuthURIOptions.issuer property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.generateotpauthurioptions": {
        "title": "GenerateOTPAuthURIOptions interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.generateotpauthurioptions.secret": {
        "title": "GenerateOTPAuthURIOptions.secret property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.globaljsoncontainerstorage.delauthenticationsession": {
        "title": "GlobalJSONContainerStorage.delAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.globaljsoncontainerstorage.delmfabearertoken": {
        "title": "GlobalJSONContainerStorage.delMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.globaljsoncontainerstorage.getauthenticationsession": {
        "title": "GlobalJSONContainerStorage.getAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.globaljsoncontainerstorage.getmfabearertoken": {
        "title": "GlobalJSONContainerStorage.getMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.globaljsoncontainerstorage.setauthenticationsession": {
        "title": "GlobalJSONContainerStorage.setAuthenticationSession() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.globaljsoncontainerstorage.setmfabearertoken": {
        "title": "GlobalJSONContainerStorage.setMFABearerToken() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.ismfarequirederror": {
        "title": "isMFARequiredError() function"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web": {
        "title": "web package"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer._constructor_": {
        "title": "MFAContainer.(constructor)"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.activateoob": {
        "title": "MFAContainer.activateOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.activatetotp": {
        "title": "MFAContainer.activateTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.authenticatewithoob": {
        "title": "MFAContainer.authenticateWithOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.authenticatewithrecoverycode": {
        "title": "MFAContainer.authenticateWithRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.authenticatewithtotp": {
        "title": "MFAContainer.authenticateWithTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.createnewoob": {
        "title": "MFAContainer.createNewOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.createnewtotp": {
        "title": "MFAContainer.createNewTOTP() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.deleteauthenticator": {
        "title": "MFAContainer.deleteAuthenticator() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.generateotpauthuriqrcodeimageurl": {
        "title": "MFAContainer.generateOTPAuthURIQRCodeImageURL() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.getauthenticators": {
        "title": "MFAContainer.getAuthenticators() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.listrecoverycode": {
        "title": "MFAContainer.listRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer": {
        "title": "MFAContainer class"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.parent": {
        "title": "MFAContainer.parent property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.regeneraterecoverycode": {
        "title": "MFAContainer.regenerateRecoveryCode() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.revokealltrusteddevices": {
        "title": "MFAContainer.revokeAllTrustedDevices() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.mfacontainer.triggeroob": {
        "title": "MFAContainer.triggerOOB() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobemailauthenticator.activatedat": {
        "title": "OOBEmailAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobemailauthenticator.channel": {
        "title": "OOBEmailAuthenticator.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobemailauthenticator.createdat": {
        "title": "OOBEmailAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobemailauthenticator.id": {
        "title": "OOBEmailAuthenticator.id property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobemailauthenticator.maskedemail": {
        "title": "OOBEmailAuthenticator.maskedEmail property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobemailauthenticator": {
        "title": "OOBEmailAuthenticator interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobemailauthenticator.type": {
        "title": "OOBEmailAuthenticator.type property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobsmsauthenticator.activatedat": {
        "title": "OOBSMSAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobsmsauthenticator.channel": {
        "title": "OOBSMSAuthenticator.channel property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobsmsauthenticator.createdat": {
        "title": "OOBSMSAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobsmsauthenticator.id": {
        "title": "OOBSMSAuthenticator.id property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobsmsauthenticator.maskedphone": {
        "title": "OOBSMSAuthenticator.maskedPhone property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobsmsauthenticator": {
        "title": "OOBSMSAuthenticator interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.oobsmsauthenticator.type": {
        "title": "OOBSMSAuthenticator.type property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.skygearerrornames": {
        "title": "SkygearErrorNames variable"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.totpauthenticator.activatedat": {
        "title": "TOTPAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.totpauthenticator.createdat": {
        "title": "TOTPAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.totpauthenticator.displayname": {
        "title": "TOTPAuthenticator.displayName property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.totpauthenticator.id": {
        "title": "TOTPAuthenticator.id property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.totpauthenticator": {
        "title": "TOTPAuthenticator interface"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.totpauthenticator.type": {
        "title": "TOTPAuthenticator.type property"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.webauthcontainer.getlinkredirectresult": {
        "title": "WebAuthContainer.getLinkRedirectResult() method"
      },
      "version-2.0.0-alpha.12/version-2.0.0-alpha.12-web.webauthcontainer.linkoauthproviderwithpopup": {
        "title": "WebAuthContainer.linkOAuthProviderWithPopup() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.authcontainer.requestphoneverification": {
        "title": "AuthContainer.requestPhoneVerification() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.baseapiclient.createnewtotp": {
        "title": "BaseAPIClient.createNewTOTP() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.baseapiclient.requestphoneverification": {
        "title": "BaseAPIClient.requestPhoneVerification() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.createnewtotpresult": {
        "title": "CreateNewTOTPResult interface"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.createnewtotpresult.qrcodeimageuri": {
        "title": "CreateNewTOTPResult.qrCodeImageURI property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilder._constructor_": {
        "title": "ImageProcessingPipelineBuilder.(constructor)"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilder.format": {
        "title": "ImageProcessingPipelineBuilder.format() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilder.getname": {
        "title": "ImageProcessingPipelineBuilder.getName() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilder.getvalue": {
        "title": "ImageProcessingPipelineBuilder.getValue() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilder": {
        "title": "ImageProcessingPipelineBuilder class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilder.quality": {
        "title": "ImageProcessingPipelineBuilder.quality() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilder.resize": {
        "title": "ImageProcessingPipelineBuilder.resize() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilder.settourlstring": {
        "title": "ImageProcessingPipelineBuilder.setToURLString() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilderresizeoptions.color": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.color property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilderresizeoptions.longerside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.longerSide property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilderresizeoptions": {
        "title": "ImageProcessingPipelineBuilderResizeOptions interface"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilderresizeoptions.scalingmode": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.scalingMode property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilderresizeoptions.shorterside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.shorterSide property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilderresizeoptions.targetheight": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetHeight property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.imageprocessingpipelinebuilderresizeoptions.targetwidth": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetWidth property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.jsonobject": {
        "title": "JSONObject type"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.jsonvalue": {
        "title": "JSONValue type"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client": {
        "title": "node-client package"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.mfacontainer": {
        "title": "MFAContainer class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.nodeassetcontainer._constructor_": {
        "title": "NodeAssetContainer.(constructor)"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.nodeassetcontainer": {
        "title": "NodeAssetContainer class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.nodeassetcontainer.parent": {
        "title": "NodeAssetContainer.parent property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.nodeassetcontainer.upload": {
        "title": "NodeAssetContainer.upload() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.nodecontainer.asset": {
        "title": "NodeContainer.asset property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.nodecontainer": {
        "title": "NodeContainer class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.skygearerror.reason": {
        "title": "SkygearError.reason property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.skygearerrornames": {
        "title": "SkygearErrorNames variable"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.uploadassetoptions.access": {
        "title": "UploadAssetOptions.access property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.uploadassetoptions.exactname": {
        "title": "UploadAssetOptions.exactName property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.uploadassetoptions.headers": {
        "title": "UploadAssetOptions.headers property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.uploadassetoptions": {
        "title": "UploadAssetOptions interface"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.uploadassetoptions.prefix": {
        "title": "UploadAssetOptions.prefix property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-node-client.uploadassetoptions.size": {
        "title": "UploadAssetOptions.size property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.authcontainer.requestphoneverification": {
        "title": "AuthContainer.requestPhoneVerification() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.baseapiclient.createnewtotp": {
        "title": "BaseAPIClient.createNewTOTP() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.baseapiclient.requestphoneverification": {
        "title": "BaseAPIClient.requestPhoneVerification() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.createnewtotpresult": {
        "title": "CreateNewTOTPResult interface"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.createnewtotpresult.qrcodeimageuri": {
        "title": "CreateNewTOTPResult.qrCodeImageURI property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilder._constructor_": {
        "title": "ImageProcessingPipelineBuilder.(constructor)"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilder.format": {
        "title": "ImageProcessingPipelineBuilder.format() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilder.getname": {
        "title": "ImageProcessingPipelineBuilder.getName() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilder.getvalue": {
        "title": "ImageProcessingPipelineBuilder.getValue() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilder": {
        "title": "ImageProcessingPipelineBuilder class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilder.quality": {
        "title": "ImageProcessingPipelineBuilder.quality() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilder.resize": {
        "title": "ImageProcessingPipelineBuilder.resize() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilder.settourlstring": {
        "title": "ImageProcessingPipelineBuilder.setToURLString() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilderresizeoptions.color": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.color property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilderresizeoptions.longerside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.longerSide property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilderresizeoptions": {
        "title": "ImageProcessingPipelineBuilderResizeOptions interface"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilderresizeoptions.scalingmode": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.scalingMode property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilderresizeoptions.shorterside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.shorterSide property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilderresizeoptions.targetheight": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetHeight property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.imageprocessingpipelinebuilderresizeoptions.targetwidth": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetWidth property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.jsonobject": {
        "title": "JSONObject type"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.jsonvalue": {
        "title": "JSONValue type"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native": {
        "title": "react-native package"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.mfacontainer": {
        "title": "MFAContainer class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.reactnativeassetcontainer._constructor_": {
        "title": "ReactNativeAssetContainer.(constructor)"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.reactnativeassetcontainer": {
        "title": "ReactNativeAssetContainer class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.reactnativeassetcontainer.parent": {
        "title": "ReactNativeAssetContainer.parent property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.reactnativeassetcontainer.upload": {
        "title": "ReactNativeAssetContainer.upload() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.reactnativecontainer.asset": {
        "title": "ReactNativeContainer.asset property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.reactnativecontainer": {
        "title": "ReactNativeContainer class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.skygearerror.reason": {
        "title": "SkygearError.reason property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.skygearerrornames": {
        "title": "SkygearErrorNames variable"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.uploadassetoptions.access": {
        "title": "UploadAssetOptions.access property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.uploadassetoptions.exactname": {
        "title": "UploadAssetOptions.exactName property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.uploadassetoptions.headers": {
        "title": "UploadAssetOptions.headers property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.uploadassetoptions": {
        "title": "UploadAssetOptions interface"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.uploadassetoptions.onuploadprogress": {
        "title": "UploadAssetOptions.onUploadProgress property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-react-native.uploadassetoptions.prefix": {
        "title": "UploadAssetOptions.prefix property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.authcontainer.requestphoneverification": {
        "title": "AuthContainer.requestPhoneVerification() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.baseapiclient.createnewtotp": {
        "title": "BaseAPIClient.createNewTOTP() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.baseapiclient.requestphoneverification": {
        "title": "BaseAPIClient.requestPhoneVerification() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.createnewtotpresult": {
        "title": "CreateNewTOTPResult interface"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.createnewtotpresult.qrcodeimageuri": {
        "title": "CreateNewTOTPResult.qrCodeImageURI property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilder._constructor_": {
        "title": "ImageProcessingPipelineBuilder.(constructor)"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilder.format": {
        "title": "ImageProcessingPipelineBuilder.format() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilder.getname": {
        "title": "ImageProcessingPipelineBuilder.getName() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilder.getvalue": {
        "title": "ImageProcessingPipelineBuilder.getValue() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilder": {
        "title": "ImageProcessingPipelineBuilder class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilder.quality": {
        "title": "ImageProcessingPipelineBuilder.quality() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilder.resize": {
        "title": "ImageProcessingPipelineBuilder.resize() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilder.settourlstring": {
        "title": "ImageProcessingPipelineBuilder.setToURLString() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilderresizeoptions.color": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.color property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilderresizeoptions.longerside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.longerSide property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilderresizeoptions": {
        "title": "ImageProcessingPipelineBuilderResizeOptions interface"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilderresizeoptions.scalingmode": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.scalingMode property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilderresizeoptions.shorterside": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.shorterSide property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilderresizeoptions.targetheight": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetHeight property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.imageprocessingpipelinebuilderresizeoptions.targetwidth": {
        "title": "ImageProcessingPipelineBuilderResizeOptions.targetWidth property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.jsonobject": {
        "title": "JSONObject type"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.jsonvalue": {
        "title": "JSONValue type"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web": {
        "title": "web package"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.mfacontainer": {
        "title": "MFAContainer class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.skygearerror.reason": {
        "title": "SkygearError.reason property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.skygearerrornames": {
        "title": "SkygearErrorNames variable"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.uploadassetoptions.access": {
        "title": "UploadAssetOptions.access property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.uploadassetoptions.exactname": {
        "title": "UploadAssetOptions.exactName property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.uploadassetoptions.headers": {
        "title": "UploadAssetOptions.headers property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.uploadassetoptions": {
        "title": "UploadAssetOptions interface"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.uploadassetoptions.onuploadprogress": {
        "title": "UploadAssetOptions.onUploadProgress property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.uploadassetoptions.prefix": {
        "title": "UploadAssetOptions.prefix property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.webapiclient.fetchfunction": {
        "title": "WebAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.webapiclient": {
        "title": "WebAPIClient class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.webassetcontainer._constructor_": {
        "title": "WebAssetContainer.(constructor)"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.webassetcontainer": {
        "title": "WebAssetContainer class"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.webassetcontainer.parent": {
        "title": "WebAssetContainer.parent property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.webassetcontainer.upload": {
        "title": "WebAssetContainer.upload() method"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.webcontainer.asset": {
        "title": "WebContainer.asset property"
      },
      "version-2.0.0-alpha.14/version-2.0.0-alpha.14-web.webcontainer": {
        "title": "WebContainer class"
      },
      "version-2.0.0-alpha.15/version-2.0.0-alpha.15-node-client": {
        "title": "node-client package"
      },
      "version-2.0.0-alpha.15/version-2.0.0-alpha.15-react-native": {
        "title": "react-native package"
      },
      "version-2.0.0-alpha.15/version-2.0.0-alpha.15-web": {
        "title": "web package"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.isvalidationerror": {
        "title": "isValidationError() function"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client": {
        "title": "node-client package"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerror.info": {
        "title": "ValidationError.info property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerror": {
        "title": "ValidationError interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerror.reason": {
        "title": "ValidationError.reason property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorcause": {
        "title": "ValidationErrorCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorcausebase.details": {
        "title": "ValidationErrorCauseBase.details property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorcausebase.kind": {
        "title": "ValidationErrorCauseBase.kind property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorcausebase": {
        "title": "ValidationErrorCauseBase interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorcausebase.message": {
        "title": "ValidationErrorCauseBase.message property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorcausebase.pointer": {
        "title": "ValidationErrorCauseBase.pointer property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorexpectationdetails.expected": {
        "title": "ValidationErrorExpectationDetails.expected property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorexpectationdetails": {
        "title": "ValidationErrorExpectationDetails interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorformatdetails.format": {
        "title": "ValidationErrorFormatDetails.format property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorformatdetails": {
        "title": "ValidationErrorFormatDetails interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorformatdetails.pattern": {
        "title": "ValidationErrorFormatDetails.pattern property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorkind": {
        "title": "ValidationErrorKind type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorkinds": {
        "title": "ValidationErrorKinds variable"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorrangedetails.gt": {
        "title": "ValidationErrorRangeDetails.gt property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorrangedetails.gte": {
        "title": "ValidationErrorRangeDetails.gte property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorrangedetails.lt": {
        "title": "ValidationErrorRangeDetails.lt property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorrangedetails.lte": {
        "title": "ValidationErrorRangeDetails.lte property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationerrorrangedetails": {
        "title": "ValidationErrorRangeDetails interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationinvalidconstantcause": {
        "title": "ValidationInvalidConstantCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationinvalidentryamountcause": {
        "title": "ValidationInvalidEntryAmountCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationinvalidenumcause": {
        "title": "ValidationInvalidEnumCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationinvalidnumberrangecause": {
        "title": "ValidationInvalidNumberRangeCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationinvalidstringformatcause": {
        "title": "ValidationInvalidStringFormatCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationinvalidstringlengthcause": {
        "title": "ValidationInvalidStringLengthCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-node-client.validationinvalidtypecause": {
        "title": "ValidationInvalidTypeCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.isvalidationerror": {
        "title": "isValidationError() function"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native": {
        "title": "react-native package"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerror.info": {
        "title": "ValidationError.info property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerror": {
        "title": "ValidationError interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerror.reason": {
        "title": "ValidationError.reason property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorcause": {
        "title": "ValidationErrorCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorcausebase.details": {
        "title": "ValidationErrorCauseBase.details property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorcausebase.kind": {
        "title": "ValidationErrorCauseBase.kind property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorcausebase": {
        "title": "ValidationErrorCauseBase interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorcausebase.message": {
        "title": "ValidationErrorCauseBase.message property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorcausebase.pointer": {
        "title": "ValidationErrorCauseBase.pointer property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorexpectationdetails.expected": {
        "title": "ValidationErrorExpectationDetails.expected property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorexpectationdetails": {
        "title": "ValidationErrorExpectationDetails interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorformatdetails.format": {
        "title": "ValidationErrorFormatDetails.format property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorformatdetails": {
        "title": "ValidationErrorFormatDetails interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorformatdetails.pattern": {
        "title": "ValidationErrorFormatDetails.pattern property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorkind": {
        "title": "ValidationErrorKind type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorkinds": {
        "title": "ValidationErrorKinds variable"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorrangedetails.gt": {
        "title": "ValidationErrorRangeDetails.gt property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorrangedetails.gte": {
        "title": "ValidationErrorRangeDetails.gte property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorrangedetails.lt": {
        "title": "ValidationErrorRangeDetails.lt property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorrangedetails.lte": {
        "title": "ValidationErrorRangeDetails.lte property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationerrorrangedetails": {
        "title": "ValidationErrorRangeDetails interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationinvalidconstantcause": {
        "title": "ValidationInvalidConstantCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationinvalidentryamountcause": {
        "title": "ValidationInvalidEntryAmountCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationinvalidenumcause": {
        "title": "ValidationInvalidEnumCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationinvalidnumberrangecause": {
        "title": "ValidationInvalidNumberRangeCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationinvalidstringformatcause": {
        "title": "ValidationInvalidStringFormatCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationinvalidstringlengthcause": {
        "title": "ValidationInvalidStringLengthCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-react-native.validationinvalidtypecause": {
        "title": "ValidationInvalidTypeCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.isvalidationerror": {
        "title": "isValidationError() function"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web": {
        "title": "web package"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerror.info": {
        "title": "ValidationError.info property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerror": {
        "title": "ValidationError interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerror.reason": {
        "title": "ValidationError.reason property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorcause": {
        "title": "ValidationErrorCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorcausebase.details": {
        "title": "ValidationErrorCauseBase.details property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorcausebase.kind": {
        "title": "ValidationErrorCauseBase.kind property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorcausebase": {
        "title": "ValidationErrorCauseBase interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorcausebase.message": {
        "title": "ValidationErrorCauseBase.message property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorcausebase.pointer": {
        "title": "ValidationErrorCauseBase.pointer property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorexpectationdetails.expected": {
        "title": "ValidationErrorExpectationDetails.expected property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorexpectationdetails": {
        "title": "ValidationErrorExpectationDetails interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorformatdetails.format": {
        "title": "ValidationErrorFormatDetails.format property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorformatdetails": {
        "title": "ValidationErrorFormatDetails interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorformatdetails.pattern": {
        "title": "ValidationErrorFormatDetails.pattern property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorkind": {
        "title": "ValidationErrorKind type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorkinds": {
        "title": "ValidationErrorKinds variable"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorrangedetails.gt": {
        "title": "ValidationErrorRangeDetails.gt property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorrangedetails.gte": {
        "title": "ValidationErrorRangeDetails.gte property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorrangedetails.lt": {
        "title": "ValidationErrorRangeDetails.lt property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorrangedetails.lte": {
        "title": "ValidationErrorRangeDetails.lte property"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationerrorrangedetails": {
        "title": "ValidationErrorRangeDetails interface"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationinvalidconstantcause": {
        "title": "ValidationInvalidConstantCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationinvalidentryamountcause": {
        "title": "ValidationInvalidEntryAmountCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationinvalidenumcause": {
        "title": "ValidationInvalidEnumCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationinvalidnumberrangecause": {
        "title": "ValidationInvalidNumberRangeCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationinvalidstringformatcause": {
        "title": "ValidationInvalidStringFormatCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationinvalidstringlengthcause": {
        "title": "ValidationInvalidStringLengthCause type"
      },
      "version-2.0.0-alpha.16/version-2.0.0-alpha.16-web.validationinvalidtypecause": {
        "title": "ValidationInvalidTypeCause type"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.baseapiclient.getoauthresult": {
        "title": "BaseAPIClient.getOAuthResult() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.containerstorage.deloauthcodeverifier": {
        "title": "ContainerStorage.delOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.containerstorage.getoauthcodeverifier": {
        "title": "ContainerStorage.getOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.containerstorage.setoauthcodeverifier": {
        "title": "ContainerStorage.setOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.fulloauthauthorizationurloptions": {
        "title": "FullOAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.globaljsoncontainerstorage.deloauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.delOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.globaljsoncontainerstorage.getoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.getOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client.globaljsoncontainerstorage.setoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.setOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-node-client": {
        "title": "node-client package"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.baseapiclient.getoauthresult": {
        "title": "BaseAPIClient.getOAuthResult() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.containerstorage.deloauthcodeverifier": {
        "title": "ContainerStorage.delOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.containerstorage.getoauthcodeverifier": {
        "title": "ContainerStorage.getOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.containerstorage.setoauthcodeverifier": {
        "title": "ContainerStorage.setOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.fulloauthauthorizationurloptions": {
        "title": "FullOAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.globaljsoncontainerstorage.deloauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.delOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.globaljsoncontainerstorage.getoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.getOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native.globaljsoncontainerstorage.setoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.setOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-react-native": {
        "title": "react-native package"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.baseapiclient.getoauthresult": {
        "title": "BaseAPIClient.getOAuthResult() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.containerstorage.deloauthcodeverifier": {
        "title": "ContainerStorage.delOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.containerstorage.getoauthcodeverifier": {
        "title": "ContainerStorage.getOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.containerstorage.setoauthcodeverifier": {
        "title": "ContainerStorage.setOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.fulloauthauthorizationurloptions": {
        "title": "FullOAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.globaljsoncontainerstorage.deloauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.delOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.globaljsoncontainerstorage.getoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.getOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web.globaljsoncontainerstorage.setoauthcodeverifier": {
        "title": "GlobalJSONContainerStorage.setOAuthCodeVerifier() method"
      },
      "version-2.0.0-alpha.17/version-2.0.0-alpha.17-web": {
        "title": "web package"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.activateoobresult": {
        "title": "ActivateOOBResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.activateoobresult.recoverycodes": {
        "title": "ActivateOOBResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.activatetotpresult": {
        "title": "ActivateTOTPResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.activatetotpresult.recoverycodes": {
        "title": "ActivateTOTPResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.addloginid": {
        "title": "AuthContainer.addLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.listidentities": {
        "title": "AuthContainer.listIdentities() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.removeloginid": {
        "title": "AuthContainer.removeLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.requestphoneverification": {
        "title": "AuthContainer.requestPhoneVerification() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.updateloginid": {
        "title": "AuthContainer.updateLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authenticatewithooboptions.code": {
        "title": "AuthenticateWithOOBOptions.code property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authenticatewithooboptions": {
        "title": "AuthenticateWithOOBOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authenticatewithooboptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithOOBOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authenticatewithtotpoptions": {
        "title": "AuthenticateWithTOTPOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authenticatewithtotpoptions.otp": {
        "title": "AuthenticateWithTOTPOptions.otp property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authenticatewithtotpoptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithTOTPOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authenticationsession": {
        "title": "AuthenticationSession interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authenticationsession.step": {
        "title": "AuthenticationSession.step property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.authenticationsession.token": {
        "title": "AuthenticationSession.token property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.baseapiclient.addloginid": {
        "title": "BaseAPIClient.addLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.baseapiclient.listidentities": {
        "title": "BaseAPIClient.listIdentities() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.baseapiclient.oauthhandler": {
        "title": "BaseAPIClient.oauthHandler() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.baseapiclient.removeloginid": {
        "title": "BaseAPIClient.removeLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.baseapiclient.updateloginid": {
        "title": "BaseAPIClient.updateLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.bytearray.length": {
        "title": "ByteArray.length property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.bytearray": {
        "title": "ByteArray interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.container.configure": {
        "title": "Container.configure() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.container.fetch": {
        "title": "Container.fetch() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.container.name": {
        "title": "Container.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewoobemailoptions.channel": {
        "title": "CreateNewOOBEmailOptions.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewoobemailoptions.email": {
        "title": "CreateNewOOBEmailOptions.email property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewoobemailoptions": {
        "title": "CreateNewOOBEmailOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewoobresult.authenticatorid": {
        "title": "CreateNewOOBResult.authenticatorID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewoobresult.authenticatortype": {
        "title": "CreateNewOOBResult.authenticatorType property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewoobresult.channel": {
        "title": "CreateNewOOBResult.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewoobresult": {
        "title": "CreateNewOOBResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewoobsmsoptions.channel": {
        "title": "CreateNewOOBSMSOptions.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewoobsmsoptions": {
        "title": "CreateNewOOBSMSOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewoobsmsoptions.phone": {
        "title": "CreateNewOOBSMSOptions.phone property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewtotpoptions.accountname": {
        "title": "CreateNewTOTPOptions.accountName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewtotpoptions.displayname": {
        "title": "CreateNewTOTPOptions.displayName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewtotpoptions.issuer": {
        "title": "CreateNewTOTPOptions.issuer property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewtotpoptions": {
        "title": "CreateNewTOTPOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewtotpresult.authenticatorid": {
        "title": "CreateNewTOTPResult.authenticatorID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewtotpresult.authenticatortype": {
        "title": "CreateNewTOTPResult.authenticatorType property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewtotpresult": {
        "title": "CreateNewTOTPResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewtotpresult.otpauthuri": {
        "title": "CreateNewTOTPResult.otpauthURI property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewtotpresult.qrcodeimageuri": {
        "title": "CreateNewTOTPResult.qrCodeImageURI property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.createnewtotpresult.secret": {
        "title": "CreateNewTOTPResult.secret property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.getdevicename": {
        "title": "getDeviceName() function"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.imageprocessingpipelinebuilder.format": {
        "title": "ImageProcessingPipelineBuilder.format() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.imageprocessingpipelinebuilder.getname": {
        "title": "ImageProcessingPipelineBuilder.getName() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.imageprocessingpipelinebuilder.getvalue": {
        "title": "ImageProcessingPipelineBuilder.getValue() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.imageprocessingpipelinebuilder": {
        "title": "ImageProcessingPipelineBuilder class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.imageprocessingpipelinebuilder.quality": {
        "title": "ImageProcessingPipelineBuilder.quality() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.imageprocessingpipelinebuilder.resize": {
        "title": "ImageProcessingPipelineBuilder.resize() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.imageprocessingpipelinebuilder.settourlstring": {
        "title": "ImageProcessingPipelineBuilder.setToURLString() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.ismfarequirederror": {
        "title": "isMFARequiredError() function"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.isvalidationerror": {
        "title": "isValidationError() function"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client": {
        "title": "node-client package"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.activateoob": {
        "title": "MFAContainer.activateOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.activatetotp": {
        "title": "MFAContainer.activateTOTP() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.authenticatewithoob": {
        "title": "MFAContainer.authenticateWithOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.authenticatewithrecoverycode": {
        "title": "MFAContainer.authenticateWithRecoveryCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.authenticatewithtotp": {
        "title": "MFAContainer.authenticateWithTOTP() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.createnewoob": {
        "title": "MFAContainer.createNewOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.createnewtotp": {
        "title": "MFAContainer.createNewTOTP() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.deleteauthenticator": {
        "title": "MFAContainer.deleteAuthenticator() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.getauthenticators": {
        "title": "MFAContainer.getAuthenticators() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.listrecoverycode": {
        "title": "MFAContainer.listRecoveryCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer": {
        "title": "MFAContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.regeneraterecoverycode": {
        "title": "MFAContainer.regenerateRecoveryCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.revokealltrusteddevices": {
        "title": "MFAContainer.revokeAllTrustedDevices() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.mfacontainer.triggeroob": {
        "title": "MFAContainer.triggerOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.nodeassetcontainer": {
        "title": "NodeAssetContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.nodeassetcontainer.upload": {
        "title": "NodeAssetContainer.upload() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.nodecontainer": {
        "title": "NodeContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthmanualauthorizationurloptions.action": {
        "title": "OAuthManualAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthmanualauthorizationurloptions.callbackurl": {
        "title": "OAuthManualAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthmanualauthorizationurloptions": {
        "title": "OAuthManualAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthmanualauthorizationurloptions.uxmode": {
        "title": "OAuthManualAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthmobileappauthorizationurloptions.action": {
        "title": "OAuthMobileAppAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthmobileappauthorizationurloptions.callbackurl": {
        "title": "OAuthMobileAppAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthmobileappauthorizationurloptions": {
        "title": "OAuthMobileAppAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oauthmobileappauthorizationurloptions.uxmode": {
        "title": "OAuthMobileAppAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobemailauthenticator.activatedat": {
        "title": "OOBEmailAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobemailauthenticator.channel": {
        "title": "OOBEmailAuthenticator.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobemailauthenticator.createdat": {
        "title": "OOBEmailAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobemailauthenticator.id": {
        "title": "OOBEmailAuthenticator.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobemailauthenticator.maskedemail": {
        "title": "OOBEmailAuthenticator.maskedEmail property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobemailauthenticator": {
        "title": "OOBEmailAuthenticator interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobemailauthenticator.type": {
        "title": "OOBEmailAuthenticator.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobsmsauthenticator.activatedat": {
        "title": "OOBSMSAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobsmsauthenticator.channel": {
        "title": "OOBSMSAuthenticator.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobsmsauthenticator.createdat": {
        "title": "OOBSMSAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobsmsauthenticator.id": {
        "title": "OOBSMSAuthenticator.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobsmsauthenticator.maskedphone": {
        "title": "OOBSMSAuthenticator.maskedPhone property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobsmsauthenticator": {
        "title": "OOBSMSAuthenticator interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.oobsmsauthenticator.type": {
        "title": "OOBSMSAuthenticator.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.session.createdat": {
        "title": "Session.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.session.data": {
        "title": "Session.data property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.session.id": {
        "title": "Session.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.session.identityid": {
        "title": "Session.identityID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.session": {
        "title": "Session interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.session.name": {
        "title": "Session.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.session.useragent": {
        "title": "Session.userAgent property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.skygearerror.message": {
        "title": "SkygearError.message property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.skygearerror.name": {
        "title": "SkygearError.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.skygearerror.reason": {
        "title": "SkygearError.reason property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.totpauthenticator.activatedat": {
        "title": "TOTPAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.totpauthenticator.createdat": {
        "title": "TOTPAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.totpauthenticator.displayname": {
        "title": "TOTPAuthenticator.displayName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.totpauthenticator.id": {
        "title": "TOTPAuthenticator.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.totpauthenticator": {
        "title": "TOTPAuthenticator interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.totpauthenticator.type": {
        "title": "TOTPAuthenticator.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.uploadassetoptions.access": {
        "title": "UploadAssetOptions.access property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.uploadassetoptions.headers": {
        "title": "UploadAssetOptions.headers property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.uploadassetoptions": {
        "title": "UploadAssetOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.uploadassetoptions.prefix": {
        "title": "UploadAssetOptions.prefix property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.uploadassetoptions.size": {
        "title": "UploadAssetOptions.size property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.user.createdat": {
        "title": "User.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.user.id": {
        "title": "User.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.user.isverified": {
        "title": "User.isVerified property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.user": {
        "title": "User interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.user.metadata": {
        "title": "User.metadata property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.validationerror": {
        "title": "ValidationError interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.validationerror.reason": {
        "title": "ValidationError.reason property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.validationerrorcausebase.details": {
        "title": "ValidationErrorCauseBase.details property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.validationerrorcausebase.kind": {
        "title": "ValidationErrorCauseBase.kind property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.validationerrorcausebase": {
        "title": "ValidationErrorCauseBase interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.validationerrorcausebase.message": {
        "title": "ValidationErrorCauseBase.message property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-node-client.validationerrorcausebase.pointer": {
        "title": "ValidationErrorCauseBase.pointer property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.activateoobresult": {
        "title": "ActivateOOBResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.activateoobresult.recoverycodes": {
        "title": "ActivateOOBResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.activatetotpresult": {
        "title": "ActivateTOTPResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.activatetotpresult.recoverycodes": {
        "title": "ActivateTOTPResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.addappleidcredentialrevokedlistener": {
        "title": "addAppleIDCredentialRevokedListener() function"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.addloginid": {
        "title": "AuthContainer.addLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.listidentities": {
        "title": "AuthContainer.listIdentities() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.removeloginid": {
        "title": "AuthContainer.removeLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.requestphoneverification": {
        "title": "AuthContainer.requestPhoneVerification() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.updateloginid": {
        "title": "AuthContainer.updateLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authenticatewithooboptions.code": {
        "title": "AuthenticateWithOOBOptions.code property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authenticatewithooboptions": {
        "title": "AuthenticateWithOOBOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authenticatewithooboptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithOOBOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authenticatewithtotpoptions": {
        "title": "AuthenticateWithTOTPOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authenticatewithtotpoptions.otp": {
        "title": "AuthenticateWithTOTPOptions.otp property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authenticatewithtotpoptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithTOTPOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authenticationsession": {
        "title": "AuthenticationSession interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authenticationsession.step": {
        "title": "AuthenticationSession.step property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.authenticationsession.token": {
        "title": "AuthenticationSession.token property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.baseapiclient.addloginid": {
        "title": "BaseAPIClient.addLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.baseapiclient.listidentities": {
        "title": "BaseAPIClient.listIdentities() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.baseapiclient.oauthhandler": {
        "title": "BaseAPIClient.oauthHandler() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.baseapiclient.removeloginid": {
        "title": "BaseAPIClient.removeLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.baseapiclient.updateloginid": {
        "title": "BaseAPIClient.updateLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.bytearray.length": {
        "title": "ByteArray.length property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.bytearray": {
        "title": "ByteArray interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.container.configure": {
        "title": "Container.configure() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.container.fetch": {
        "title": "Container.fetch() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.container.name": {
        "title": "Container.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewoobemailoptions.channel": {
        "title": "CreateNewOOBEmailOptions.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewoobemailoptions.email": {
        "title": "CreateNewOOBEmailOptions.email property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewoobemailoptions": {
        "title": "CreateNewOOBEmailOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewoobresult.authenticatorid": {
        "title": "CreateNewOOBResult.authenticatorID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewoobresult.authenticatortype": {
        "title": "CreateNewOOBResult.authenticatorType property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewoobresult.channel": {
        "title": "CreateNewOOBResult.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewoobresult": {
        "title": "CreateNewOOBResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewoobsmsoptions.channel": {
        "title": "CreateNewOOBSMSOptions.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewoobsmsoptions": {
        "title": "CreateNewOOBSMSOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewoobsmsoptions.phone": {
        "title": "CreateNewOOBSMSOptions.phone property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewtotpoptions.accountname": {
        "title": "CreateNewTOTPOptions.accountName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewtotpoptions.displayname": {
        "title": "CreateNewTOTPOptions.displayName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewtotpoptions.issuer": {
        "title": "CreateNewTOTPOptions.issuer property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewtotpoptions": {
        "title": "CreateNewTOTPOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewtotpresult.authenticatorid": {
        "title": "CreateNewTOTPResult.authenticatorID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewtotpresult.authenticatortype": {
        "title": "CreateNewTOTPResult.authenticatorType property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewtotpresult": {
        "title": "CreateNewTOTPResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewtotpresult.otpauthuri": {
        "title": "CreateNewTOTPResult.otpauthURI property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewtotpresult.qrcodeimageuri": {
        "title": "CreateNewTOTPResult.qrCodeImageURI property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.createnewtotpresult.secret": {
        "title": "CreateNewTOTPResult.secret property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.getcredentialstateforuserid": {
        "title": "getCredentialStateForUserID() function"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.imageprocessingpipelinebuilder.format": {
        "title": "ImageProcessingPipelineBuilder.format() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.imageprocessingpipelinebuilder.getname": {
        "title": "ImageProcessingPipelineBuilder.getName() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.imageprocessingpipelinebuilder.getvalue": {
        "title": "ImageProcessingPipelineBuilder.getValue() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.imageprocessingpipelinebuilder": {
        "title": "ImageProcessingPipelineBuilder class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.imageprocessingpipelinebuilder.quality": {
        "title": "ImageProcessingPipelineBuilder.quality() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.imageprocessingpipelinebuilder.resize": {
        "title": "ImageProcessingPipelineBuilder.resize() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.imageprocessingpipelinebuilder.settourlstring": {
        "title": "ImageProcessingPipelineBuilder.setToURLString() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.ismfarequirederror": {
        "title": "isMFARequiredError() function"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.isvalidationerror": {
        "title": "isValidationError() function"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native": {
        "title": "react-native package"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.activateoob": {
        "title": "MFAContainer.activateOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.activatetotp": {
        "title": "MFAContainer.activateTOTP() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.authenticatewithoob": {
        "title": "MFAContainer.authenticateWithOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.authenticatewithrecoverycode": {
        "title": "MFAContainer.authenticateWithRecoveryCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.authenticatewithtotp": {
        "title": "MFAContainer.authenticateWithTOTP() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.createnewoob": {
        "title": "MFAContainer.createNewOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.createnewtotp": {
        "title": "MFAContainer.createNewTOTP() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.deleteauthenticator": {
        "title": "MFAContainer.deleteAuthenticator() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.getauthenticators": {
        "title": "MFAContainer.getAuthenticators() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.listrecoverycode": {
        "title": "MFAContainer.listRecoveryCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer": {
        "title": "MFAContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.regeneraterecoverycode": {
        "title": "MFAContainer.regenerateRecoveryCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.revokealltrusteddevices": {
        "title": "MFAContainer.revokeAllTrustedDevices() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.mfacontainer.triggeroob": {
        "title": "MFAContainer.triggerOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthmanualauthorizationurloptions.action": {
        "title": "OAuthManualAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthmanualauthorizationurloptions.callbackurl": {
        "title": "OAuthManualAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthmanualauthorizationurloptions": {
        "title": "OAuthManualAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthmanualauthorizationurloptions.uxmode": {
        "title": "OAuthManualAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthmobileappauthorizationurloptions.action": {
        "title": "OAuthMobileAppAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthmobileappauthorizationurloptions.callbackurl": {
        "title": "OAuthMobileAppAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthmobileappauthorizationurloptions": {
        "title": "OAuthMobileAppAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oauthmobileappauthorizationurloptions.uxmode": {
        "title": "OAuthMobileAppAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobemailauthenticator.activatedat": {
        "title": "OOBEmailAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobemailauthenticator.channel": {
        "title": "OOBEmailAuthenticator.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobemailauthenticator.createdat": {
        "title": "OOBEmailAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobemailauthenticator.id": {
        "title": "OOBEmailAuthenticator.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobemailauthenticator.maskedemail": {
        "title": "OOBEmailAuthenticator.maskedEmail property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobemailauthenticator": {
        "title": "OOBEmailAuthenticator interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobemailauthenticator.type": {
        "title": "OOBEmailAuthenticator.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobsmsauthenticator.activatedat": {
        "title": "OOBSMSAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobsmsauthenticator.channel": {
        "title": "OOBSMSAuthenticator.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobsmsauthenticator.createdat": {
        "title": "OOBSMSAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobsmsauthenticator.id": {
        "title": "OOBSMSAuthenticator.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobsmsauthenticator.maskedphone": {
        "title": "OOBSMSAuthenticator.maskedPhone property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobsmsauthenticator": {
        "title": "OOBSMSAuthenticator interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.oobsmsauthenticator.type": {
        "title": "OOBSMSAuthenticator.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.reactnativeassetcontainer": {
        "title": "ReactNativeAssetContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.reactnativeassetcontainer.upload": {
        "title": "ReactNativeAssetContainer.upload() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.reactnativeauthcontainer._performoauth": {
        "title": "ReactNativeAuthContainer.\\_performOAuth() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.reactnativeauthcontainer._performsigninwithapple": {
        "title": "ReactNativeAuthContainer.\\_performSignInWithApple() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.reactnativeauthcontainer.linkapple": {
        "title": "ReactNativeAuthContainer.linkApple() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.reactnativeauthcontainer.linkoauthprovider": {
        "title": "ReactNativeAuthContainer.linkOAuthProvider() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.reactnativeauthcontainer.loginapple": {
        "title": "ReactNativeAuthContainer.loginApple() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.reactnativeauthcontainer.loginoauthprovider": {
        "title": "ReactNativeAuthContainer.loginOAuthProvider() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.reactnativeauthcontainer": {
        "title": "ReactNativeAuthContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.reactnativecontainer.auth": {
        "title": "ReactNativeContainer.auth property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.reactnativecontainer": {
        "title": "ReactNativeContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.session.createdat": {
        "title": "Session.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.session.data": {
        "title": "Session.data property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.session.id": {
        "title": "Session.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.session.identityid": {
        "title": "Session.identityID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.session": {
        "title": "Session interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.session.name": {
        "title": "Session.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.session.useragent": {
        "title": "Session.userAgent property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.skygearerror.message": {
        "title": "SkygearError.message property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.skygearerror.name": {
        "title": "SkygearError.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.skygearerror.reason": {
        "title": "SkygearError.reason property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.totpauthenticator.activatedat": {
        "title": "TOTPAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.totpauthenticator.createdat": {
        "title": "TOTPAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.totpauthenticator.displayname": {
        "title": "TOTPAuthenticator.displayName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.totpauthenticator.id": {
        "title": "TOTPAuthenticator.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.totpauthenticator": {
        "title": "TOTPAuthenticator interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.totpauthenticator.type": {
        "title": "TOTPAuthenticator.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.uploadassetoptions.access": {
        "title": "UploadAssetOptions.access property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.uploadassetoptions.headers": {
        "title": "UploadAssetOptions.headers property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.uploadassetoptions": {
        "title": "UploadAssetOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.uploadassetoptions.onuploadprogress": {
        "title": "UploadAssetOptions.onUploadProgress property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.uploadassetoptions.prefix": {
        "title": "UploadAssetOptions.prefix property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.user.createdat": {
        "title": "User.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.user.id": {
        "title": "User.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.user.isverified": {
        "title": "User.isVerified property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.user": {
        "title": "User interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.user.metadata": {
        "title": "User.metadata property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.validationerror": {
        "title": "ValidationError interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.validationerror.reason": {
        "title": "ValidationError.reason property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.validationerrorcausebase.details": {
        "title": "ValidationErrorCauseBase.details property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.validationerrorcausebase.kind": {
        "title": "ValidationErrorCauseBase.kind property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.validationerrorcausebase": {
        "title": "ValidationErrorCauseBase interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.validationerrorcausebase.message": {
        "title": "ValidationErrorCauseBase.message property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-react-native.validationerrorcausebase.pointer": {
        "title": "ValidationErrorCauseBase.pointer property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.activateoobresult": {
        "title": "ActivateOOBResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.activateoobresult.recoverycodes": {
        "title": "ActivateOOBResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.activatetotpresult": {
        "title": "ActivateTOTPResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.activatetotpresult.recoverycodes": {
        "title": "ActivateTOTPResult.recoveryCodes property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.addloginid": {
        "title": "AuthContainer.addLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.listidentities": {
        "title": "AuthContainer.listIdentities() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.removeloginid": {
        "title": "AuthContainer.removeLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.requestphoneverification": {
        "title": "AuthContainer.requestPhoneVerification() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.updateloginid": {
        "title": "AuthContainer.updateLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authenticatewithooboptions.code": {
        "title": "AuthenticateWithOOBOptions.code property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authenticatewithooboptions": {
        "title": "AuthenticateWithOOBOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authenticatewithooboptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithOOBOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authenticatewithtotpoptions": {
        "title": "AuthenticateWithTOTPOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authenticatewithtotpoptions.otp": {
        "title": "AuthenticateWithTOTPOptions.otp property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authenticatewithtotpoptions.skipmfaforcurrentdevice": {
        "title": "AuthenticateWithTOTPOptions.skipMFAForCurrentDevice property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authenticationsession": {
        "title": "AuthenticationSession interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authenticationsession.step": {
        "title": "AuthenticationSession.step property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.authenticationsession.token": {
        "title": "AuthenticationSession.token property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.baseapiclient.addloginid": {
        "title": "BaseAPIClient.addLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.baseapiclient.listidentities": {
        "title": "BaseAPIClient.listIdentities() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.baseapiclient.oauthhandler": {
        "title": "BaseAPIClient.oauthHandler() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.baseapiclient.removeloginid": {
        "title": "BaseAPIClient.removeLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.baseapiclient.updateloginid": {
        "title": "BaseAPIClient.updateLoginID() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.bytearray.length": {
        "title": "ByteArray.length property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.bytearray": {
        "title": "ByteArray interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.container.configure": {
        "title": "Container.configure() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.container.fetch": {
        "title": "Container.fetch() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.container.name": {
        "title": "Container.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewoobemailoptions.channel": {
        "title": "CreateNewOOBEmailOptions.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewoobemailoptions.email": {
        "title": "CreateNewOOBEmailOptions.email property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewoobemailoptions": {
        "title": "CreateNewOOBEmailOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewoobresult.authenticatorid": {
        "title": "CreateNewOOBResult.authenticatorID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewoobresult.authenticatortype": {
        "title": "CreateNewOOBResult.authenticatorType property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewoobresult.channel": {
        "title": "CreateNewOOBResult.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewoobresult": {
        "title": "CreateNewOOBResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewoobsmsoptions.channel": {
        "title": "CreateNewOOBSMSOptions.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewoobsmsoptions": {
        "title": "CreateNewOOBSMSOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewoobsmsoptions.phone": {
        "title": "CreateNewOOBSMSOptions.phone property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewtotpoptions.accountname": {
        "title": "CreateNewTOTPOptions.accountName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewtotpoptions.displayname": {
        "title": "CreateNewTOTPOptions.displayName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewtotpoptions.issuer": {
        "title": "CreateNewTOTPOptions.issuer property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewtotpoptions": {
        "title": "CreateNewTOTPOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewtotpresult.authenticatorid": {
        "title": "CreateNewTOTPResult.authenticatorID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewtotpresult.authenticatortype": {
        "title": "CreateNewTOTPResult.authenticatorType property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewtotpresult": {
        "title": "CreateNewTOTPResult interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewtotpresult.otpauthuri": {
        "title": "CreateNewTOTPResult.otpauthURI property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewtotpresult.qrcodeimageuri": {
        "title": "CreateNewTOTPResult.qrCodeImageURI property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.createnewtotpresult.secret": {
        "title": "CreateNewTOTPResult.secret property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.imageprocessingpipelinebuilder.format": {
        "title": "ImageProcessingPipelineBuilder.format() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.imageprocessingpipelinebuilder.getname": {
        "title": "ImageProcessingPipelineBuilder.getName() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.imageprocessingpipelinebuilder.getvalue": {
        "title": "ImageProcessingPipelineBuilder.getValue() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.imageprocessingpipelinebuilder": {
        "title": "ImageProcessingPipelineBuilder class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.imageprocessingpipelinebuilder.quality": {
        "title": "ImageProcessingPipelineBuilder.quality() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.imageprocessingpipelinebuilder.resize": {
        "title": "ImageProcessingPipelineBuilder.resize() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.imageprocessingpipelinebuilder.settourlstring": {
        "title": "ImageProcessingPipelineBuilder.setToURLString() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.ismfarequirederror": {
        "title": "isMFARequiredError() function"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.isvalidationerror": {
        "title": "isValidationError() function"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web": {
        "title": "web package"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.activateoob": {
        "title": "MFAContainer.activateOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.activatetotp": {
        "title": "MFAContainer.activateTOTP() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.authenticatewithoob": {
        "title": "MFAContainer.authenticateWithOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.authenticatewithrecoverycode": {
        "title": "MFAContainer.authenticateWithRecoveryCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.authenticatewithtotp": {
        "title": "MFAContainer.authenticateWithTOTP() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.createnewoob": {
        "title": "MFAContainer.createNewOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.createnewtotp": {
        "title": "MFAContainer.createNewTOTP() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.deleteauthenticator": {
        "title": "MFAContainer.deleteAuthenticator() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.getauthenticators": {
        "title": "MFAContainer.getAuthenticators() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.listrecoverycode": {
        "title": "MFAContainer.listRecoveryCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer": {
        "title": "MFAContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.regeneraterecoverycode": {
        "title": "MFAContainer.regenerateRecoveryCode() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.revokealltrusteddevices": {
        "title": "MFAContainer.revokeAllTrustedDevices() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.mfacontainer.triggeroob": {
        "title": "MFAContainer.triggerOOB() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthmanualauthorizationurloptions.action": {
        "title": "OAuthManualAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthmanualauthorizationurloptions.callbackurl": {
        "title": "OAuthManualAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthmanualauthorizationurloptions": {
        "title": "OAuthManualAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthmanualauthorizationurloptions.uxmode": {
        "title": "OAuthManualAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthmobileappauthorizationurloptions.action": {
        "title": "OAuthMobileAppAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthmobileappauthorizationurloptions.callbackurl": {
        "title": "OAuthMobileAppAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthmobileappauthorizationurloptions": {
        "title": "OAuthMobileAppAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oauthmobileappauthorizationurloptions.uxmode": {
        "title": "OAuthMobileAppAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobemailauthenticator.activatedat": {
        "title": "OOBEmailAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobemailauthenticator.channel": {
        "title": "OOBEmailAuthenticator.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobemailauthenticator.createdat": {
        "title": "OOBEmailAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobemailauthenticator.id": {
        "title": "OOBEmailAuthenticator.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobemailauthenticator.maskedemail": {
        "title": "OOBEmailAuthenticator.maskedEmail property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobemailauthenticator": {
        "title": "OOBEmailAuthenticator interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobemailauthenticator.type": {
        "title": "OOBEmailAuthenticator.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobsmsauthenticator.activatedat": {
        "title": "OOBSMSAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobsmsauthenticator.channel": {
        "title": "OOBSMSAuthenticator.channel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobsmsauthenticator.createdat": {
        "title": "OOBSMSAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobsmsauthenticator.id": {
        "title": "OOBSMSAuthenticator.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobsmsauthenticator.maskedphone": {
        "title": "OOBSMSAuthenticator.maskedPhone property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobsmsauthenticator": {
        "title": "OOBSMSAuthenticator interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.oobsmsauthenticator.type": {
        "title": "OOBSMSAuthenticator.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.session.createdat": {
        "title": "Session.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.session.data": {
        "title": "Session.data property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.session.id": {
        "title": "Session.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.session.identityid": {
        "title": "Session.identityID property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.session": {
        "title": "Session interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.session.name": {
        "title": "Session.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.session.useragent": {
        "title": "Session.userAgent property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.skygearerror.message": {
        "title": "SkygearError.message property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.skygearerror.name": {
        "title": "SkygearError.name property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.skygearerror.reason": {
        "title": "SkygearError.reason property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.totpauthenticator.activatedat": {
        "title": "TOTPAuthenticator.activatedAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.totpauthenticator.createdat": {
        "title": "TOTPAuthenticator.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.totpauthenticator.displayname": {
        "title": "TOTPAuthenticator.displayName property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.totpauthenticator.id": {
        "title": "TOTPAuthenticator.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.totpauthenticator": {
        "title": "TOTPAuthenticator interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.totpauthenticator.type": {
        "title": "TOTPAuthenticator.type property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.uploadassetoptions.access": {
        "title": "UploadAssetOptions.access property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.uploadassetoptions.headers": {
        "title": "UploadAssetOptions.headers property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.uploadassetoptions": {
        "title": "UploadAssetOptions interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.uploadassetoptions.onuploadprogress": {
        "title": "UploadAssetOptions.onUploadProgress property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.uploadassetoptions.prefix": {
        "title": "UploadAssetOptions.prefix property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.user.createdat": {
        "title": "User.createdAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.user.id": {
        "title": "User.id property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.user.isverified": {
        "title": "User.isVerified property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.user": {
        "title": "User interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.user.metadata": {
        "title": "User.metadata property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.validationerror": {
        "title": "ValidationError interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.validationerror.reason": {
        "title": "ValidationError.reason property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.validationerrorcausebase.details": {
        "title": "ValidationErrorCauseBase.details property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.validationerrorcausebase.kind": {
        "title": "ValidationErrorCauseBase.kind property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.validationerrorcausebase": {
        "title": "ValidationErrorCauseBase interface"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.validationerrorcausebase.message": {
        "title": "ValidationErrorCauseBase.message property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.validationerrorcausebase.pointer": {
        "title": "ValidationErrorCauseBase.pointer property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webapiclient.fetchfunction": {
        "title": "WebAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webapiclient": {
        "title": "WebAPIClient class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webassetcontainer": {
        "title": "WebAssetContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webassetcontainer.upload": {
        "title": "WebAssetContainer.upload() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webauthcontainer.getlinkredirectresult": {
        "title": "WebAuthContainer.getLinkRedirectResult() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webauthcontainer.getloginredirectresult": {
        "title": "WebAuthContainer.getLoginRedirectResult() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webauthcontainer.linkoauthproviderwithpopup": {
        "title": "WebAuthContainer.linkOAuthProviderWithPopup() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webauthcontainer.linkoauthproviderwithredirect": {
        "title": "WebAuthContainer.linkOAuthProviderWithRedirect() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webauthcontainer.loginoauthproviderwithpopup": {
        "title": "WebAuthContainer.loginOAuthProviderWithPopup() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webauthcontainer.loginoauthproviderwithredirect": {
        "title": "WebAuthContainer.loginOAuthProviderWithRedirect() method"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webauthcontainer": {
        "title": "WebAuthContainer class"
      },
      "version-2.0.0-alpha.18/version-2.0.0-alpha.18-web.webcontainer": {
        "title": "WebContainer class"
      },
      "version-2.1.0/version-2.1.0-node-client.user.ismanuallyverified": {
        "title": "User.isManuallyVerified property"
      },
      "version-2.1.0/version-2.1.0-node-client.user": {
        "title": "User interface"
      },
      "version-2.1.0/version-2.1.0-react-native.user.ismanuallyverified": {
        "title": "User.isManuallyVerified property"
      },
      "version-2.1.0/version-2.1.0-react-native.user": {
        "title": "User interface"
      },
      "version-2.1.0/version-2.1.0-web.user.ismanuallyverified": {
        "title": "User.isManuallyVerified property"
      },
      "version-2.1.0/version-2.1.0-web.user": {
        "title": "User interface"
      },
      "version-2.3.0/version-2.3.0-node-client.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.3.0/version-2.3.0-node-client.authenticationsession": {
        "title": "AuthenticationSession interface"
      },
      "version-2.3.0/version-2.3.0-node-client.authenticationsession.step": {
        "title": "AuthenticationSession.step property"
      },
      "version-2.3.0/version-2.3.0-node-client.authorizeoptions": {
        "title": "AuthorizeOptions interface"
      },
      "version-2.3.0/version-2.3.0-node-client.authorizeoptions.redirecturi": {
        "title": "AuthorizeOptions.redirectURI property"
      },
      "version-2.3.0/version-2.3.0-node-client.authorizeoptions.state": {
        "title": "AuthorizeOptions.state property"
      },
      "version-2.3.0/version-2.3.0-node-client.authresponse.expiresin": {
        "title": "AuthResponse.expiresIn property"
      },
      "version-2.3.0/version-2.3.0-node-client.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.appendpoint": {
        "title": "BaseAPIClient.appEndpoint property"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.assetendpoint": {
        "title": "BaseAPIClient.assetEndpoint property"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.authendpoint": {
        "title": "BaseAPIClient.authEndpoint property"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.delasset": {
        "title": "BaseAPIClient.delAsset() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.delauth": {
        "title": "BaseAPIClient.delAuth() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.getasset": {
        "title": "BaseAPIClient.getAsset() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.getauth": {
        "title": "BaseAPIClient.getAuth() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.postasset": {
        "title": "BaseAPIClient.postAsset() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.postauth": {
        "title": "BaseAPIClient.postAuth() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.setaccesstokenandexpiresin": {
        "title": "BaseAPIClient.setAccessTokenAndExpiresIn() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.setendpoint": {
        "title": "BaseAPIClient.setEndpoint() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.setshouldnotrefreshtoken": {
        "title": "BaseAPIClient.setShouldNotRefreshToken() method"
      },
      "version-2.3.0/version-2.3.0-node-client.baseapiclient.setshouldrefreshtokennow": {
        "title": "BaseAPIClient.setShouldRefreshTokenNow() method"
      },
      "version-2.3.0/version-2.3.0-node-client.configureoptions.appendpoint": {
        "title": "ConfigureOptions.appEndpoint property"
      },
      "version-2.3.0/version-2.3.0-node-client.configureoptions.assetendpoint": {
        "title": "ConfigureOptions.assetEndpoint property"
      },
      "version-2.3.0/version-2.3.0-node-client.configureoptions.authendpoint": {
        "title": "ConfigureOptions.authEndpoint property"
      },
      "version-2.3.0/version-2.3.0-node-client.configureoptions.clientid": {
        "title": "ConfigureOptions.clientID property"
      },
      "version-2.3.0/version-2.3.0-node-client.configureoptions": {
        "title": "ConfigureOptions interface"
      },
      "version-2.3.0/version-2.3.0-node-client.container._configure": {
        "title": "Container.\\_configure() method"
      },
      "version-2.3.0/version-2.3.0-node-client.container.classicauth": {
        "title": "Container.classicAuth property"
      },
      "version-2.3.0/version-2.3.0-node-client.container": {
        "title": "Container class"
      },
      "version-2.3.0/version-2.3.0-node-client.containerstorage.deloidccodeverifier": {
        "title": "ContainerStorage.delOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-node-client.containerstorage.getoidccodeverifier": {
        "title": "ContainerStorage.getOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-node-client.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.3.0/version-2.3.0-node-client.containerstorage.setoidccodeverifier": {
        "title": "ContainerStorage.setOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-node-client.decodequery": {
        "title": "decodeQuery() function"
      },
      "version-2.3.0/version-2.3.0-node-client.decodequerycomponent": {
        "title": "decodeQueryComponent() function"
      },
      "version-2.3.0/version-2.3.0-node-client.globaljsoncontainerstorage.deloidccodeverifier": {
        "title": "GlobalJSONContainerStorage.delOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-node-client.globaljsoncontainerstorage.getoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.getOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-node-client.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.3.0/version-2.3.0-node-client.globaljsoncontainerstorage.setoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.setOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-node-client": {
        "title": "node-client package"
      },
      "version-2.3.0/version-2.3.0-node-client.nodecontainer.configure": {
        "title": "NodeContainer.configure() method"
      },
      "version-2.3.0/version-2.3.0-node-client.nodecontainer": {
        "title": "NodeContainer class"
      },
      "version-2.3.0/version-2.3.0-node-client.oautherror.error_description": {
        "title": "OAuthError.error\\_description property"
      },
      "version-2.3.0/version-2.3.0-node-client.oautherror.error_uri": {
        "title": "OAuthError.error\\_uri property"
      },
      "version-2.3.0/version-2.3.0-node-client.oautherror.error": {
        "title": "OAuthError.error property"
      },
      "version-2.3.0/version-2.3.0-node-client.oautherror": {
        "title": "OAuthError interface"
      },
      "version-2.3.0/version-2.3.0-node-client.oautherror.state": {
        "title": "OAuthError.state property"
      },
      "version-2.3.0/version-2.3.0-node-client.oidccontainer._constructor_": {
        "title": "OIDCContainer.(constructor)"
      },
      "version-2.3.0/version-2.3.0-node-client.oidccontainer._finishauthorization": {
        "title": "OIDCContainer.\\_finishAuthorization() method"
      },
      "version-2.3.0/version-2.3.0-node-client.oidccontainer._logout": {
        "title": "OIDCContainer.\\_logout() method"
      },
      "version-2.3.0/version-2.3.0-node-client.oidccontainer._setupcodeverifier": {
        "title": "OIDCContainer.\\_setupCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-node-client.oidccontainer.auth": {
        "title": "OIDCContainer.auth property"
      },
      "version-2.3.0/version-2.3.0-node-client.oidccontainer.authorizeendpoint": {
        "title": "OIDCContainer.authorizeEndpoint() method"
      },
      "version-2.3.0/version-2.3.0-node-client.oidccontainer.clientid": {
        "title": "OIDCContainer.clientID property"
      },
      "version-2.3.0/version-2.3.0-node-client.oidccontainer.isthirdparty": {
        "title": "OIDCContainer.isThirdParty property"
      },
      "version-2.3.0/version-2.3.0-node-client.oidccontainer": {
        "title": "OIDCContainer class"
      },
      "version-2.3.0/version-2.3.0-node-client.oidccontainer.parent": {
        "title": "OIDCContainer.parent property"
      },
      "version-2.3.0/version-2.3.0-react-native.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.3.0/version-2.3.0-react-native.authenticationsession": {
        "title": "AuthenticationSession interface"
      },
      "version-2.3.0/version-2.3.0-react-native.authenticationsession.step": {
        "title": "AuthenticationSession.step property"
      },
      "version-2.3.0/version-2.3.0-react-native.authorizeoptions": {
        "title": "AuthorizeOptions interface"
      },
      "version-2.3.0/version-2.3.0-react-native.authorizeoptions.redirecturi": {
        "title": "AuthorizeOptions.redirectURI property"
      },
      "version-2.3.0/version-2.3.0-react-native.authorizeoptions.state": {
        "title": "AuthorizeOptions.state property"
      },
      "version-2.3.0/version-2.3.0-react-native.authresponse.expiresin": {
        "title": "AuthResponse.expiresIn property"
      },
      "version-2.3.0/version-2.3.0-react-native.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.appendpoint": {
        "title": "BaseAPIClient.appEndpoint property"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.assetendpoint": {
        "title": "BaseAPIClient.assetEndpoint property"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.authendpoint": {
        "title": "BaseAPIClient.authEndpoint property"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.delasset": {
        "title": "BaseAPIClient.delAsset() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.delauth": {
        "title": "BaseAPIClient.delAuth() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.getasset": {
        "title": "BaseAPIClient.getAsset() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.getauth": {
        "title": "BaseAPIClient.getAuth() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.postasset": {
        "title": "BaseAPIClient.postAsset() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.postauth": {
        "title": "BaseAPIClient.postAuth() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.setaccesstokenandexpiresin": {
        "title": "BaseAPIClient.setAccessTokenAndExpiresIn() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.setendpoint": {
        "title": "BaseAPIClient.setEndpoint() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.setshouldnotrefreshtoken": {
        "title": "BaseAPIClient.setShouldNotRefreshToken() method"
      },
      "version-2.3.0/version-2.3.0-react-native.baseapiclient.setshouldrefreshtokennow": {
        "title": "BaseAPIClient.setShouldRefreshTokenNow() method"
      },
      "version-2.3.0/version-2.3.0-react-native.configureoptions.appendpoint": {
        "title": "ConfigureOptions.appEndpoint property"
      },
      "version-2.3.0/version-2.3.0-react-native.configureoptions.assetendpoint": {
        "title": "ConfigureOptions.assetEndpoint property"
      },
      "version-2.3.0/version-2.3.0-react-native.configureoptions.authendpoint": {
        "title": "ConfigureOptions.authEndpoint property"
      },
      "version-2.3.0/version-2.3.0-react-native.configureoptions.clientid": {
        "title": "ConfigureOptions.clientID property"
      },
      "version-2.3.0/version-2.3.0-react-native.configureoptions": {
        "title": "ConfigureOptions interface"
      },
      "version-2.3.0/version-2.3.0-react-native.container._configure": {
        "title": "Container.\\_configure() method"
      },
      "version-2.3.0/version-2.3.0-react-native.container.classicauth": {
        "title": "Container.classicAuth property"
      },
      "version-2.3.0/version-2.3.0-react-native.container": {
        "title": "Container class"
      },
      "version-2.3.0/version-2.3.0-react-native.containerstorage.deloidccodeverifier": {
        "title": "ContainerStorage.delOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-react-native.containerstorage.getoidccodeverifier": {
        "title": "ContainerStorage.getOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-react-native.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.3.0/version-2.3.0-react-native.containerstorage.setoidccodeverifier": {
        "title": "ContainerStorage.setOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-react-native.decodequery": {
        "title": "decodeQuery() function"
      },
      "version-2.3.0/version-2.3.0-react-native.decodequerycomponent": {
        "title": "decodeQueryComponent() function"
      },
      "version-2.3.0/version-2.3.0-react-native.globaljsoncontainerstorage.deloidccodeverifier": {
        "title": "GlobalJSONContainerStorage.delOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-react-native.globaljsoncontainerstorage.getoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.getOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-react-native.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.3.0/version-2.3.0-react-native.globaljsoncontainerstorage.setoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.setOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-react-native": {
        "title": "react-native package"
      },
      "version-2.3.0/version-2.3.0-react-native.oautherror.error_description": {
        "title": "OAuthError.error\\_description property"
      },
      "version-2.3.0/version-2.3.0-react-native.oautherror.error_uri": {
        "title": "OAuthError.error\\_uri property"
      },
      "version-2.3.0/version-2.3.0-react-native.oautherror.error": {
        "title": "OAuthError.error property"
      },
      "version-2.3.0/version-2.3.0-react-native.oautherror": {
        "title": "OAuthError interface"
      },
      "version-2.3.0/version-2.3.0-react-native.oautherror.state": {
        "title": "OAuthError.state property"
      },
      "version-2.3.0/version-2.3.0-react-native.oidccontainer._constructor_": {
        "title": "OIDCContainer.(constructor)"
      },
      "version-2.3.0/version-2.3.0-react-native.oidccontainer._finishauthorization": {
        "title": "OIDCContainer.\\_finishAuthorization() method"
      },
      "version-2.3.0/version-2.3.0-react-native.oidccontainer._logout": {
        "title": "OIDCContainer.\\_logout() method"
      },
      "version-2.3.0/version-2.3.0-react-native.oidccontainer._setupcodeverifier": {
        "title": "OIDCContainer.\\_setupCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-react-native.oidccontainer.auth": {
        "title": "OIDCContainer.auth property"
      },
      "version-2.3.0/version-2.3.0-react-native.oidccontainer.authorizeendpoint": {
        "title": "OIDCContainer.authorizeEndpoint() method"
      },
      "version-2.3.0/version-2.3.0-react-native.oidccontainer.clientid": {
        "title": "OIDCContainer.clientID property"
      },
      "version-2.3.0/version-2.3.0-react-native.oidccontainer.isthirdparty": {
        "title": "OIDCContainer.isThirdParty property"
      },
      "version-2.3.0/version-2.3.0-react-native.oidccontainer": {
        "title": "OIDCContainer class"
      },
      "version-2.3.0/version-2.3.0-react-native.oidccontainer.parent": {
        "title": "OIDCContainer.parent property"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativecontainer.auth": {
        "title": "ReactNativeContainer.auth property"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativecontainer.classicauth": {
        "title": "ReactNativeContainer.classicAuth property"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativecontainer.configure": {
        "title": "ReactNativeContainer.configure() method"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativecontainer": {
        "title": "ReactNativeContainer class"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativeoidccontainer._constructor_": {
        "title": "ReactNativeOIDCContainer.(constructor)"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativeoidccontainer._setupcodeverifier": {
        "title": "ReactNativeOIDCContainer.\\_setupCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativeoidccontainer.authorize": {
        "title": "ReactNativeOIDCContainer.authorize() method"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativeoidccontainer.clientid": {
        "title": "ReactNativeOIDCContainer.clientID property"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativeoidccontainer.isthirdparty": {
        "title": "ReactNativeOIDCContainer.isThirdParty property"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativeoidccontainer.logout": {
        "title": "ReactNativeOIDCContainer.logout() method"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativeoidccontainer": {
        "title": "ReactNativeOIDCContainer class"
      },
      "version-2.3.0/version-2.3.0-react-native.reactnativeoidccontainer.openurl": {
        "title": "ReactNativeOIDCContainer.openURL() method"
      },
      "version-2.3.0/version-2.3.0-web.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.3.0/version-2.3.0-web.authenticationsession": {
        "title": "AuthenticationSession interface"
      },
      "version-2.3.0/version-2.3.0-web.authenticationsession.step": {
        "title": "AuthenticationSession.step property"
      },
      "version-2.3.0/version-2.3.0-web.authorizeoptions": {
        "title": "AuthorizeOptions interface"
      },
      "version-2.3.0/version-2.3.0-web.authorizeoptions.redirecturi": {
        "title": "AuthorizeOptions.redirectURI property"
      },
      "version-2.3.0/version-2.3.0-web.authorizeoptions.state": {
        "title": "AuthorizeOptions.state property"
      },
      "version-2.3.0/version-2.3.0-web.authresponse.expiresin": {
        "title": "AuthResponse.expiresIn property"
      },
      "version-2.3.0/version-2.3.0-web.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.appendpoint": {
        "title": "BaseAPIClient.appEndpoint property"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.assetendpoint": {
        "title": "BaseAPIClient.assetEndpoint property"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.authendpoint": {
        "title": "BaseAPIClient.authEndpoint property"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.delasset": {
        "title": "BaseAPIClient.delAsset() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.delauth": {
        "title": "BaseAPIClient.delAuth() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.getasset": {
        "title": "BaseAPIClient.getAsset() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.getauth": {
        "title": "BaseAPIClient.getAuth() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.postasset": {
        "title": "BaseAPIClient.postAsset() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.postauth": {
        "title": "BaseAPIClient.postAuth() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.setaccesstokenandexpiresin": {
        "title": "BaseAPIClient.setAccessTokenAndExpiresIn() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.setendpoint": {
        "title": "BaseAPIClient.setEndpoint() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.setshouldnotrefreshtoken": {
        "title": "BaseAPIClient.setShouldNotRefreshToken() method"
      },
      "version-2.3.0/version-2.3.0-web.baseapiclient.setshouldrefreshtokennow": {
        "title": "BaseAPIClient.setShouldRefreshTokenNow() method"
      },
      "version-2.3.0/version-2.3.0-web.configureoptions.appendpoint": {
        "title": "ConfigureOptions.appEndpoint property"
      },
      "version-2.3.0/version-2.3.0-web.configureoptions.assetendpoint": {
        "title": "ConfigureOptions.assetEndpoint property"
      },
      "version-2.3.0/version-2.3.0-web.configureoptions.authendpoint": {
        "title": "ConfigureOptions.authEndpoint property"
      },
      "version-2.3.0/version-2.3.0-web.configureoptions.clientid": {
        "title": "ConfigureOptions.clientID property"
      },
      "version-2.3.0/version-2.3.0-web.configureoptions.isthirdpartyapp": {
        "title": "ConfigureOptions.isThirdPartyApp property"
      },
      "version-2.3.0/version-2.3.0-web.configureoptions": {
        "title": "ConfigureOptions interface"
      },
      "version-2.3.0/version-2.3.0-web.container._configure": {
        "title": "Container.\\_configure() method"
      },
      "version-2.3.0/version-2.3.0-web.container.classicauth": {
        "title": "Container.classicAuth property"
      },
      "version-2.3.0/version-2.3.0-web.container": {
        "title": "Container class"
      },
      "version-2.3.0/version-2.3.0-web.containerstorage.deloidccodeverifier": {
        "title": "ContainerStorage.delOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-web.containerstorage.getoidccodeverifier": {
        "title": "ContainerStorage.getOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-web.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.3.0/version-2.3.0-web.containerstorage.setoidccodeverifier": {
        "title": "ContainerStorage.setOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-web.decodequery": {
        "title": "decodeQuery() function"
      },
      "version-2.3.0/version-2.3.0-web.decodequerycomponent": {
        "title": "decodeQueryComponent() function"
      },
      "version-2.3.0/version-2.3.0-web.globaljsoncontainerstorage.deloidccodeverifier": {
        "title": "GlobalJSONContainerStorage.delOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-web.globaljsoncontainerstorage.getoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.getOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-web.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.3.0/version-2.3.0-web.globaljsoncontainerstorage.setoidccodeverifier": {
        "title": "GlobalJSONContainerStorage.setOIDCCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-web": {
        "title": "web package"
      },
      "version-2.3.0/version-2.3.0-web.oautherror.error_description": {
        "title": "OAuthError.error\\_description property"
      },
      "version-2.3.0/version-2.3.0-web.oautherror.error_uri": {
        "title": "OAuthError.error\\_uri property"
      },
      "version-2.3.0/version-2.3.0-web.oautherror.error": {
        "title": "OAuthError.error property"
      },
      "version-2.3.0/version-2.3.0-web.oautherror": {
        "title": "OAuthError interface"
      },
      "version-2.3.0/version-2.3.0-web.oautherror.state": {
        "title": "OAuthError.state property"
      },
      "version-2.3.0/version-2.3.0-web.oidccontainer._constructor_": {
        "title": "OIDCContainer.(constructor)"
      },
      "version-2.3.0/version-2.3.0-web.oidccontainer._finishauthorization": {
        "title": "OIDCContainer.\\_finishAuthorization() method"
      },
      "version-2.3.0/version-2.3.0-web.oidccontainer._logout": {
        "title": "OIDCContainer.\\_logout() method"
      },
      "version-2.3.0/version-2.3.0-web.oidccontainer._setupcodeverifier": {
        "title": "OIDCContainer.\\_setupCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-web.oidccontainer.auth": {
        "title": "OIDCContainer.auth property"
      },
      "version-2.3.0/version-2.3.0-web.oidccontainer.authorizeendpoint": {
        "title": "OIDCContainer.authorizeEndpoint() method"
      },
      "version-2.3.0/version-2.3.0-web.oidccontainer.clientid": {
        "title": "OIDCContainer.clientID property"
      },
      "version-2.3.0/version-2.3.0-web.oidccontainer.isthirdparty": {
        "title": "OIDCContainer.isThirdParty property"
      },
      "version-2.3.0/version-2.3.0-web.oidccontainer": {
        "title": "OIDCContainer class"
      },
      "version-2.3.0/version-2.3.0-web.oidccontainer.parent": {
        "title": "OIDCContainer.parent property"
      },
      "version-2.3.0/version-2.3.0-web.webcontainer.auth": {
        "title": "WebContainer.auth property"
      },
      "version-2.3.0/version-2.3.0-web.webcontainer.classicauth": {
        "title": "WebContainer.classicAuth property"
      },
      "version-2.3.0/version-2.3.0-web.webcontainer.configure": {
        "title": "WebContainer.configure() method"
      },
      "version-2.3.0/version-2.3.0-web.webcontainer": {
        "title": "WebContainer class"
      },
      "version-2.3.0/version-2.3.0-web.weboidccontainer._constructor_": {
        "title": "WebOIDCContainer.(constructor)"
      },
      "version-2.3.0/version-2.3.0-web.weboidccontainer._setupcodeverifier": {
        "title": "WebOIDCContainer.\\_setupCodeVerifier() method"
      },
      "version-2.3.0/version-2.3.0-web.weboidccontainer.clientid": {
        "title": "WebOIDCContainer.clientID property"
      },
      "version-2.3.0/version-2.3.0-web.weboidccontainer.finishauthorization": {
        "title": "WebOIDCContainer.finishAuthorization() method"
      },
      "version-2.3.0/version-2.3.0-web.weboidccontainer.isthirdparty": {
        "title": "WebOIDCContainer.isThirdParty property"
      },
      "version-2.3.0/version-2.3.0-web.weboidccontainer.logout": {
        "title": "WebOIDCContainer.logout() method"
      },
      "version-2.3.0/version-2.3.0-web.weboidccontainer": {
        "title": "WebOIDCContainer class"
      },
      "version-2.3.0/version-2.3.0-web.weboidccontainer.startauthorization": {
        "title": "WebOIDCContainer.startAuthorization() method"
      },
      "version-2.4.0/version-2.4.0-node-client.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.4.0/version-2.4.0-node-client.authorizeoptions.loginhint": {
        "title": "AuthorizeOptions.loginHint property"
      },
      "version-2.4.0/version-2.4.0-node-client.authorizeoptions": {
        "title": "AuthorizeOptions interface"
      },
      "version-2.4.0/version-2.4.0-node-client.authorizeoptions.prompt": {
        "title": "AuthorizeOptions.prompt property"
      },
      "version-2.4.0/version-2.4.0-node-client.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.4.0/version-2.4.0-node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.4.0/version-2.4.0-node-client.baseapiclient.oauthchallenge": {
        "title": "BaseAPIClient.oauthChallenge() method"
      },
      "version-2.4.0/version-2.4.0-node-client.challengeresponse.expire_at": {
        "title": "ChallengeResponse.expire\\_at property"
      },
      "version-2.4.0/version-2.4.0-node-client.challengeresponse": {
        "title": "ChallengeResponse interface"
      },
      "version-2.4.0/version-2.4.0-node-client.challengeresponse.token": {
        "title": "ChallengeResponse.token property"
      },
      "version-2.4.0/version-2.4.0-node-client.containerstorage.delanonymouskeyid": {
        "title": "ContainerStorage.delAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-node-client.containerstorage.getanonymouskeyid": {
        "title": "ContainerStorage.getAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-node-client.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.4.0/version-2.4.0-node-client.containerstorage.setanonymouskeyid": {
        "title": "ContainerStorage.setAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-node-client.globaljsoncontainerstorage.delanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.delAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-node-client.globaljsoncontainerstorage.getanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.getAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-node-client.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.4.0/version-2.4.0-node-client.globaljsoncontainerstorage.setanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.setAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-node-client.identity.claims": {
        "title": "Identity.claims property"
      },
      "version-2.4.0/version-2.4.0-node-client.identity": {
        "title": "Identity interface"
      },
      "version-2.4.0/version-2.4.0-node-client.identity.type": {
        "title": "Identity.type property"
      },
      "version-2.4.0/version-2.4.0-node-client.identityclaims.email": {
        "title": "IdentityClaims.email property"
      },
      "version-2.4.0/version-2.4.0-node-client.identityclaims": {
        "title": "IdentityClaims interface"
      },
      "version-2.4.0/version-2.4.0-node-client": {
        "title": "node-client package"
      },
      "version-2.4.0/version-2.4.0-node-client.promoteoptions": {
        "title": "PromoteOptions interface"
      },
      "version-2.4.0/version-2.4.0-node-client.promoteoptions.redirecturi": {
        "title": "PromoteOptions.redirectURI property"
      },
      "version-2.4.0/version-2.4.0-node-client.promoteoptions.state": {
        "title": "PromoteOptions.state property"
      },
      "version-2.4.0/version-2.4.0-react-native.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.4.0/version-2.4.0-react-native.authorizeoptions.loginhint": {
        "title": "AuthorizeOptions.loginHint property"
      },
      "version-2.4.0/version-2.4.0-react-native.authorizeoptions": {
        "title": "AuthorizeOptions interface"
      },
      "version-2.4.0/version-2.4.0-react-native.authorizeoptions.prompt": {
        "title": "AuthorizeOptions.prompt property"
      },
      "version-2.4.0/version-2.4.0-react-native.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.4.0/version-2.4.0-react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.4.0/version-2.4.0-react-native.baseapiclient.oauthchallenge": {
        "title": "BaseAPIClient.oauthChallenge() method"
      },
      "version-2.4.0/version-2.4.0-react-native.challengeresponse.expire_at": {
        "title": "ChallengeResponse.expire\\_at property"
      },
      "version-2.4.0/version-2.4.0-react-native.challengeresponse": {
        "title": "ChallengeResponse interface"
      },
      "version-2.4.0/version-2.4.0-react-native.challengeresponse.token": {
        "title": "ChallengeResponse.token property"
      },
      "version-2.4.0/version-2.4.0-react-native.containerstorage.delanonymouskeyid": {
        "title": "ContainerStorage.delAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-react-native.containerstorage.getanonymouskeyid": {
        "title": "ContainerStorage.getAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-react-native.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.4.0/version-2.4.0-react-native.containerstorage.setanonymouskeyid": {
        "title": "ContainerStorage.setAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-react-native.globaljsoncontainerstorage.delanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.delAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-react-native.globaljsoncontainerstorage.getanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.getAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-react-native.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.4.0/version-2.4.0-react-native.globaljsoncontainerstorage.setanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.setAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-react-native.identity.claims": {
        "title": "Identity.claims property"
      },
      "version-2.4.0/version-2.4.0-react-native.identity": {
        "title": "Identity interface"
      },
      "version-2.4.0/version-2.4.0-react-native.identity.type": {
        "title": "Identity.type property"
      },
      "version-2.4.0/version-2.4.0-react-native.identityclaims.email": {
        "title": "IdentityClaims.email property"
      },
      "version-2.4.0/version-2.4.0-react-native.identityclaims": {
        "title": "IdentityClaims interface"
      },
      "version-2.4.0/version-2.4.0-react-native": {
        "title": "react-native package"
      },
      "version-2.4.0/version-2.4.0-react-native.promoteoptions": {
        "title": "PromoteOptions interface"
      },
      "version-2.4.0/version-2.4.0-react-native.promoteoptions.redirecturi": {
        "title": "PromoteOptions.redirectURI property"
      },
      "version-2.4.0/version-2.4.0-react-native.promoteoptions.state": {
        "title": "PromoteOptions.state property"
      },
      "version-2.4.0/version-2.4.0-react-native.reactnativeassetcontainer.upload": {
        "title": "ReactNativeAssetContainer.upload() method"
      },
      "version-2.4.0/version-2.4.0-react-native.reactnativeoidccontainer.authenticateanonymously": {
        "title": "ReactNativeOIDCContainer.authenticateAnonymously() method"
      },
      "version-2.4.0/version-2.4.0-react-native.reactnativeoidccontainer": {
        "title": "ReactNativeOIDCContainer class"
      },
      "version-2.4.0/version-2.4.0-react-native.reactnativeoidccontainer.promoteanonymoususer": {
        "title": "ReactNativeOIDCContainer.promoteAnonymousUser() method"
      },
      "version-2.4.0/version-2.4.0-react-native.uploadassetoptions.headers": {
        "title": "UploadAssetOptions.headers property"
      },
      "version-2.4.0/version-2.4.0-react-native.uploadassetoptions": {
        "title": "UploadAssetOptions interface"
      },
      "version-2.4.0/version-2.4.0-web.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.4.0/version-2.4.0-web.authorizeoptions.loginhint": {
        "title": "AuthorizeOptions.loginHint property"
      },
      "version-2.4.0/version-2.4.0-web.authorizeoptions": {
        "title": "AuthorizeOptions interface"
      },
      "version-2.4.0/version-2.4.0-web.authorizeoptions.prompt": {
        "title": "AuthorizeOptions.prompt property"
      },
      "version-2.4.0/version-2.4.0-web.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.4.0/version-2.4.0-web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.4.0/version-2.4.0-web.baseapiclient.oauthchallenge": {
        "title": "BaseAPIClient.oauthChallenge() method"
      },
      "version-2.4.0/version-2.4.0-web.challengeresponse.expire_at": {
        "title": "ChallengeResponse.expire\\_at property"
      },
      "version-2.4.0/version-2.4.0-web.challengeresponse": {
        "title": "ChallengeResponse interface"
      },
      "version-2.4.0/version-2.4.0-web.challengeresponse.token": {
        "title": "ChallengeResponse.token property"
      },
      "version-2.4.0/version-2.4.0-web.containerstorage.delanonymouskeyid": {
        "title": "ContainerStorage.delAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-web.containerstorage.getanonymouskeyid": {
        "title": "ContainerStorage.getAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-web.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.4.0/version-2.4.0-web.containerstorage.setanonymouskeyid": {
        "title": "ContainerStorage.setAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-web.globaljsoncontainerstorage.delanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.delAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-web.globaljsoncontainerstorage.getanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.getAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-web.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.4.0/version-2.4.0-web.globaljsoncontainerstorage.setanonymouskeyid": {
        "title": "GlobalJSONContainerStorage.setAnonymousKeyID() method"
      },
      "version-2.4.0/version-2.4.0-web.identity.claims": {
        "title": "Identity.claims property"
      },
      "version-2.4.0/version-2.4.0-web.identity": {
        "title": "Identity interface"
      },
      "version-2.4.0/version-2.4.0-web.identity.type": {
        "title": "Identity.type property"
      },
      "version-2.4.0/version-2.4.0-web.identityclaims.email": {
        "title": "IdentityClaims.email property"
      },
      "version-2.4.0/version-2.4.0-web.identityclaims": {
        "title": "IdentityClaims interface"
      },
      "version-2.4.0/version-2.4.0-web": {
        "title": "web package"
      },
      "version-2.4.0/version-2.4.0-web.promoteoptions": {
        "title": "PromoteOptions interface"
      },
      "version-2.4.0/version-2.4.0-web.promoteoptions.redirecturi": {
        "title": "PromoteOptions.redirectURI property"
      },
      "version-2.4.0/version-2.4.0-web.promoteoptions.state": {
        "title": "PromoteOptions.state property"
      },
      "version-2.4.1/version-2.4.1-node-client.cancel": {
        "title": "CANCEL variable"
      },
      "version-2.4.1/version-2.4.1-node-client.cancelerror": {
        "title": "CancelError class"
      },
      "version-2.4.1/version-2.4.1-node-client": {
        "title": "node-client package"
      },
      "version-2.4.1/version-2.4.1-react-native.cancel": {
        "title": "CANCEL variable"
      },
      "version-2.4.1/version-2.4.1-react-native.cancelerror": {
        "title": "CancelError class"
      },
      "version-2.4.1/version-2.4.1-react-native": {
        "title": "react-native package"
      },
      "version-2.4.1/version-2.4.1-web.cancel": {
        "title": "CANCEL variable"
      },
      "version-2.4.1/version-2.4.1-web.cancelerror": {
        "title": "CancelError class"
      },
      "version-2.4.1/version-2.4.1-web": {
        "title": "web package"
      }
    },
    "links": {},
    "categories": {
      "Docusaurus": "Docusaurus",
      "First Category": "First Category",
      "Second Category": "Second Category"
    }
  },
  "pages-strings": {
    "Help Translate|recruit community translators for your project": "Help Translate",
    "Edit this Doc|recruitment message asking to edit the doc source": "Edit",
    "Translate this Doc|recruitment message asking to translate the docs": "Translate"
  }
}
