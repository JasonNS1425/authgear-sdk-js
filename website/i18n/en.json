{
  "_comment": "This file is auto-generated by write-translations.js",
  "localized-strings": {
    "next": "Next",
    "previous": "Previous",
    "tagline": "Documentation site for Skygear SDK JS",
    "docs": {
      "index": {
        "title": "Index"
      },
      "node-client.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "node-client.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "node-client.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "node-client.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "node-client.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "node-client.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "node-client.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "node-client.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "node-client.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "node-client.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "node-client.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "node-client.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "node-client.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "node-client.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "node-client.authcontainer": {
        "title": "AuthContainer class"
      },
      "node-client.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "node-client.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "node-client.authcontainer.persistresponse": {
        "title": "AuthContainer.persistResponse() method"
      },
      "node-client.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "node-client.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "node-client.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "node-client.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "node-client.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "node-client.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "node-client.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "node-client.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "node-client.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "node-client.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "node-client.authcontainer.updatesession": {
        "title": "AuthContainer.updateSession() method"
      },
      "node-client.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "node-client.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "node-client.authresponse.identity": {
        "title": "AuthResponse.identity property"
      },
      "node-client.authresponse": {
        "title": "AuthResponse interface"
      },
      "node-client.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "node-client.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "node-client.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "node-client.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "node-client.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "node-client.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "node-client.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "node-client.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "node-client.baseapiclient.endpoint": {
        "title": "BaseAPIClient.endpoint property"
      },
      "node-client.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "node-client.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "node-client.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "node-client.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "node-client.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "node-client.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "node-client.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "node-client.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "node-client.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "node-client.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "node-client.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "node-client.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "node-client.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "node-client.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "node-client.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "node-client.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "node-client.baseapiclient.refresh": {
        "title": "BaseAPIClient.refresh() method"
      },
      "node-client.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "node-client.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "node-client.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "node-client.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "node-client.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "node-client.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "node-client.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "node-client.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "node-client.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "node-client.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "node-client.baseapiclient.updatesession": {
        "title": "BaseAPIClient.updateSession() method"
      },
      "node-client.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "node-client.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "node-client.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "node-client.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "node-client.container.auth": {
        "title": "Container.auth property"
      },
      "node-client.container.configure": {
        "title": "Container.configure() method"
      },
      "node-client.container.extrasessioninfoprovider": {
        "title": "Container.extraSessionInfoProvider property"
      },
      "node-client.container.fetch": {
        "title": "Container.fetch() method"
      },
      "node-client.container": {
        "title": "Container class"
      },
      "node-client.container.name": {
        "title": "Container.name property"
      },
      "node-client.container.storage": {
        "title": "Container.storage property"
      },
      "node-client.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "node-client.containeroptions.extrasessioninfoprovider": {
        "title": "ContainerOptions.extraSessionInfoProvider property"
      },
      "node-client.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "node-client.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "node-client.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "node-client.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "node-client.containerstorage.delidentity": {
        "title": "ContainerStorage.delIdentity() method"
      },
      "node-client.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "node-client.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "node-client.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "node-client.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "node-client.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "node-client.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "node-client.containerstorage.getidentity": {
        "title": "ContainerStorage.getIdentity() method"
      },
      "node-client.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "node-client.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "node-client.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "node-client.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "node-client.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "node-client.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "node-client.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "node-client.containerstorage.setidentity": {
        "title": "ContainerStorage.setIdentity() method"
      },
      "node-client.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "node-client.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "node-client.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "node-client.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "node-client.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "node-client.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "node-client.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "node-client.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "node-client.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "node-client.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "node-client.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "node-client.decodeerror": {
        "title": "decodeError() function"
      },
      "node-client.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "node-client.decodesession": {
        "title": "decodeSession() function"
      },
      "node-client.decodeuser": {
        "title": "decodeUser() function"
      },
      "node-client.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "node-client.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "node-client.encodequery": {
        "title": "encodeQuery() function"
      },
      "node-client.encodequerycomponent": {
        "title": "encodeQueryComponent() function"
      },
      "node-client.encodeuser": {
        "title": "encodeUser() function"
      },
      "node-client.extrasessioninfooptions.collectdevicename": {
        "title": "ExtraSessionInfoOptions.collectDeviceName property"
      },
      "node-client.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "node-client.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "node-client.extrasessioninfoprovider.getdevicename": {
        "title": "ExtraSessionInfoProvider.getDeviceName() method"
      },
      "node-client.extrasessioninfoprovider": {
        "title": "ExtraSessionInfoProvider interface"
      },
      "node-client.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "node-client.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "node-client.globaljsoncontainerstorage.delidentity": {
        "title": "GlobalJSONContainerStorage.delIdentity() method"
      },
      "node-client.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "node-client.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "node-client.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "node-client.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "node-client.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "node-client.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "node-client.globaljsoncontainerstorage.getidentity": {
        "title": "GlobalJSONContainerStorage.getIdentity() method"
      },
      "node-client.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "node-client.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "node-client.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "node-client.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "node-client.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "node-client.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "node-client.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "node-client.globaljsoncontainerstorage.setidentity": {
        "title": "GlobalJSONContainerStorage.setIdentity() method"
      },
      "node-client.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "node-client.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "node-client.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "node-client.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "node-client.identity": {
        "title": "Identity type"
      },
      "node-client.jsonarray": {
        "title": "JSONArray interface"
      },
      "node-client.jsonobject": {
        "title": "JSONObject interface"
      },
      "node-client.jsonvalue": {
        "title": "JSONValue type"
      },
      "node-client": {
        "title": "node-client package"
      },
      "node-client.memorystoragedriver._constructor_": {
        "title": "MemoryStorageDriver.(constructor)"
      },
      "node-client.memorystoragedriver.backingstore": {
        "title": "MemoryStorageDriver.backingStore property"
      },
      "node-client.memorystoragedriver.del": {
        "title": "MemoryStorageDriver.del() method"
      },
      "node-client.memorystoragedriver.get": {
        "title": "MemoryStorageDriver.get() method"
      },
      "node-client.memorystoragedriver": {
        "title": "MemoryStorageDriver class"
      },
      "node-client.memorystoragedriver.set": {
        "title": "MemoryStorageDriver.set() method"
      },
      "node-client.nodeapiclient.fetchfunction": {
        "title": "NodeAPIClient.fetchFunction property"
      },
      "node-client.nodeapiclient": {
        "title": "NodeAPIClient class"
      },
      "node-client.nodeapiclient.requestclass": {
        "title": "NodeAPIClient.requestClass property"
      },
      "node-client.nodeapiclient.useragent": {
        "title": "NodeAPIClient.userAgent property"
      },
      "node-client.nodecontainer._constructor_": {
        "title": "NodeContainer.(constructor)"
      },
      "node-client.nodecontainer": {
        "title": "NodeContainer class"
      },
      "node-client.nodeextrasessioninfoprovider.getdevicename": {
        "title": "NodeExtraSessionInfoProvider.getDeviceName() method"
      },
      "node-client.nodeextrasessioninfoprovider": {
        "title": "NodeExtraSessionInfoProvider class"
      },
      "node-client.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "node-client.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "node-client.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "node-client.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "node-client.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "node-client.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "node-client.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "node-client.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "node-client.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "node-client.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "node-client.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "node-client.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "node-client.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "node-client.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "node-client.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "node-client.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "node-client.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "node-client.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "node-client.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "node-client.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "node-client.passwordidentity.realm": {
        "title": "PasswordIdentity.realm property"
      },
      "node-client.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "node-client.session.createdat": {
        "title": "Session.createdAt property"
      },
      "node-client.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "node-client.session.data": {
        "title": "Session.data property"
      },
      "node-client.session.id": {
        "title": "Session.id property"
      },
      "node-client.session.identityid": {
        "title": "Session.identityID property"
      },
      "node-client.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "node-client.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "node-client.session": {
        "title": "Session interface"
      },
      "node-client.session.name": {
        "title": "Session.name property"
      },
      "node-client.session.useragent": {
        "title": "Session.userAgent property"
      },
      "node-client.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "node-client.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "node-client.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "node-client.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "node-client.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "node-client.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "node-client.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "node-client.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "node-client.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "node-client.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "node-client.skygearerror": {
        "title": "SkygearError class"
      },
      "node-client.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "node-client.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "node-client.ssologinoptions.mergerealm": {
        "title": "SSOLoginOptions.mergeRealm property"
      },
      "node-client.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "node-client.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "node-client.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "node-client.storagedriver": {
        "title": "StorageDriver interface"
      },
      "node-client.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "node-client.user.createdat": {
        "title": "User.createdAt property"
      },
      "node-client.user.id": {
        "title": "User.id property"
      },
      "node-client.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "node-client.user.isverified": {
        "title": "User.isVerified property"
      },
      "node-client.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "node-client.user": {
        "title": "User interface"
      },
      "node-client.user.metadata": {
        "title": "User.metadata property"
      },
      "node-client.version": {
        "title": "VERSION variable"
      },
      "react-native.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "react-native.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "react-native.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "react-native.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "react-native.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "react-native.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "react-native.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "react-native.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "react-native.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "react-native.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "react-native.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "react-native.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "react-native.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "react-native.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "react-native.authcontainer": {
        "title": "AuthContainer class"
      },
      "react-native.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "react-native.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "react-native.authcontainer.persistresponse": {
        "title": "AuthContainer.persistResponse() method"
      },
      "react-native.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "react-native.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "react-native.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "react-native.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "react-native.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "react-native.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "react-native.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "react-native.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "react-native.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "react-native.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "react-native.authcontainer.updatesession": {
        "title": "AuthContainer.updateSession() method"
      },
      "react-native.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "react-native.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "react-native.authresponse.identity": {
        "title": "AuthResponse.identity property"
      },
      "react-native.authresponse": {
        "title": "AuthResponse interface"
      },
      "react-native.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "react-native.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "react-native.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "react-native.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "react-native.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "react-native.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "react-native.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "react-native.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "react-native.baseapiclient.endpoint": {
        "title": "BaseAPIClient.endpoint property"
      },
      "react-native.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "react-native.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "react-native.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "react-native.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "react-native.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "react-native.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "react-native.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "react-native.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "react-native.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "react-native.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "react-native.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "react-native.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "react-native.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "react-native.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "react-native.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "react-native.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "react-native.baseapiclient.refresh": {
        "title": "BaseAPIClient.refresh() method"
      },
      "react-native.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "react-native.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "react-native.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "react-native.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "react-native.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "react-native.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "react-native.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "react-native.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "react-native.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "react-native.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "react-native.baseapiclient.updatesession": {
        "title": "BaseAPIClient.updateSession() method"
      },
      "react-native.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "react-native.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "react-native.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "react-native.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "react-native.container.auth": {
        "title": "Container.auth property"
      },
      "react-native.container.configure": {
        "title": "Container.configure() method"
      },
      "react-native.container.extrasessioninfoprovider": {
        "title": "Container.extraSessionInfoProvider property"
      },
      "react-native.container.fetch": {
        "title": "Container.fetch() method"
      },
      "react-native.container": {
        "title": "Container class"
      },
      "react-native.container.name": {
        "title": "Container.name property"
      },
      "react-native.container.storage": {
        "title": "Container.storage property"
      },
      "react-native.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "react-native.containeroptions.extrasessioninfoprovider": {
        "title": "ContainerOptions.extraSessionInfoProvider property"
      },
      "react-native.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "react-native.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "react-native.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "react-native.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "react-native.containerstorage.delidentity": {
        "title": "ContainerStorage.delIdentity() method"
      },
      "react-native.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "react-native.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "react-native.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "react-native.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "react-native.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "react-native.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "react-native.containerstorage.getidentity": {
        "title": "ContainerStorage.getIdentity() method"
      },
      "react-native.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "react-native.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "react-native.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "react-native.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "react-native.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "react-native.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "react-native.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "react-native.containerstorage.setidentity": {
        "title": "ContainerStorage.setIdentity() method"
      },
      "react-native.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "react-native.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "react-native.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "react-native.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "react-native.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "react-native.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "react-native.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "react-native.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "react-native.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "react-native.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "react-native.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "react-native.decodeerror": {
        "title": "decodeError() function"
      },
      "react-native.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "react-native.decodesession": {
        "title": "decodeSession() function"
      },
      "react-native.decodeuser": {
        "title": "decodeUser() function"
      },
      "react-native.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "react-native.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "react-native.encodequery": {
        "title": "encodeQuery() function"
      },
      "react-native.encodequerycomponent": {
        "title": "encodeQueryComponent() function"
      },
      "react-native.encodeuser": {
        "title": "encodeUser() function"
      },
      "react-native.extrasessioninfooptions.collectdevicename": {
        "title": "ExtraSessionInfoOptions.collectDeviceName property"
      },
      "react-native.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "react-native.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "react-native.extrasessioninfoprovider.getdevicename": {
        "title": "ExtraSessionInfoProvider.getDeviceName() method"
      },
      "react-native.extrasessioninfoprovider": {
        "title": "ExtraSessionInfoProvider interface"
      },
      "react-native.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "react-native.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "react-native.globaljsoncontainerstorage.delidentity": {
        "title": "GlobalJSONContainerStorage.delIdentity() method"
      },
      "react-native.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "react-native.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "react-native.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "react-native.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "react-native.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "react-native.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "react-native.globaljsoncontainerstorage.getidentity": {
        "title": "GlobalJSONContainerStorage.getIdentity() method"
      },
      "react-native.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "react-native.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "react-native.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "react-native.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "react-native.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "react-native.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "react-native.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "react-native.globaljsoncontainerstorage.setidentity": {
        "title": "GlobalJSONContainerStorage.setIdentity() method"
      },
      "react-native.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "react-native.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "react-native.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "react-native.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "react-native.identity": {
        "title": "Identity type"
      },
      "react-native.jsonarray": {
        "title": "JSONArray interface"
      },
      "react-native.jsonobject": {
        "title": "JSONObject interface"
      },
      "react-native.jsonvalue": {
        "title": "JSONValue type"
      },
      "react-native": {
        "title": "react-native package"
      },
      "react-native.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "react-native.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "react-native.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "react-native.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "react-native.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "react-native.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "react-native.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "react-native.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "react-native.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "react-native.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "react-native.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "react-native.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "react-native.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "react-native.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "react-native.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "react-native.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "react-native.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "react-native.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "react-native.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "react-native.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "react-native.passwordidentity.realm": {
        "title": "PasswordIdentity.realm property"
      },
      "react-native.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "react-native.reactnativeapiclient.fetchfunction": {
        "title": "ReactNativeAPIClient.fetchFunction property"
      },
      "react-native.reactnativeapiclient": {
        "title": "ReactNativeAPIClient class"
      },
      "react-native.reactnativeapiclient.requestclass": {
        "title": "ReactNativeAPIClient.requestClass property"
      },
      "react-native.reactnativeasyncstoragestoragedriver.del": {
        "title": "ReactNativeAsyncStorageStorageDriver.del() method"
      },
      "react-native.reactnativeasyncstoragestoragedriver.get": {
        "title": "ReactNativeAsyncStorageStorageDriver.get() method"
      },
      "react-native.reactnativeasyncstoragestoragedriver": {
        "title": "ReactNativeAsyncStorageStorageDriver class"
      },
      "react-native.reactnativeasyncstoragestoragedriver.set": {
        "title": "ReactNativeAsyncStorageStorageDriver.set() method"
      },
      "react-native.reactnativecontainer._constructor_": {
        "title": "ReactNativeContainer.(constructor)"
      },
      "react-native.reactnativecontainer": {
        "title": "ReactNativeContainer class"
      },
      "react-native.session.createdat": {
        "title": "Session.createdAt property"
      },
      "react-native.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "react-native.session.data": {
        "title": "Session.data property"
      },
      "react-native.session.id": {
        "title": "Session.id property"
      },
      "react-native.session.identityid": {
        "title": "Session.identityID property"
      },
      "react-native.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "react-native.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "react-native.session": {
        "title": "Session interface"
      },
      "react-native.session.name": {
        "title": "Session.name property"
      },
      "react-native.session.useragent": {
        "title": "Session.userAgent property"
      },
      "react-native.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "react-native.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "react-native.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "react-native.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "react-native.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "react-native.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "react-native.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "react-native.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "react-native.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "react-native.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "react-native.skygearerror": {
        "title": "SkygearError class"
      },
      "react-native.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "react-native.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "react-native.ssologinoptions.mergerealm": {
        "title": "SSOLoginOptions.mergeRealm property"
      },
      "react-native.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "react-native.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "react-native.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "react-native.storagedriver": {
        "title": "StorageDriver interface"
      },
      "react-native.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "react-native.user.createdat": {
        "title": "User.createdAt property"
      },
      "react-native.user.id": {
        "title": "User.id property"
      },
      "react-native.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "react-native.user.isverified": {
        "title": "User.isVerified property"
      },
      "react-native.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "react-native.user": {
        "title": "User interface"
      },
      "react-native.user.metadata": {
        "title": "User.metadata property"
      },
      "react-native.version": {
        "title": "VERSION variable"
      },
      "web.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "web.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "web.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "web.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "web.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "web.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "web.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "web.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "web.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "web.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "web.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "web.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "web.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "web.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "web.authcontainer": {
        "title": "AuthContainer class"
      },
      "web.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "web.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "web.authcontainer.persistresponse": {
        "title": "AuthContainer.persistResponse() method"
      },
      "web.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "web.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "web.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "web.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "web.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "web.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "web.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "web.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "web.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "web.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "web.authcontainer.updatesession": {
        "title": "AuthContainer.updateSession() method"
      },
      "web.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "web.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "web.authresponse.identity": {
        "title": "AuthResponse.identity property"
      },
      "web.authresponse": {
        "title": "AuthResponse interface"
      },
      "web.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "web.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "web.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "web.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "web.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "web.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "web.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "web.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "web.baseapiclient.endpoint": {
        "title": "BaseAPIClient.endpoint property"
      },
      "web.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "web.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "web.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "web.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "web.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "web.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "web.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "web.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "web.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "web.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "web.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "web.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "web.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "web.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "web.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "web.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "web.baseapiclient.refresh": {
        "title": "BaseAPIClient.refresh() method"
      },
      "web.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "web.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "web.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "web.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "web.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "web.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "web.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "web.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "web.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "web.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "web.baseapiclient.updatesession": {
        "title": "BaseAPIClient.updateSession() method"
      },
      "web.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "web.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "web.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "web.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "web.container.auth": {
        "title": "Container.auth property"
      },
      "web.container.configure": {
        "title": "Container.configure() method"
      },
      "web.container.extrasessioninfoprovider": {
        "title": "Container.extraSessionInfoProvider property"
      },
      "web.container.fetch": {
        "title": "Container.fetch() method"
      },
      "web.container": {
        "title": "Container class"
      },
      "web.container.name": {
        "title": "Container.name property"
      },
      "web.container.storage": {
        "title": "Container.storage property"
      },
      "web.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "web.containeroptions.extrasessioninfoprovider": {
        "title": "ContainerOptions.extraSessionInfoProvider property"
      },
      "web.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "web.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "web.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "web.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "web.containerstorage.delidentity": {
        "title": "ContainerStorage.delIdentity() method"
      },
      "web.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "web.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "web.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "web.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "web.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "web.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "web.containerstorage.getidentity": {
        "title": "ContainerStorage.getIdentity() method"
      },
      "web.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "web.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "web.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "web.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "web.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "web.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "web.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "web.containerstorage.setidentity": {
        "title": "ContainerStorage.setIdentity() method"
      },
      "web.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "web.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "web.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "web.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "web.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "web.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "web.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "web.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "web.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "web.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "web.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "web.decodeerror": {
        "title": "decodeError() function"
      },
      "web.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "web.decodesession": {
        "title": "decodeSession() function"
      },
      "web.decodeuser": {
        "title": "decodeUser() function"
      },
      "web.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "web.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "web.encodequery": {
        "title": "encodeQuery() function"
      },
      "web.encodequerycomponent": {
        "title": "encodeQueryComponent() function"
      },
      "web.encodeuser": {
        "title": "encodeUser() function"
      },
      "web.extrasessioninfooptions.collectdevicename": {
        "title": "ExtraSessionInfoOptions.collectDeviceName property"
      },
      "web.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "web.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "web.extrasessioninfoprovider.getdevicename": {
        "title": "ExtraSessionInfoProvider.getDeviceName() method"
      },
      "web.extrasessioninfoprovider": {
        "title": "ExtraSessionInfoProvider interface"
      },
      "web.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "web.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "web.globaljsoncontainerstorage.delidentity": {
        "title": "GlobalJSONContainerStorage.delIdentity() method"
      },
      "web.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "web.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "web.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "web.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "web.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "web.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "web.globaljsoncontainerstorage.getidentity": {
        "title": "GlobalJSONContainerStorage.getIdentity() method"
      },
      "web.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "web.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "web.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "web.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "web.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "web.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "web.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "web.globaljsoncontainerstorage.setidentity": {
        "title": "GlobalJSONContainerStorage.setIdentity() method"
      },
      "web.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "web.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "web.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "web.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "web.identity": {
        "title": "Identity type"
      },
      "web.jsonarray": {
        "title": "JSONArray interface"
      },
      "web.jsonobject": {
        "title": "JSONObject interface"
      },
      "web.jsonvalue": {
        "title": "JSONValue type"
      },
      "web.localstoragestoragedriver": {
        "title": "localStorageStorageDriver variable"
      },
      "web": {
        "title": "web package"
      },
      "web.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "web.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "web.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "web.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "web.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "web.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "web.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "web.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "web.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "web.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "web.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "web.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "web.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "web.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "web.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "web.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "web.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "web.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "web.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "web.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "web.passwordidentity.realm": {
        "title": "PasswordIdentity.realm property"
      },
      "web.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "web.session.createdat": {
        "title": "Session.createdAt property"
      },
      "web.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "web.session.data": {
        "title": "Session.data property"
      },
      "web.session.id": {
        "title": "Session.id property"
      },
      "web.session.identityid": {
        "title": "Session.identityID property"
      },
      "web.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "web.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "web.session": {
        "title": "Session interface"
      },
      "web.session.name": {
        "title": "Session.name property"
      },
      "web.session.useragent": {
        "title": "Session.userAgent property"
      },
      "web.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "web.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "web.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "web.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "web.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "web.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "web.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "web.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "web.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "web.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "web.skygearerror": {
        "title": "SkygearError class"
      },
      "web.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "web.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "web.ssologinoptions.mergerealm": {
        "title": "SSOLoginOptions.mergeRealm property"
      },
      "web.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "web.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "web.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "web.storagedriver": {
        "title": "StorageDriver interface"
      },
      "web.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "web.user.createdat": {
        "title": "User.createdAt property"
      },
      "web.user.id": {
        "title": "User.id property"
      },
      "web.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "web.user.isverified": {
        "title": "User.isVerified property"
      },
      "web.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "web.user": {
        "title": "User interface"
      },
      "web.user.metadata": {
        "title": "User.metadata property"
      },
      "web.version": {
        "title": "VERSION variable"
      },
      "web.webapiclient.fetchfunction": {
        "title": "WebAPIClient.fetchFunction property"
      },
      "web.webapiclient": {
        "title": "WebAPIClient class"
      },
      "web.webapiclient.requestclass": {
        "title": "WebAPIClient.requestClass property"
      },
      "web.webauthcontainer._constructor_": {
        "title": "WebAuthContainer.(constructor)"
      },
      "web.webauthcontainer.getlinkredirectresult": {
        "title": "WebAuthContainer.getLinkRedirectResult() method"
      },
      "web.webauthcontainer.getloginredirectresult": {
        "title": "WebAuthContainer.getLoginRedirectResult() method"
      },
      "web.webauthcontainer.linkoauthproviderwithpopup": {
        "title": "WebAuthContainer.linkOAuthProviderWithPopup() method"
      },
      "web.webauthcontainer.linkoauthproviderwithredirect": {
        "title": "WebAuthContainer.linkOAuthProviderWithRedirect() method"
      },
      "web.webauthcontainer.loginoauthproviderwithpopup": {
        "title": "WebAuthContainer.loginOAuthProviderWithPopup() method"
      },
      "web.webauthcontainer.loginoauthproviderwithredirect": {
        "title": "WebAuthContainer.loginOAuthProviderWithRedirect() method"
      },
      "web.webauthcontainer": {
        "title": "WebAuthContainer class"
      },
      "web.webcontainer._constructor_": {
        "title": "WebContainer.(constructor)"
      },
      "web.webcontainer.auth": {
        "title": "WebContainer.auth property"
      },
      "web.webcontainer": {
        "title": "WebContainer class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.authcontainer.accesstoken": {
        "title": "AuthContainer.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.accesstoken": {
        "title": "BaseAPIClient.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client": {
        "title": "node-client package"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-node-client.nodeapiclient": {
        "title": "NodeAPIClient class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.authcontainer.accesstoken": {
        "title": "AuthContainer.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.accesstoken": {
        "title": "BaseAPIClient.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-react-native": {
        "title": "react-native package"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.authcontainer.accesstoken": {
        "title": "AuthContainer.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.accesstoken": {
        "title": "BaseAPIClient.accessToken property"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.10/version-2.0.0-alpha.10-web": {
        "title": "web package"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-index": {
        "title": "Index"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.persistresponse": {
        "title": "AuthContainer.persistResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.updatesession": {
        "title": "AuthContainer.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse.identity": {
        "title": "AuthResponse.identity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.endpoint": {
        "title": "BaseAPIClient.endpoint property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.refresh": {
        "title": "BaseAPIClient.refresh() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.updatesession": {
        "title": "BaseAPIClient.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.auth": {
        "title": "Container.auth property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.configure": {
        "title": "Container.configure() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.extrasessioninfoprovider": {
        "title": "Container.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.fetch": {
        "title": "Container.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.name": {
        "title": "Container.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.container.storage": {
        "title": "Container.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containeroptions.extrasessioninfoprovider": {
        "title": "ContainerOptions.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.delidentity": {
        "title": "ContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getidentity": {
        "title": "ContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setidentity": {
        "title": "ContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.decodeerror": {
        "title": "decodeError() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.decodesession": {
        "title": "decodeSession() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.decodeuser": {
        "title": "decodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.encodequery": {
        "title": "encodeQuery() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.encodequerycomponent": {
        "title": "encodeQueryComponent() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.encodeuser": {
        "title": "encodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.extrasessioninfooptions.collectdevicename": {
        "title": "ExtraSessionInfoOptions.collectDeviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.extrasessioninfoprovider.getdevicename": {
        "title": "ExtraSessionInfoProvider.getDeviceName() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.extrasessioninfoprovider": {
        "title": "ExtraSessionInfoProvider interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.delidentity": {
        "title": "GlobalJSONContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getidentity": {
        "title": "GlobalJSONContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setidentity": {
        "title": "GlobalJSONContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.identity": {
        "title": "Identity type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.jsonarray": {
        "title": "JSONArray interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.jsonobject": {
        "title": "JSONObject interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.jsonvalue": {
        "title": "JSONValue type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client": {
        "title": "node-client package"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver._constructor_": {
        "title": "MemoryStorageDriver.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver.backingstore": {
        "title": "MemoryStorageDriver.backingStore property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver.del": {
        "title": "MemoryStorageDriver.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver.get": {
        "title": "MemoryStorageDriver.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver": {
        "title": "MemoryStorageDriver class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.memorystoragedriver.set": {
        "title": "MemoryStorageDriver.set() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeapiclient.fetchfunction": {
        "title": "NodeAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeapiclient": {
        "title": "NodeAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeapiclient.requestclass": {
        "title": "NodeAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeapiclient.useragent": {
        "title": "NodeAPIClient.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodecontainer._constructor_": {
        "title": "NodeContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodecontainer": {
        "title": "NodeContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeextrasessioninfoprovider.getdevicename": {
        "title": "NodeExtraSessionInfoProvider.getDeviceName() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.nodeextrasessioninfoprovider": {
        "title": "NodeExtraSessionInfoProvider class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.realm": {
        "title": "PasswordIdentity.realm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.createdat": {
        "title": "Session.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.data": {
        "title": "Session.data property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.id": {
        "title": "Session.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.identityid": {
        "title": "Session.identityID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session": {
        "title": "Session interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.name": {
        "title": "Session.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.session.useragent": {
        "title": "Session.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.ssologinoptions.mergerealm": {
        "title": "SSOLoginOptions.mergeRealm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.storagedriver": {
        "title": "StorageDriver interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.createdat": {
        "title": "User.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.id": {
        "title": "User.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.isverified": {
        "title": "User.isVerified property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user": {
        "title": "User interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.user.metadata": {
        "title": "User.metadata property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-node-client.version": {
        "title": "VERSION variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.persistresponse": {
        "title": "AuthContainer.persistResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.updatesession": {
        "title": "AuthContainer.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse.identity": {
        "title": "AuthResponse.identity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.endpoint": {
        "title": "BaseAPIClient.endpoint property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.refresh": {
        "title": "BaseAPIClient.refresh() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.updatesession": {
        "title": "BaseAPIClient.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.auth": {
        "title": "Container.auth property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.configure": {
        "title": "Container.configure() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.extrasessioninfoprovider": {
        "title": "Container.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.fetch": {
        "title": "Container.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.name": {
        "title": "Container.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.container.storage": {
        "title": "Container.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containeroptions.extrasessioninfoprovider": {
        "title": "ContainerOptions.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.delidentity": {
        "title": "ContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getidentity": {
        "title": "ContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setidentity": {
        "title": "ContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.decodeerror": {
        "title": "decodeError() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.decodesession": {
        "title": "decodeSession() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.decodeuser": {
        "title": "decodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.encodequery": {
        "title": "encodeQuery() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.encodequerycomponent": {
        "title": "encodeQueryComponent() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.encodeuser": {
        "title": "encodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.extrasessioninfooptions.collectdevicename": {
        "title": "ExtraSessionInfoOptions.collectDeviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.extrasessioninfoprovider.getdevicename": {
        "title": "ExtraSessionInfoProvider.getDeviceName() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.extrasessioninfoprovider": {
        "title": "ExtraSessionInfoProvider interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.delidentity": {
        "title": "GlobalJSONContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getidentity": {
        "title": "GlobalJSONContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setidentity": {
        "title": "GlobalJSONContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.identity": {
        "title": "Identity type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.jsonarray": {
        "title": "JSONArray interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.jsonobject": {
        "title": "JSONObject interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.jsonvalue": {
        "title": "JSONValue type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native": {
        "title": "react-native package"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.realm": {
        "title": "PasswordIdentity.realm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeapiclient.fetchfunction": {
        "title": "ReactNativeAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeapiclient": {
        "title": "ReactNativeAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeapiclient.requestclass": {
        "title": "ReactNativeAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeasyncstoragestoragedriver.del": {
        "title": "ReactNativeAsyncStorageStorageDriver.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeasyncstoragestoragedriver.get": {
        "title": "ReactNativeAsyncStorageStorageDriver.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeasyncstoragestoragedriver": {
        "title": "ReactNativeAsyncStorageStorageDriver class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativeasyncstoragestoragedriver.set": {
        "title": "ReactNativeAsyncStorageStorageDriver.set() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativecontainer._constructor_": {
        "title": "ReactNativeContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.reactnativecontainer": {
        "title": "ReactNativeContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.createdat": {
        "title": "Session.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.data": {
        "title": "Session.data property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.id": {
        "title": "Session.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.identityid": {
        "title": "Session.identityID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session": {
        "title": "Session interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.name": {
        "title": "Session.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.session.useragent": {
        "title": "Session.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.ssologinoptions.mergerealm": {
        "title": "SSOLoginOptions.mergeRealm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.storagedriver": {
        "title": "StorageDriver interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.createdat": {
        "title": "User.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.id": {
        "title": "User.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.isverified": {
        "title": "User.isVerified property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user": {
        "title": "User interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.user.metadata": {
        "title": "User.metadata property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-react-native.version": {
        "title": "VERSION variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer._constructor_": {
        "title": "AuthContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.changepassword": {
        "title": "AuthContainer.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.currentidentity": {
        "title": "AuthContainer.currentIdentity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.currentsessionid": {
        "title": "AuthContainer.currentSessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.currentuser": {
        "title": "AuthContainer.currentUser property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.deleteoauthprovider": {
        "title": "AuthContainer.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.extrasessioninfooptions": {
        "title": "AuthContainer.extraSessionInfoOptions property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.getsession": {
        "title": "AuthContainer.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.linkoauthproviderwithaccesstoken": {
        "title": "AuthContainer.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.listsessions": {
        "title": "AuthContainer.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.login": {
        "title": "AuthContainer.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.loginoauthproviderwithaccesstoken": {
        "title": "AuthContainer.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.loginwithcustomtoken": {
        "title": "AuthContainer.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.logout": {
        "title": "AuthContainer.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer": {
        "title": "AuthContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.me": {
        "title": "AuthContainer.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.parent": {
        "title": "AuthContainer.parent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.persistresponse": {
        "title": "AuthContainer.persistResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.requestemailverification": {
        "title": "AuthContainer.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.requestforgotpasswordemail": {
        "title": "AuthContainer.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.resetpassword": {
        "title": "AuthContainer.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.revokeothersessions": {
        "title": "AuthContainer.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.revokesession": {
        "title": "AuthContainer.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.saveextrasessioninfooptions": {
        "title": "AuthContainer.saveExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.signup": {
        "title": "AuthContainer.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.signupwithemail": {
        "title": "AuthContainer.signupWithEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.signupwithusername": {
        "title": "AuthContainer.signupWithUsername() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.updatemetadata": {
        "title": "AuthContainer.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.updatesession": {
        "title": "AuthContainer.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authcontainer.verifywithcode": {
        "title": "AuthContainer.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse.accesstoken": {
        "title": "AuthResponse.accessToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse.identity": {
        "title": "AuthResponse.identity property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse": {
        "title": "AuthResponse interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse.refreshtoken": {
        "title": "AuthResponse.refreshToken property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse.sessionid": {
        "title": "AuthResponse.sessionID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.authresponse.user": {
        "title": "AuthResponse.user property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient._constructor_": {
        "title": "BaseAPIClient.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.apikey": {
        "title": "BaseAPIClient.apiKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.changepassword": {
        "title": "BaseAPIClient.changePassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.del": {
        "title": "BaseAPIClient.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.deleteoauthprovider": {
        "title": "BaseAPIClient.deleteOAuthProvider() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.endpoint": {
        "title": "BaseAPIClient.endpoint property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.fetch": {
        "title": "BaseAPIClient.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.fetchfunction": {
        "title": "BaseAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.get": {
        "title": "BaseAPIClient.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.getextrasessioninfo": {
        "title": "BaseAPIClient.getExtraSessionInfo property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.getsession": {
        "title": "BaseAPIClient.getSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.linkoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.linkOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.listsessions": {
        "title": "BaseAPIClient.listSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.login": {
        "title": "BaseAPIClient.login() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.loginoauthproviderwithaccesstoken": {
        "title": "BaseAPIClient.loginOAuthProviderWithAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.loginwithcustomtoken": {
        "title": "BaseAPIClient.loginWithCustomToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.logout": {
        "title": "BaseAPIClient.logout() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient": {
        "title": "BaseAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.me": {
        "title": "BaseAPIClient.me() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.oauthauthorizationurl": {
        "title": "BaseAPIClient.oauthAuthorizationURL() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.post": {
        "title": "BaseAPIClient.post() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.postandreturnauthresponse": {
        "title": "BaseAPIClient.postAndReturnAuthResponse() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.prepareheaders": {
        "title": "BaseAPIClient.prepareHeaders() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.refresh": {
        "title": "BaseAPIClient.refresh() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.refreshtokenfunction": {
        "title": "BaseAPIClient.refreshTokenFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.request": {
        "title": "BaseAPIClient.request() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.requestclass": {
        "title": "BaseAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.requestemailverification": {
        "title": "BaseAPIClient.requestEmailVerification() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.requestforgotpasswordemail": {
        "title": "BaseAPIClient.requestForgotPasswordEmail() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.resetpassword": {
        "title": "BaseAPIClient.resetPassword() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.revokeothersessions": {
        "title": "BaseAPIClient.revokeOtherSessions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.revokesession": {
        "title": "BaseAPIClient.revokeSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.signup": {
        "title": "BaseAPIClient.signup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.updatemetadata": {
        "title": "BaseAPIClient.updateMetadata() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.updatesession": {
        "title": "BaseAPIClient.updateSession() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.useragent": {
        "title": "BaseAPIClient.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.baseapiclient.verifywithcode": {
        "title": "BaseAPIClient.verifyWithCode() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container._constructor_": {
        "title": "Container.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.apiclient": {
        "title": "Container.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.auth": {
        "title": "Container.auth property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.configure": {
        "title": "Container.configure() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.extrasessioninfoprovider": {
        "title": "Container.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.fetch": {
        "title": "Container.fetch() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container": {
        "title": "Container class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.name": {
        "title": "Container.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.container.storage": {
        "title": "Container.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containeroptions.apiclient": {
        "title": "ContainerOptions.apiClient property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containeroptions.extrasessioninfoprovider": {
        "title": "ContainerOptions.extraSessionInfoProvider property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containeroptions": {
        "title": "ContainerOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containeroptions.name": {
        "title": "ContainerOptions.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containeroptions.storage": {
        "title": "ContainerOptions.storage property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.delaccesstoken": {
        "title": "ContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.delidentity": {
        "title": "ContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.deloauthredirectaction": {
        "title": "ContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.delrefreshtoken": {
        "title": "ContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.delsessionid": {
        "title": "ContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.deluser": {
        "title": "ContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getaccesstoken": {
        "title": "ContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getextrasessioninfooptions": {
        "title": "ContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getidentity": {
        "title": "ContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getoauthredirectaction": {
        "title": "ContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getrefreshtoken": {
        "title": "ContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getsessionid": {
        "title": "ContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.getuser": {
        "title": "ContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage": {
        "title": "ContainerStorage interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setaccesstoken": {
        "title": "ContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setextrasessioninfooptions": {
        "title": "ContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setidentity": {
        "title": "ContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setoauthredirectaction": {
        "title": "ContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setrefreshtoken": {
        "title": "ContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setsessionid": {
        "title": "ContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.containerstorage.setuser": {
        "title": "ContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity.claims": {
        "title": "CustomTokenIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity.id": {
        "title": "CustomTokenIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity": {
        "title": "CustomTokenIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity.provideruserid": {
        "title": "CustomTokenIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity.rawprofile": {
        "title": "CustomTokenIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.customtokenidentity.type": {
        "title": "CustomTokenIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.decodeauthresponse": {
        "title": "decodeAuthResponse() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.decodeerror": {
        "title": "decodeError() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.decodeidentity": {
        "title": "decodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.decodesession": {
        "title": "decodeSession() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.decodeuser": {
        "title": "decodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.defaultcontainer": {
        "title": "defaultContainer variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.encodeidentity": {
        "title": "encodeIdentity() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.encodequery": {
        "title": "encodeQuery() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.encodequerycomponent": {
        "title": "encodeQueryComponent() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.encodeuser": {
        "title": "encodeUser() function"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.extrasessioninfooptions.collectdevicename": {
        "title": "ExtraSessionInfoOptions.collectDeviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.extrasessioninfooptions.devicename": {
        "title": "ExtraSessionInfoOptions.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.extrasessioninfooptions": {
        "title": "ExtraSessionInfoOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.extrasessioninfoprovider.getdevicename": {
        "title": "ExtraSessionInfoProvider.getDeviceName() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.extrasessioninfoprovider": {
        "title": "ExtraSessionInfoProvider interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage._constructor_": {
        "title": "GlobalJSONContainerStorage.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.delaccesstoken": {
        "title": "GlobalJSONContainerStorage.delAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.delidentity": {
        "title": "GlobalJSONContainerStorage.delIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.deloauthredirectaction": {
        "title": "GlobalJSONContainerStorage.delOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.delrefreshtoken": {
        "title": "GlobalJSONContainerStorage.delRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.delsessionid": {
        "title": "GlobalJSONContainerStorage.delSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.deluser": {
        "title": "GlobalJSONContainerStorage.delUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getaccesstoken": {
        "title": "GlobalJSONContainerStorage.getAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.getExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getidentity": {
        "title": "GlobalJSONContainerStorage.getIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.getOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getrefreshtoken": {
        "title": "GlobalJSONContainerStorage.getRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getsessionid": {
        "title": "GlobalJSONContainerStorage.getSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.getuser": {
        "title": "GlobalJSONContainerStorage.getUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage": {
        "title": "GlobalJSONContainerStorage class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setaccesstoken": {
        "title": "GlobalJSONContainerStorage.setAccessToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setextrasessioninfooptions": {
        "title": "GlobalJSONContainerStorage.setExtraSessionInfoOptions() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setidentity": {
        "title": "GlobalJSONContainerStorage.setIdentity() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setoauthredirectaction": {
        "title": "GlobalJSONContainerStorage.setOAuthRedirectAction() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setrefreshtoken": {
        "title": "GlobalJSONContainerStorage.setRefreshToken() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setsessionid": {
        "title": "GlobalJSONContainerStorage.setSessionID() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.globaljsoncontainerstorage.setuser": {
        "title": "GlobalJSONContainerStorage.setUser() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.identity": {
        "title": "Identity type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.jsonarray": {
        "title": "JSONArray interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.jsonobject": {
        "title": "JSONObject interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.jsonvalue": {
        "title": "JSONValue type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.localstoragestoragedriver": {
        "title": "localStorageStorageDriver variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web": {
        "title": "web package"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthauthorizationurloptions": {
        "title": "OAuthAuthorizationURLOptions type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.claims": {
        "title": "OAuthIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.id": {
        "title": "OAuthIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity": {
        "title": "OAuthIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.providertype": {
        "title": "OAuthIdentity.providerType property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.provideruserid": {
        "title": "OAuthIdentity.providerUserID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.rawprofile": {
        "title": "OAuthIdentity.rawProfile property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthidentity.type": {
        "title": "OAuthIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebpopupauthorizationurloptions.action": {
        "title": "OAuthWebPopupAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebpopupauthorizationurloptions": {
        "title": "OAuthWebPopupAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebpopupauthorizationurloptions.uxmode": {
        "title": "OAuthWebPopupAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebredirectauthorizationurloptions.action": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.action property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebredirectauthorizationurloptions.callbackurl": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.callbackURL property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebredirectauthorizationurloptions": {
        "title": "OAuthWebRedirectAuthorizationURLOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.oauthwebredirectauthorizationurloptions.uxmode": {
        "title": "OAuthWebRedirectAuthorizationURLOptions.uxMode property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.claims": {
        "title": "PasswordIdentity.claims property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.id": {
        "title": "PasswordIdentity.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.loginid": {
        "title": "PasswordIdentity.loginID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.loginidkey": {
        "title": "PasswordIdentity.loginIDKey property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity": {
        "title": "PasswordIdentity interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.realm": {
        "title": "PasswordIdentity.realm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.passwordidentity.type": {
        "title": "PasswordIdentity.type property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.createdat": {
        "title": "Session.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.createdbyip": {
        "title": "Session.createdByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.data": {
        "title": "Session.data property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.id": {
        "title": "Session.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.identityid": {
        "title": "Session.identityID property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.lastaccessedat": {
        "title": "Session.lastAccessedAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.lastaccessedbyip": {
        "title": "Session.lastAccessedByIP property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session": {
        "title": "Session interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.name": {
        "title": "Session.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.session.useragent": {
        "title": "Session.userAgent property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.devicemodel": {
        "title": "SessionUserAgent.deviceModel property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.devicename": {
        "title": "SessionUserAgent.deviceName property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent": {
        "title": "SessionUserAgent interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.name": {
        "title": "SessionUserAgent.name property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.os": {
        "title": "SessionUserAgent.os property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.osversion": {
        "title": "SessionUserAgent.osVersion property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.raw": {
        "title": "SessionUserAgent.raw property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.sessionuseragent.version": {
        "title": "SessionUserAgent.version property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.skygearerror._constructor_": {
        "title": "SkygearError.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.skygearerror.info": {
        "title": "SkygearError.info property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.skygearerror": {
        "title": "SkygearError class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.skygearerrorname": {
        "title": "SkygearErrorName type"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.ssologinoptions": {
        "title": "SSOLoginOptions interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.ssologinoptions.mergerealm": {
        "title": "SSOLoginOptions.mergeRealm property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.ssologinoptions.onuserduplicate": {
        "title": "SSOLoginOptions.onUserDuplicate property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.storagedriver.del": {
        "title": "StorageDriver.del() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.storagedriver.get": {
        "title": "StorageDriver.get() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.storagedriver": {
        "title": "StorageDriver interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.storagedriver.set": {
        "title": "StorageDriver.set() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.createdat": {
        "title": "User.createdAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.id": {
        "title": "User.id property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.isdisabled": {
        "title": "User.isDisabled property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.isverified": {
        "title": "User.isVerified property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.lastloginat": {
        "title": "User.lastLoginAt property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user": {
        "title": "User interface"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.user.metadata": {
        "title": "User.metadata property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.version": {
        "title": "VERSION variable"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webapiclient.fetchfunction": {
        "title": "WebAPIClient.fetchFunction property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webapiclient": {
        "title": "WebAPIClient class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webapiclient.requestclass": {
        "title": "WebAPIClient.requestClass property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer._constructor_": {
        "title": "WebAuthContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.getlinkredirectresult": {
        "title": "WebAuthContainer.getLinkRedirectResult() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.getloginredirectresult": {
        "title": "WebAuthContainer.getLoginRedirectResult() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.linkoauthproviderwithpopup": {
        "title": "WebAuthContainer.linkOAuthProviderWithPopup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.linkoauthproviderwithredirect": {
        "title": "WebAuthContainer.linkOAuthProviderWithRedirect() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.loginoauthproviderwithpopup": {
        "title": "WebAuthContainer.loginOAuthProviderWithPopup() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer.loginoauthproviderwithredirect": {
        "title": "WebAuthContainer.loginOAuthProviderWithRedirect() method"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webauthcontainer": {
        "title": "WebAuthContainer class"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webcontainer._constructor_": {
        "title": "WebContainer.(constructor)"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webcontainer.auth": {
        "title": "WebContainer.auth property"
      },
      "version-2.0.0-alpha.11/version-2.0.0-alpha.11-web.webcontainer": {
        "title": "WebContainer class"
      }
    },
    "links": {
      "API Reference": "API Reference"
    },
    "categories": {
      "Docusaurus": "Docusaurus",
      "First Category": "First Category",
      "Second Category": "Second Category"
    }
  },
  "pages-strings": {
    "Help Translate|recruit community translators for your project": "Help Translate",
    "Edit this Doc|recruitment message asking to edit the doc source": "Edit",
    "Translate this Doc|recruitment message asking to translate the docs": "Translate"
  }
}
